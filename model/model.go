//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/pplorins/unidoc-examples
package model ;import (_ba "bufio";_gd "bytes";_ee "crypto/rand";_a "crypto/sha1";_gg "crypto/x509";_d "encoding/binary";_c "encoding/hex";_ge "errors";_e "fmt";_egg "github.com/pplorins/pkcs7";_gge "github.com/pplorins/unipdf/v3/common";_dbc "github.com/pplorins/unipdf/v3/core";_fb "github.com/pplorins/unipdf/v3/core/security";_ac "github.com/pplorins/unipdf/v3/core/security/crypt";_ce "github.com/pplorins/unipdf/v3/internal/cmap";_ggd "github.com/pplorins/unipdf/v3/internal/imageutil";_gc "github.com/pplorins/unipdf/v3/internal/license";_bee "github.com/pplorins/unipdf/v3/internal/sampling";_cg "github.com/pplorins/unipdf/v3/internal/textencoding";_aca "github.com/pplorins/unipdf/v3/model/internal/fonts";_db "github.com/pplorins/unipdf/v3/model/sigutil";_de "github.com/pplorins/unipdf/v3/ps";_gbd "github.com/pplorins/unitype";_egb "golang.org/x/xerrors";_fe "image";_da "image/color";_ "image/gif";_ "image/png";_ec "io";_dd "io/ioutil";_bc "math";_be "math/rand";_eg "os";_fc "regexp";_ag "sort";_gb "strconv";_ab "strings";_b "sync";_f "time";_ef "unicode";_ddg "unicode/utf8";);

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _dbc .StreamEncoder )(*XObjectImage ,error ){_bfgee :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bfgee ,img ,cs ,encoder );};var _bcbfe =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// ToPdfObject implements interface PdfModel.
func (_dbdg *PdfAnnotationSquare )ToPdfObject ()_dbc .PdfObject {_dbdg .PdfAnnotation .ToPdfObject ();_bdcd :=_dbdg ._gef ;_aaba :=_bdcd .PdfObject .(*_dbc .PdfObjectDictionary );if _dbdg .PdfAnnotationMarkup !=nil {_dbdg .PdfAnnotationMarkup .appendToPdfDictionary (_aaba );};_aaba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_aaba .SetIfNotNil ("\u0042\u0053",_dbdg .BS );_aaba .SetIfNotNil ("\u0049\u0043",_dbdg .IC );_aaba .SetIfNotNil ("\u0042\u0045",_dbdg .BE );_aaba .SetIfNotNil ("\u0052\u0044",_dbdg .RD );return _bdcd ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cgged *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_edbc ,_eccca :=_dbc .GetDict (_cgged ._eddef .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eccca {_edbc =_dbc .MakeDict ();_cgged ._eddef .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_edbc );};_fdecb ,_eccca :=_dbc .GetDict (_edbc .Get (_dbc .PdfObjectName (extName )));if !_eccca {_fdecb =_dbc .MakeDict ();_edbc .Set (_dbc .PdfObjectName (extName ),_fdecb );};if _gbgec ,_ :=_dbc .GetNameVal (_fdecb .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_gbgec !=baseVersion {_fdecb .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_dbc .MakeName (baseVersion ));};if _aagcd ,_ :=_dbc .GetIntVal (_fdecb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_aagcd !=extLevel {_fdecb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_dbc .MakeInteger (int64 (extLevel )));};};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bbadb *LTV )Enable (sig *PdfSignature ,extraCerts []*_gg .Certificate )error {if _ggeaa :=_bbadb .validateSig (sig );_ggeaa !=nil {return _ggeaa ;};_cfab ,_cced :=_bbadb .generateVRIKey (sig );if _cced !=nil {return _cced ;};if _ ,_dcde :=_bbadb ._ecbd .VRI [_cfab ];_dcde &&_bbadb .SkipExisting {return nil ;};_afcd ,_cced :=sig .GetCerts ();if _cced !=nil {return _cced ;};return _bbadb .enable (_afcd ,extraCerts ,_cfab );};func (_dfeg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fcba :=NewPdfAnnotation ();_bbd :=&PdfAnnotation3D {};_bbd .PdfAnnotation =_fcba ;_fcba .SetContext (_bbd );return _bbd ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_gbbgc *PdfShading )GetContainingPdfObject ()_dbc .PdfObject {return _gbbgc ._bdgfb };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_dbc .PdfObjectArray ;Domain *_dbc .PdfObjectArray ;Function []PdfFunction ;Extend *_dbc .PdfObjectArray ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_agcb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// SetContext sets the sub annotation (context).
func (_ebg *PdfAnnotation )SetContext (ctx PdfModel ){_ebg ._fgf =ctx };func (_dgcd *Image )samplesTrimPadding (_caegc []uint32 )[]uint32 {_abadf :=_dgcd .ColorComponents *int (_dgcd .Width )*int (_dgcd .Height );if len (_caegc )==_abadf {return _caegc ;};_agacg :=make ([]uint32 ,_abadf );_fdfaf :=int (_dgcd .Width )*_dgcd .ColorComponents ;var _bccb ,_aaecd ,_aeee ,_efgab int ;_agagf :=_ggd .BytesPerLine (int (_dgcd .Width ),int (_dgcd .BitsPerComponent ),_dgcd .ColorComponents );for _bccb =0;_bccb < int (_dgcd .Height );_bccb ++{_aaecd =_bccb *int (_dgcd .Width );_aeee =_bccb *_agagf ;for _efgab =0;_efgab < _fdfaf ;_efgab ++{_agacg [_aaecd +_efgab ]=_caegc [_aeee +_efgab ];};};return _agacg ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dbec :=PdfColorDeviceGray (grayVal );return &_dbec ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dcccg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ge .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_bbce :=field .V ;if _bbce ==nil {return _ge .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gdda :=pageNum -1;if _gdda < 0||_gdda > len (_dcccg ._cgedd )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gea :=_dcccg .Reader .PageList [_gdda ];field .P =_gea .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_dbc .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_gea .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dcccg ._fece ==_dcccg ._cdef .AcroForm {_dcccg ._fece =_dcccg .Reader .AcroForm ;};_bbbf :=_dcccg ._fece ;if _bbbf ==nil {_bbbf =NewPdfAcroForm ();};_bbbf .SigFlags =_dbc .MakeInteger (3);_cfca :=append (_bbbf .AllFields (),field .PdfField );_bbbf .Fields =&_cfca ;_dcccg .ReplaceAcroForm (_bbbf );_dcccg .UpdatePage (_gea );_dcccg ._cgedd [_gdda ]=_gea ;return nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _dbc .PdfObject ;MK _dbc .PdfObject ;A _dbc .PdfObject ;AA _dbc .PdfObject ;};func (_cfc *PdfReader )newPdfAnnotationScreenFromDict (_fgbf *_dbc .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gdcba :=PdfAnnotationScreen {};_gdcba .T =_fgbf .Get ("\u0054");_gdcba .MK =_fgbf .Get ("\u004d\u004b");_gdcba .A =_fgbf .Get ("\u0041");_gdcba .AA =_fgbf .Get ("\u0041\u0041");return &_gdcba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edeeff *PdfFilespec )ToPdfObject ()_dbc .PdfObject {_daab :=_edeeff .getDict ();_daab .Clear ();_daab .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_daab .SetIfNotNil ("\u0046\u0053",_edeeff .FS );_daab .SetIfNotNil ("\u0046",_edeeff .F );_daab .SetIfNotNil ("\u0055\u0046",_edeeff .UF );_daab .SetIfNotNil ("\u0044\u004f\u0053",_edeeff .DOS );_daab .SetIfNotNil ("\u004d\u0061\u0063",_edeeff .Mac );_daab .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edeeff .Unix );_daab .SetIfNotNil ("\u0049\u0044",_edeeff .ID );_daab .SetIfNotNil ("\u0056",_edeeff .V );_daab .SetIfNotNil ("\u0045\u0046",_edeeff .EF );_daab .SetIfNotNil ("\u0052\u0046",_edeeff .RF );_daab .SetIfNotNil ("\u0044\u0065\u0073\u0063",_edeeff .Desc );_daab .SetIfNotNil ("\u0043\u0049",_edeeff .CI );return _edeeff ._gbfcg ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_decf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffab :=func (_dcab float64 )float64 {if _dcab >=6.0/29{return _dcab *_dcab *_dcab ;};return 108.0/841*(_dcab -4/29);};_cbfcd ,_aegc :=color .(*PdfColorLab );if !_aegc {_gge .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cbfcd .L ();AStar :=_cbfcd .A ();BStar :=_cbfcd .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_decf .WhitePoint [0]*_ffab (L );Y :=_decf .WhitePoint [1]*_ffab (M );Z :=_decf .WhitePoint [2]*_ffab (N );_badg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggga :=-0.969256*X +1.875992*Y +0.041556*Z ;_beef :=0.055648*X +-0.204043*Y +1.057311*Z ;_badg =_bc .Min (_bc .Max (_badg ,0),1.0);_ggga =_bc .Min (_bc .Max (_ggga ,0),1.0);_beef =_bc .Min (_bc .Max (_beef ,0),1.0);return NewPdfColorDeviceRGB (_badg ,_ggga ,_beef ),nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_dfegf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _dfegf ._ceef .getFontDescriptor (),nil ;};func _cfbf (_cede _dbc .PdfObject )(*PdfBorderStyle ,error ){_ffgb :=&PdfBorderStyle {};_ffgb ._fceb =_cede ;var _gca *_dbc .PdfObjectDictionary ;_cede =_dbc .TraceToDirectObject (_cede );_gca ,_dacag :=_cede .(*_dbc .PdfObjectDictionary );if !_dacag {return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dacb :=_gca .Get ("\u0054\u0079\u0070\u0065");_dacb !=nil {_ffeg ,_gdgb :=_dacb .(*_dbc .PdfObjectName );if !_gdgb {_gge .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dacb );}else {if *_ffeg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gge .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ffeg );};};};if _dfe :=_gca .Get ("\u0057");_dfe !=nil {_edb ,_ebe :=_dbc .GetNumberAsFloat (_dfe );if _ebe !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ebe );return nil ,_ebe ;};_ffgb .W =&_edb ;};if _eeef :=_gca .Get ("\u0053");_eeef !=nil {_cfefc ,_gedb :=_eeef .(*_dbc .PdfObjectName );if !_gedb {return nil ,_ge .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _eabd BorderStyle ;switch *_cfefc {case "\u0053":_eabd =BorderStyleSolid ;case "\u0044":_eabd =BorderStyleDashed ;case "\u0042":_eabd =BorderStyleBeveled ;case "\u0049":_eabd =BorderStyleInset ;case "\u0055":_eabd =BorderStyleUnderline ;default:_gge .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_cfefc );return nil ,_ge .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_ffgb .S =&_eabd ;};if _fega :=_gca .Get ("\u0044");_fega !=nil {_acca ,_deee :=_fega .(*_dbc .PdfObjectArray );if !_deee {_gge .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fega );return nil ,_ge .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_gaad ,_eddb :=_acca .ToIntegerArray ();if _eddb !=nil {_gge .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_eddb );return nil ,_eddb ;};_ffgb .D =&_gaad ;};return _ffgb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbdbed *PdfShadingType7 )ToPdfObject ()_dbc .PdfObject {_fbdbed .PdfShading .ToPdfObject ();_fagaff ,_fgbg :=_fbdbed .getShadingDict ();if _fgbg !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fbdbed .BitsPerCoordinate !=nil {_fagaff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbdbed .BitsPerCoordinate );};if _fbdbed .BitsPerComponent !=nil {_fagaff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbdbed .BitsPerComponent );};if _fbdbed .BitsPerFlag !=nil {_fagaff .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbdbed .BitsPerFlag );};if _fbdbed .Decode !=nil {_fagaff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbdbed .Decode );};if _fbdbed .Function !=nil {if len (_fbdbed .Function )==1{_fagaff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbdbed .Function [0].ToPdfObject ());}else {_bebde :=_dbc .MakeArray ();for _ ,_eccfg :=range _fbdbed .Function {_bebde .Append (_eccfg .ToPdfObject ());};_fagaff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bebde );};};return _fbdbed ._bdgfb ;};

// GetOutlineTree returns the outline tree.
func (_bbfaa *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bbfaa ._ffca };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dbde *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dbde .baseFields ()._gadcb !=nil {return _dbde .baseFields ()._gadcb ;};if _dgc :=_dbde ._ceef .getFontDescriptor ();_dgc !=nil {return _dgc ;};_gge .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dbde );return nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_bddcga *PdfAcroForm )AllFields ()[]*PdfField {if _bddcga ==nil {return nil ;};var _gcdbe []*PdfField ;if _bddcga .Fields !=nil {for _ ,_cgcdf :=range *_bddcga .Fields {_gcdbe =append (_gcdbe ,_dgbdd (_cgcdf )...);};};return _gcdbe ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bgee *LTV )EnableChain (chain []*_gg .Certificate )error {return _bgee .enable (nil ,chain ,"")};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// Add appends a top level outline item to the outline.
func (_gabaa *Outline )Add (item *OutlineItem ){_gabaa .Entries =append (_gabaa .Entries ,item )};func (_bfdf PdfFont )actualFont ()pdfFont {if _bfdf ._ceef ==nil {_gge .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bfdf );};return _bfdf ._ceef ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bdfb *Image )ColorAt (x ,y int )(_da .Color ,error ){_eegcb :=_ggd .BytesPerLine (int (_bdfb .Width ),int (_bdfb .BitsPerComponent ),_bdfb .ColorComponents );switch _bdfb .ColorComponents {case 1:return _ggd .ColorAtGrayscale (x ,y ,int (_bdfb .BitsPerComponent ),_eegcb ,_bdfb .Data ,_bdfb ._fgabe );case 3:return _ggd .ColorAtNRGBA (x ,y ,int (_bdfb .Width ),_eegcb ,int (_bdfb .BitsPerComponent ),_bdfb .Data ,_bdfb ._gaaea ,_bdfb ._fgabe );case 4:return _ggd .ColorAtCMYK (x ,y ,int (_bdfb .Width ),_bdfb .Data ,_bdfb ._fgabe );};_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdfb .ColorComponents ,_bdfb .BitsPerComponent );return nil ,_ge .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_gaca *PdfReader )newPdfAcroFormFromDict (_gecbc *_dbc .PdfIndirectObject ,_eded *_dbc .PdfObjectDictionary )(*PdfAcroForm ,error ){_addea :=NewPdfAcroForm ();if _gecbc !=nil {_addea ._abcd =_gecbc ;_gecbc .PdfObject =_dbc .MakeDict ();};if _gcab :=_eded .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gcab !=nil {_dedfa ,_gaaf :=_dbc .GetArray (_gcab );if !_gaaf {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gcab );};var _bggec []*PdfField ;for _ ,_adbd :=range _dedfa .Elements (){_beegg ,_fdfa :=_dbc .GetIndirect (_adbd );if !_fdfa {if _ ,_gged :=_adbd .(*_dbc .PdfObjectNull );_gged {_gge .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_gge .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_adbd );return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebadf ,_ebcd :=_gaca .newPdfFieldFromIndirectObject (_beegg ,nil );if _ebcd !=nil {return nil ,_ebcd ;};_gge .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ebadf );_bggec =append (_bggec ,_ebadf );};_addea .Fields =&_bggec ;};if _bedb :=_eded .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bedb !=nil {_gbgda ,_ddgaa :=_dbc .GetBool (_bedb );if _ddgaa {_addea .NeedAppearances =_gbgda ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bedb );};};if _dggea :=_eded .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dggea !=nil {_ggcee ,_cadeea :=_dbc .GetInt (_dggea );if _cadeea {_addea .SigFlags =_ggcee ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dggea );};};if _gffad :=_eded .Get ("\u0043\u004f");_gffad !=nil {_febb ,_ebaba :=_dbc .GetArray (_gffad );if _ebaba {_addea .CO =_febb ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gffad );};};if _ccbd :=_eded .Get ("\u0044\u0052");_ccbd !=nil {if _gcded ,_ddgg :=_dbc .GetDict (_ccbd );_ddgg {_efabf ,_fcdba :=NewPdfPageResourcesFromDict (_gcded );if _fcdba !=nil {_gge .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fcdba );return nil ,_fcdba ;};_addea .DR =_efabf ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccbd );};};if _bdeb :=_eded .Get ("\u0044\u0041");_bdeb !=nil {_cbbg ,_fgbaf :=_dbc .GetString (_bdeb );if _fgbaf {_addea .DA =_cbbg ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdeb );};};if _afcc :=_eded .Get ("\u0051");_afcc !=nil {_gcacfc ,_adgda :=_dbc .GetInt (_afcc );if _adgda {_addea .Q =_gcacfc ;}else {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_afcc );};};if _egafb :=_eded .Get ("\u0058\u0046\u0041");_egafb !=nil {_addea .XFA =_egafb ;};_addea .ToPdfObject ();return _addea ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _dbc .PdfObject ;Flags _dbc .PdfObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cfd :=NewPdfAnnotation ();_ecg :=&PdfAnnotationLine {};_ecg .PdfAnnotation =_cfd ;_ecg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfd .SetContext (_ecg );return _ecg ;};func (_bfea *PdfReader )newPdfAnnotationUnderlineFromDict (_dbab *_dbc .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fag :=PdfAnnotationUnderline {};_eacbd ,_bfab :=_bfea .newPdfAnnotationMarkupFromDict (_dbab );if _bfab !=nil {return nil ,_bfab ;};_fag .PdfAnnotationMarkup =_eacbd ;_fag .QuadPoints =_dbab .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fag ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faf *PdfAnnotationRedact )ToPdfObject ()_dbc .PdfObject {_faf .PdfAnnotation .ToPdfObject ();_bfge :=_faf ._gef ;_bbdf :=_bfge .PdfObject .(*_dbc .PdfObjectDictionary );_faf .PdfAnnotationMarkup .appendToPdfDictionary (_bbdf );_bbdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_bbdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_faf .QuadPoints );_bbdf .SetIfNotNil ("\u0049\u0043",_faf .IC );_bbdf .SetIfNotNil ("\u0052\u004f",_faf .RO );_bbdf .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_faf .OverlayText );_bbdf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_faf .Repeat );_bbdf .SetIfNotNil ("\u0044\u0041",_faf .DA );_bbdf .SetIfNotNil ("\u0051",_faf .Q );return _bfge ;};func (_feced *PdfReader )newPdfOutlineItemFromIndirectObject (_baabb *_dbc .PdfIndirectObject )(*PdfOutlineItem ,error ){_bagb ,_abdgg :=_baabb .PdfObject .(*_dbc .PdfObjectDictionary );if !_abdgg {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bdaga :=NewPdfOutlineItem ();_acgda :=_bagb .Get ("\u0054\u0069\u0074l\u0065");if _acgda ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_bafa ,_febg :=_dbc .GetString (_acgda );if !_febg {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_acgda );};_bdaga .Title =_bafa ;if _ccgdg :=_bagb .Get ("\u0043\u006f\u0075n\u0074");_ccgdg !=nil {_bcgfa ,_bfcd :=_ccgdg .(*_dbc .PdfObjectInteger );if !_bfcd {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_ccgdg );};_fgef :=int64 (*_bcgfa );_bdaga .Count =&_fgef ;};if _faefg :=_bagb .Get ("\u0044\u0065\u0073\u0074");_faefg !=nil {_bdaga .Dest =_dbc .ResolveReference (_faefg );if !_feced ._fcbf {_dafab :=_feced .traverseObjectData (_bdaga .Dest );if _dafab !=nil {return nil ,_dafab ;};};};if _egfcb :=_bagb .Get ("\u0041");_egfcb !=nil {_bdaga .A =_dbc .ResolveReference (_egfcb );if !_feced ._fcbf {_feea :=_feced .traverseObjectData (_bdaga .A );if _feea !=nil {return nil ,_feea ;};};};if _gdaed :=_bagb .Get ("\u0053\u0045");_gdaed !=nil {_bdaga .SE =nil ;};if _bafab :=_bagb .Get ("\u0043");_bafab !=nil {_bdaga .C =_dbc .ResolveReference (_bafab );};if _acddg :=_bagb .Get ("\u0046");_acddg !=nil {_bdaga .F =_dbc .ResolveReference (_acddg );};return _bdaga ,nil ;};func (_acb *PdfReader )newPdfActionLaunchFromDict (_eda *_dbc .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ecbcb ,_aba :=_cgg (_eda .Get ("\u0046"));if _aba !=nil {return nil ,_aba ;};return &PdfActionLaunch {Win :_eda .Get ("\u0057\u0069\u006e"),Mac :_eda .Get ("\u004d\u0061\u0063"),Unix :_eda .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_eda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ecbcb },nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ddgb *PdfFieldButton )GetType ()ButtonType {_dadc :=ButtonTypeCheckbox ;if _ddgb .Ff !=nil {if (uint32 (*_ddgb .Ff )&FieldFlagPushbutton .Mask ())> 0{_dadc =ButtonTypePush ;}else if (uint32 (*_ddgb .Ff )&FieldFlagRadio .Mask ())> 0{_dadc =ButtonTypeRadio ;};};return _dadc ;};

// BaseFont returns the font's "BaseFont" field.
func (_cggab *PdfFont )BaseFont ()string {return _cggab .baseFields ()._cebb };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _dbc .PdfObject ;FS _dbc .PdfObject ;F _dbc .PdfObject ;UF _dbc .PdfObject ;DOS _dbc .PdfObject ;Mac _dbc .PdfObject ;Unix _dbc .PdfObject ;ID _dbc .PdfObject ;V _dbc .PdfObject ;EF _dbc .PdfObject ;RF _dbc .PdfObject ;Desc _dbc .PdfObject ;CI _dbc .PdfObject ;_gbfcg _dbc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bad *PdfAnnotationLine )ToPdfObject ()_dbc .PdfObject {_bad .PdfAnnotation .ToPdfObject ();_ffc :=_bad ._gef ;_aade :=_ffc .PdfObject .(*_dbc .PdfObjectDictionary );_bad .PdfAnnotationMarkup .appendToPdfDictionary (_aade );_aade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u004c\u0069\u006e\u0065"));_aade .SetIfNotNil ("\u004c",_bad .L );_aade .SetIfNotNil ("\u0042\u0053",_bad .BS );_aade .SetIfNotNil ("\u004c\u0045",_bad .LE );_aade .SetIfNotNil ("\u0049\u0043",_bad .IC );_aade .SetIfNotNil ("\u004c\u004c",_bad .LL );_aade .SetIfNotNil ("\u004c\u004c\u0045",_bad .LLE );_aade .SetIfNotNil ("\u0043\u0061\u0070",_bad .Cap );_aade .SetIfNotNil ("\u0049\u0054",_bad .IT );_aade .SetIfNotNil ("\u004c\u004c\u004f",_bad .LLO );_aade .SetIfNotNil ("\u0043\u0050",_bad .CP );_aade .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bad .Measure );_aade .SetIfNotNil ("\u0043\u004f",_bad .CO );return _ffc ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fdd *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dcegg :=0.3*_fdd .R ()+0.59*_fdd .G ()+0.11*_fdd .B ();_dcegg =_bc .Min (_bc .Max (_dcegg ,0.0),1.0);return NewPdfColorDeviceGray (_dcegg );};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_cbgb *PdfWriter )SetDocInfo (info *PdfInfo ){if _cbgb .hasObject (_cbgb ._fffe ){delete (_cbgb ._ebdbb ,_cbgb ._fffe );delete (_cbgb ._acdgca ,_cbgb ._fffe );for _gbbgcc ,_gbaeg :=range _cbgb ._cded {if _gbaeg ==_cbgb ._fffe {copy (_cbgb ._cded [_gbbgcc :],_cbgb ._cded [_gbbgcc +1:]);_cbgb ._cded [len (_cbgb ._cded )-1]=nil ;_cbgb ._cded =_cbgb ._cded [:len (_cbgb ._cded )-1];break ;};};};_bccg :=_dbc .PdfIndirectObject {};_bccg .PdfObject =info .ToPdfObject ();_cbgb ._fffe =&_bccg ;_cbgb .addObject (&_bccg );};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _dbc .PdfObject ;Name _dbc .PdfObject ;State _dbc .PdfObject ;StateModel _dbc .PdfObject ;};func (_gccf *PdfReader )newPdfAnnotationWatermarkFromDict (_ddc *_dbc .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eaf :=PdfAnnotationWatermark {};_eaf .FixedPrint =_ddc .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_eaf ,nil ;};func _ddag (_bcace _dbc .PdfObject )(*PdfFontDescriptor ,error ){_cbac :=&PdfFontDescriptor {};_bcace =_dbc .ResolveReference (_bcace );if _cggd ,_bcce :=_bcace .(*_dbc .PdfIndirectObject );_bcce {_cbac ._fedde =_cggd ;_bcace =_cggd .PdfObject ;};_gfbd ,_cgdcg :=_dbc .GetDict (_bcace );if !_cgdcg {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bcace );return nil ,_dbc .ErrTypeError ;};if _eacg :=_gfbd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eacg !=nil {_cbac .FontName =_eacg ;}else {_gge .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_afddg ,_ :=_dbc .GetName (_cbac .FontName );if _adeb :=_gfbd .Get ("\u0054\u0079\u0070\u0065");_adeb !=nil {_bbeaa ,_gdfg :=_adeb .(*_dbc .PdfObjectName );if !_gdfg ||string (*_bbeaa )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gge .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_adeb ,_afddg ,_cbac .FontName );};}else {_gge .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_afddg ,_cbac .FontName );};_cbac .FontFamily =_gfbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cbac .FontStretch =_gfbd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cbac .FontWeight =_gfbd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_cbac .Flags =_gfbd .Get ("\u0046\u006c\u0061g\u0073");_cbac .FontBBox =_gfbd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cbac .ItalicAngle =_gfbd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cbac .Ascent =_gfbd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_cbac .Descent =_gfbd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cbac .Leading =_gfbd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cbac .CapHeight =_gfbd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cbac .XHeight =_gfbd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_cbac .StemV =_gfbd .Get ("\u0053\u0074\u0065m\u0056");_cbac .StemH =_gfbd .Get ("\u0053\u0074\u0065m\u0048");_cbac .AvgWidth =_gfbd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cbac .MaxWidth =_gfbd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_cbac .MissingWidth =_gfbd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cbac .FontFile =_gfbd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cbac .FontFile2 =_gfbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_cbac .FontFile3 =_gfbd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cbac .CharSet =_gfbd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cbac .Style =_gfbd .Get ("\u0053\u0074\u0079l\u0065");_cbac .Lang =_gfbd .Get ("\u004c\u0061\u006e\u0067");_cbac .FD =_gfbd .Get ("\u0046\u0044");_cbac .CIDSet =_gfbd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cbac .Flags !=nil {if _bcegg ,_adac :=_dbc .GetIntVal (_cbac .Flags );_adac {_cbac ._fcaaea =_bcegg ;};};if _cbac .MissingWidth !=nil {if _dbabf ,_bdcg :=_dbc .GetNumberAsFloat (_cbac .MissingWidth );_bdcg ==nil {_cbac ._edfdb =_dbabf ;};};if _cbac .FontFile !=nil {_fgba ,_gcac :=_gfdef (_cbac .FontFile );if _gcac !=nil {return _cbac ,_gcac ;};_gge .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_fgba );_cbac .fontFile =_fgba ;};if _cbac .FontFile2 !=nil {_aafbb ,_baaa :=_aca .NewFontFile2FromPdfObject (_cbac .FontFile2 );if _baaa !=nil {return _cbac ,_baaa ;};_gge .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_aafbb .String ());_cbac ._ggcad =&_aafbb ;};return _cbac ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_aca .StdFontName ;

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_aca .CharMetrics ;func (_efgdd Image )getBase ()_ggd .ImageBase {return _ggd .NewImageBase (int (_efgdd .Width ),int (_efgdd .Height ),int (_efgdd .BitsPerComponent ),_efgdd .ColorComponents ,_efgdd .Data ,_efgdd ._gaaea ,_efgdd ._fgabe );};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cbdg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_cgdce :=&PdfColorPattern {};_aagd ,_ccaee :=objects [len (objects )-1].(*_dbc .PdfObjectName );if !_ccaee {_gge .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_cgdce .PatternName =*_aagd ;if len (objects )> 1{_caeb :=objects [0:len (objects )-1];if _cbdg .UnderlyingCS ==nil {_gge .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_ge .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aaff ,_aecc :=_cbdg .UnderlyingCS .ColorFromPdfObjects (_caeb );if _aecc !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_aecc );return nil ,_aecc ;};_cgdce .Color =_aaff ;};return _cgdce ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_adeda *PdfRectangle )ToPdfObject ()_dbc .PdfObject {return _dbc .MakeArray (_dbc .MakeFloat (_adeda .Llx ),_dbc .MakeFloat (_adeda .Lly ),_dbc .MakeFloat (_adeda .Urx ),_dbc .MakeFloat (_adeda .Ury ));};

// SetDate sets the `M` field of the signature.
func (_ecdf *PdfSignature )SetDate (date _f .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ecdf .M =_dbc .MakeString (date .Format (format ));};func (_daeg *DSS )generateHashMap (_ecea []*_dbc .PdfObjectStream )(map[string ]*_dbc .PdfObjectStream ,error ){_decb :=map[string ]*_dbc .PdfObjectStream {};for _ ,_befcg :=range _ecea {_cgadd ,_cgee :=_dbc .DecodeStream (_befcg );if _cgee !=nil {return nil ,_cgee ;};_bbefce ,_cgee :=_fbfa (_cgadd );if _cgee !=nil {return nil ,_cgee ;};_decb [string (_bbefce )]=_befcg ;};return _decb ,nil ;};func (_fbfcg *LTV )generateVRIKey (_cebbc *PdfSignature )(string ,error ){_dggd ,_ecca :=_fbfa (_cebbc .Contents .Bytes ());if _ecca !=nil {return "",_ecca ;};return _ab .ToUpper (_c .EncodeToString (_dggd )),nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fdae *PdfField )ToPdfObject ()_dbc .PdfObject {_bdcdf :=_fdae ._befed ;_cfeec :=_bdcdf .PdfObject .(*_dbc .PdfObjectDictionary );_bfeg :=_dbc .MakeArray ();for _ ,_ffgc :=range _fdae .Kids {_bfeg .Append (_ffgc .ToPdfObject ());};for _ ,_cgbe :=range _fdae .Annotations {if _cgbe ._gef !=_fdae ._befed {_bfeg .Append (_cgbe .GetContext ().ToPdfObject ());};};if _fdae .Parent !=nil {_cfeec .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdae .Parent .GetContainingPdfObject ());};if _bfeg .Len ()> 0{_cfeec .Set ("\u004b\u0069\u0064\u0073",_bfeg );};_cfeec .SetIfNotNil ("\u0046\u0054",_fdae .FT );_cfeec .SetIfNotNil ("\u0054",_fdae .T );_cfeec .SetIfNotNil ("\u0054\u0055",_fdae .TU );_cfeec .SetIfNotNil ("\u0054\u004d",_fdae .TM );_cfeec .SetIfNotNil ("\u0046\u0066",_fdae .Ff );_cfeec .SetIfNotNil ("\u0056",_fdae .V );_cfeec .SetIfNotNil ("\u0044\u0056",_fdae .DV );_cfeec .SetIfNotNil ("\u0041\u0041",_fdae .AA );return _bdcdf ;};func (_cdgfda *PdfPage )getParentResources ()(*PdfPageResources ,error ){_eeaaa :=_cdgfda .Parent ;for _eeaaa !=nil {_cefdec ,_fcfce :=_dbc .GetDict (_eeaaa );if !_fcfce {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ge .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _gdfge :=_cefdec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdfge !=nil {_acfea ,_bbdfg :=_dbc .GetDict (_gdfge );if !_bbdfg {return nil ,_ge .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_feebag ,_aaafe :=NewPdfPageResourcesFromDict (_acfea );if _aaafe !=nil {return nil ,_aaafe ;};return _feebag ,nil ;};_eeaaa =_cefdec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_eeff :=PdfColorCalGray (grayVal );return &_eeff ;};

// ToPdfObject returns the PDF representation of the function.
func (_bcgf *PdfFunctionType2 )ToPdfObject ()_dbc .PdfObject {_ddbb :=_dbc .MakeDict ();_ddbb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dbc .MakeInteger (2));_bgda :=&_dbc .PdfObjectArray {};for _ ,_deca :=range _bcgf .Domain {_bgda .Append (_dbc .MakeFloat (_deca ));};_ddbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgda );if _bcgf .Range !=nil {_adfg :=&_dbc .PdfObjectArray {};for _ ,_ffad :=range _bcgf .Range {_adfg .Append (_dbc .MakeFloat (_ffad ));};_ddbb .Set ("\u0052\u0061\u006eg\u0065",_adfg );};if _bcgf .C0 !=nil {_cagfa :=&_dbc .PdfObjectArray {};for _ ,_dgbgf :=range _bcgf .C0 {_cagfa .Append (_dbc .MakeFloat (_dgbgf ));};_ddbb .Set ("\u0043\u0030",_cagfa );};if _bcgf .C1 !=nil {_babdg :=&_dbc .PdfObjectArray {};for _ ,_abdc :=range _bcgf .C1 {_babdg .Append (_dbc .MakeFloat (_abdc ));};_ddbb .Set ("\u0043\u0031",_babdg );};_ddbb .Set ("\u004e",_dbc .MakeFloat (_bcgf .N ));if _bcgf ._ggbcb !=nil {_bcgf ._ggbcb .PdfObject =_ddbb ;return _bcgf ._ggbcb ;};return _ddbb ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cg .SimpleEncoder ,error ){_ccdfd ,_bdaag :=_gdgab (basefont );if _bdaag !=nil {return nil ,nil ,_bdaag ;};_gfgd ,_gdbe :=_ccdfd .Encoder ().(_cg .SimpleEncoder );if !_gdbe {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ccdfd .Encoder ());};_dbeea :=make (map[rune ]_cg .GlyphName );for _afabeb :=range alphabet {if _ ,_affd :=_gfgd .RuneToCharcode (_afabeb );!_affd {_ ,_acdgc :=_ccdfd ._bacea [_afabeb ];if !_acdgc {_gge .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_afabeb ,_afabeb );continue ;};_bdbg ,_acdgc :=_cg .RuneToGlyph (_afabeb );if !_acdgc {_gge .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_afabeb ,_afabeb );continue ;};if len (_dbeea )>=255{return nil ,nil ,_ge .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_dbeea [_afabeb ]=_bdbg ;};};var (_cagf []_cg .CharCode ;_caaed []_cg .CharCode ;);for _ggfb :=_cg .CharCode (1);_ggfb <=0xff;_ggfb ++{_gfgee ,_aabeb :=_gfgd .CharcodeToRune (_ggfb );if !_aabeb {_cagf =append (_cagf ,_ggfb );continue ;};if _ ,_aabeb =alphabet [_gfgee ];!_aabeb {_caaed =append (_caaed ,_ggfb );};};_bbfbb :=append (_cagf ,_caaed ...);if len (_bbfbb )< len (_dbeea ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dbeea ),len (_bbfbb ));};_gbfb :=make ([]rune ,0,len (_dbeea ));for _ccdb :=range _dbeea {_gbfb =append (_gbfb ,_ccdb );};_ag .Slice (_gbfb ,func (_dabda ,_bafd int )bool {return _gbfb [_dabda ]< _gbfb [_bafd ]});_cggca :=make (map[_cg .CharCode ]_cg .GlyphName ,len (_gbfb ));for _ ,_gdbf :=range _gbfb {_bcgde :=_bbfbb [0];_bbfbb =_bbfbb [1:];_cggca [_bcgde ]=_dbeea [_gdbf ];};_gfgd =_cg .ApplyDifferences (_gfgd ,_cggca );_ccdfd .SetEncoder (_gfgd );return &PdfFont {_ceef :&_ccdfd },_gfgd ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_accb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecgfd ,_afac :=_dbc .GetNumbersAsFloat (objects );if _afac !=nil {return nil ,_afac ;};return _accb .ColorFromFloats (_ecgfd );};func (_cedb *PdfReader )newPdfAnnotationRedactFromDict (_gaab *_dbc .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_dfbg :=PdfAnnotationRedact {};_afg ,_ccfe :=_cedb .newPdfAnnotationMarkupFromDict (_gaab );if _ccfe !=nil {return nil ,_ccfe ;};_dfbg .PdfAnnotationMarkup =_afg ;_dfbg .QuadPoints =_gaab .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dfbg .IC =_gaab .Get ("\u0049\u0043");_dfbg .RO =_gaab .Get ("\u0052\u004f");_dfbg .OverlayText =_gaab .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_dfbg .Repeat =_gaab .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_dfbg .DA =_gaab .Get ("\u0044\u0041");_dfbg .Q =_gaab .Get ("\u0051");return &_dfbg ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fa :=NewPdfAction ();_eag :=&PdfActionGoTo {};_eag .PdfAction =_fa ;_fa .SetContext (_eag );return _eag ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_ggb :=NewPdfAnnotation ();_gafd :=&PdfAnnotationPopup {};_gafd .PdfAnnotation =_ggb ;_ggb .SetContext (_gafd );return _gafd ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_abeb *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ebb :=NewPdfAnnotation ();_eebc :=&PdfAnnotationRedact {};_eebc .PdfAnnotation =_ebb ;_eebc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebb .SetContext (_eebc );return _eebc ;};

// Width returns the width of `rect`.
func (_aeadd *PdfRectangle )Width ()float64 {return _bc .Abs (_aeadd .Urx -_aeadd .Llx )};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_dcdg :=PdfWriter {};_dcdg ._ebdbb =map[_dbc .PdfObject ]struct{}{};_dcdg ._cded =[]_dbc .PdfObject {};_dcdg ._aeeg =map[_dbc .PdfObject ][]*_dbc .PdfObjectDictionary {};_dcdg ._acdgca =map[_dbc .PdfObject ]struct{}{};_dcdg ._ccaec =1;_dcdg ._adaa =3;_acbad :=_dbc .MakeDict ();_deafg :=[]struct{_cfega _dbc .PdfObjectName ;_dgdda string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cbfbc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bgde ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_egfdf ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_abffg ()},{"\u0054\u0069\u0074l\u0065",_cacae ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fbdfa ()}};for _ ,_cgcdg :=range _deafg {if _cgcdg ._dgdda !=""{_acbad .Set (_cgcdg ._cfega ,_dbc .MakeString (_cgcdg ._dgdda ));};};if _bdageg :=_ceggc ();!_bdageg .IsZero (){if _faea ,_fbbcg :=NewPdfDateFromTime (_bdageg );_fbbcg ==nil {_acbad .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_faea .ToPdfObject ());};};if _gfac :=_dgeab ();!_gfac .IsZero (){if _bgbga ,_egbac :=NewPdfDateFromTime (_gfac );_egbac ==nil {_acbad .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bgbga .ToPdfObject ());};};_ffgaac :=_dbc .PdfIndirectObject {};_ffgaac .PdfObject =_acbad ;_dcdg ._fffe =&_ffgaac ;_dcdg .addObject (&_ffgaac );_efcbe :=_dbc .PdfIndirectObject {};_ggfa :=_dbc .MakeDict ();_ggfa .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_efcbe .PdfObject =_ggfa ;_dcdg ._ccdgg =&_efcbe ;_dcdg .addObject (_dcdg ._ccdgg );_cgbdg ,_cceg :=_dcfga ("\u0077");if _cceg !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cceg );};_dcdg ._gefbb =_cgbdg ;_cadad :=_dbc .PdfIndirectObject {};_egdec :=_dbc .MakeDict ();_egdec .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0050\u0061\u0067e\u0073"));_cbbbf :=_dbc .PdfObjectArray {};_egdec .Set ("\u004b\u0069\u0064\u0073",&_cbbbf );_egdec .Set ("\u0043\u006f\u0075n\u0074",_dbc .MakeInteger (0));_cadad .PdfObject =_egdec ;_dcdg ._ggcdf =&_cadad ;_dcdg ._ccfgc =map[_dbc .PdfObject ]struct{}{};_dcdg .addObject (_dcdg ._ggcdf );_ggfa .Set ("\u0050\u0061\u0067e\u0073",&_cadad );_dcdg ._eddef =_ggfa ;_gge .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_efcbe );return _dcdg ;};func (_fgb *PdfReader )newPdfAnnotationFreeTextFromDict (_ffbe *_dbc .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gdae :=PdfAnnotationFreeText {};_gddd ,_agec :=_fgb .newPdfAnnotationMarkupFromDict (_ffbe );if _agec !=nil {return nil ,_agec ;};_gdae .PdfAnnotationMarkup =_gddd ;_gdae .DA =_ffbe .Get ("\u0044\u0041");_gdae .Q =_ffbe .Get ("\u0051");_gdae .RC =_ffbe .Get ("\u0052\u0043");_gdae .DS =_ffbe .Get ("\u0044\u0053");_gdae .CL =_ffbe .Get ("\u0043\u004c");_gdae .IT =_ffbe .Get ("\u0049\u0054");_gdae .BE =_ffbe .Get ("\u0042\u0045");_gdae .RD =_ffbe .Get ("\u0052\u0044");_gdae .BS =_ffbe .Get ("\u0042\u0053");_gdae .LE =_ffbe .Get ("\u004c\u0045");return &_gdae ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _dbc .PdfObject )(*PdfFilespec ,error ){_aadc :=&PdfFilespec {};var _bcddg *_dbc .PdfObjectDictionary ;if _bgaf ,_bccf :=_dbc .GetIndirect (obj );_bccf {_aadc ._gbfcg =_bgaf ;_cdcbe ,_ebeb :=_dbc .GetDict (_bgaf .PdfObject );if !_ebeb {_gge .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_dbc .ErrTypeError ;};_bcddg =_cdcbe ;}else if _ceaa ,_eebbd :=_dbc .GetDict (obj );_eebbd {_aadc ._gbfcg =_ceaa ;_bcddg =_ceaa ;}else {_gge .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_dbc .ErrTypeError ;};if _bcddg ==nil {_gge .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ge .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dcbg :=_bcddg .Get ("\u0054\u0079\u0070\u0065");_dcbg !=nil {_bcgd ,_ffabg :=_dcbg .(*_dbc .PdfObjectName );if !_ffabg {_gge .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dcbg );}else {if *_bcgd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gge .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bcgd );};};};if _cccge :=_bcddg .Get ("\u0046\u0053");_cccge !=nil {_aadc .FS =_cccge ;};if _bfdgf :=_bcddg .Get ("\u0046");_bfdgf !=nil {_aadc .F =_bfdgf ;};if _dabb :=_bcddg .Get ("\u0055\u0046");_dabb !=nil {_aadc .UF =_dabb ;};if _daebd :=_bcddg .Get ("\u0044\u004f\u0053");_daebd !=nil {_aadc .DOS =_daebd ;};if _becd :=_bcddg .Get ("\u004d\u0061\u0063");_becd !=nil {_aadc .Mac =_becd ;};if _eccc :=_bcddg .Get ("\u0055\u006e\u0069\u0078");_eccc !=nil {_aadc .Unix =_eccc ;};if _dgaf :=_bcddg .Get ("\u0049\u0044");_dgaf !=nil {_aadc .ID =_dgaf ;};if _cbag :=_bcddg .Get ("\u0056");_cbag !=nil {_aadc .V =_cbag ;};if _cege :=_bcddg .Get ("\u0045\u0046");_cege !=nil {_aadc .EF =_cege ;};if _gbacf :=_bcddg .Get ("\u0052\u0046");_gbacf !=nil {_aadc .RF =_gbacf ;};if _cgeee :=_bcddg .Get ("\u0044\u0065\u0073\u0063");_cgeee !=nil {_aadc .Desc =_cgeee ;};if _defa :=_bcddg .Get ("\u0043\u0049");_defa !=nil {_aadc .CI =_defa ;};return _aadc ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ebac :=&PdfFilespec {};_ebac ._gbfcg =_dbc .MakeIndirectObject (_dbc .MakeDict ());return _ebac ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bcgdb *PdfWriter )SetNamedDestinations (names _dbc .PdfObject )error {if names ==nil {return nil ;};_gge .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_bcgdb ._eddef .Set ("\u004e\u0061\u006de\u0073",names );return _bcgdb .addObjects (names );};func (_bacd *PdfReader )newPdfFieldFromIndirectObject (_effc *_dbc .PdfIndirectObject ,_accg *PdfField )(*PdfField ,error ){if _bdcfd ,_dbcbc :=_bacd ._dcga .GetModelFromPrimitive (_effc ).(*PdfField );_dbcbc {return _bdcfd ,nil ;};_ggee ,_ebfe :=_dbc .GetDict (_effc );if !_ebfe {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_baec :=NewPdfField ();_baec ._befed =_effc ;_baec ._befed .PdfObject =_ggee ;if _gcdgb ,_cfcee :=_dbc .GetName (_ggee .Get ("\u0046\u0054"));_cfcee {_baec .FT =_gcdgb ;};if _accg !=nil {_baec .Parent =_accg ;};_baec .T ,_ =_ggee .Get ("\u0054").(*_dbc .PdfObjectString );_baec .TU ,_ =_ggee .Get ("\u0054\u0055").(*_dbc .PdfObjectString );_baec .TM ,_ =_ggee .Get ("\u0054\u004d").(*_dbc .PdfObjectString );_baec .Ff ,_ =_ggee .Get ("\u0046\u0066").(*_dbc .PdfObjectInteger );_baec .V =_ggee .Get ("\u0056");_baec .DV =_ggee .Get ("\u0044\u0056");_baec .AA =_ggee .Get ("\u0041\u0041");_afacg :=_baec .FT ;if _afacg ==nil &&_accg !=nil {_afacg =_accg .FT ;};if _afacg !=nil {switch *_afacg {case "\u0054\u0078":_dbbe ,_egdg :=_edfac (_ggee );if _egdg !=nil {return nil ,_egdg ;};_dbbe .PdfField =_baec ;_baec ._cgda =_dbbe ;case "\u0043\u0068":_ebfc ,_cdbe :=_cccb (_ggee );if _cdbe !=nil {return nil ,_cdbe ;};_ebfc .PdfField =_baec ;_baec ._cgda =_ebfc ;case "\u0042\u0074\u006e":_gaaec ,_dabae :=_ecda (_ggee );if _dabae !=nil {return nil ,_dabae ;};_gaaec .PdfField =_baec ;_baec ._cgda =_gaaec ;case "\u0053\u0069\u0067":_cdeb ,_geae :=_bacd .newPdfFieldSignatureFromDict (_ggee );if _geae !=nil {return nil ,_geae ;};_cdeb .PdfField =_baec ;_baec ._cgda =_cdeb ;default:_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_baec .FT );return nil ,_ge .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _fagg ,_fefcf :=_dbc .GetName (_ggee .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_fefcf {if *_fagg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cffd ,_fedf :=_bacd .newPdfAnnotationFromIndirectObject (_effc );if _fedf !=nil {return nil ,_fedf ;};_bcgb ,_ccec :=_cffd .GetContext ().(*PdfAnnotationWidget );if !_ccec {return nil ,_ge .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bcgb ._agbg =_baec ;_bcgb .Parent =_baec ._befed ;_baec .Annotations =append (_baec .Annotations ,_bcgb );return _baec ,nil ;};};_dccea :=true ;if _fcgba ,_dacd :=_dbc .GetArray (_ggee .Get ("\u004b\u0069\u0064\u0073"));_dacd {_bedce :=make ([]*_dbc .PdfIndirectObject ,0,_fcgba .Len ());for _ ,_fgeg :=range _fcgba .Elements (){_dggaa ,_acfd :=_dbc .GetIndirect (_fgeg );if !_acfd {_cbcg ,_ddce :=_dbc .GetStream (_fgeg );if _ddce &&_cbcg .PdfObjectDictionary !=nil {_cgde ,_debb :=_dbc .GetNameVal (_cbcg .Get ("\u0054\u0079\u0070\u0065"));if _debb &&_cgde =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gge .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_ge .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_edaee ,_bfdg :=_dbc .GetDict (_dggaa );if !_bfdg {return nil ,ErrTypeCheck ;};if _dccea {_dccea =!_fdff (_edaee );};_bedce =append (_bedce ,_dggaa );};for _ ,_bdecb :=range _bedce {if _dccea {_abbc ,_gegcb :=_bacd .newPdfAnnotationFromIndirectObject (_bdecb );if _gegcb !=nil {_gge .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gegcb );return nil ,_gegcb ;};_bccc ,_cbdgf :=_abbc ._fgf .(*PdfAnnotationWidget );if !_cbdgf {return nil ,ErrTypeCheck ;};_bccc ._agbg =_baec ;_baec .Annotations =append (_baec .Annotations ,_bccc );}else {_edeb ,_begdc :=_bacd .newPdfFieldFromIndirectObject (_bdecb ,_baec );if _begdc !=nil {_gge .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_begdc );return nil ,_begdc ;};_baec .Kids =append (_baec .Kids ,_edeb );};};};return _baec ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_aggg *PdfPage )error ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fegb *PdfAnnotation )GetContext ()PdfModel {if _fegb ==nil {return nil ;};return _fegb ._fgf ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_afgeg *PdfPattern )SetContext (ctx PdfModel ){_afgeg ._dabbe =ctx };

// ToPdfObject implements interface PdfModel.
func (_aegfc *PdfAnnotationFreeText )ToPdfObject ()_dbc .PdfObject {_aegfc .PdfAnnotation .ToPdfObject ();_gdef :=_aegfc ._gef ;_eeba :=_gdef .PdfObject .(*_dbc .PdfObjectDictionary );_aegfc .PdfAnnotationMarkup .appendToPdfDictionary (_eeba );_eeba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_eeba .SetIfNotNil ("\u0044\u0041",_aegfc .DA );_eeba .SetIfNotNil ("\u0051",_aegfc .Q );_eeba .SetIfNotNil ("\u0052\u0043",_aegfc .RC );_eeba .SetIfNotNil ("\u0044\u0053",_aegfc .DS );_eeba .SetIfNotNil ("\u0043\u004c",_aegfc .CL );_eeba .SetIfNotNil ("\u0049\u0054",_aegfc .IT );_eeba .SetIfNotNil ("\u0042\u0045",_aegfc .BE );_eeba .SetIfNotNil ("\u0052\u0044",_aegfc .RD );_eeba .SetIfNotNil ("\u0042\u0053",_aegfc .BS );_eeba .SetIfNotNil ("\u004c\u0045",_aegfc .LE );return _gdef ;};func (_ecaff *pdfFontSimple )baseFields ()*fontCommon {return &_ecaff .fontCommon };

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_feb *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ge .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_bbdd ,_fgge :=_ggd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaaea ,img ._fgabe );if _fgge !=nil {return img ,_fgge ;};_agdeg ,_fgge :=_ggd .NRGBAConverter .Convert (_bbdd );if _fgge !=nil {return img ,_fgge ;};_aeb :=_dfddd (_agdeg .Base ());_gge .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gge .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gge .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_aeb .Data );_gge .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_aeb );return _aeb ,nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _f .Time ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_bfg *PdfReader )newPdfActionJavaScriptFromDict (_egbb *_dbc .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_egbb .Get ("\u004a\u0053")},nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fgac *PdfFont )CharcodesToUnicode (charcodes []_cg .CharCode )[]rune {_bfgd ,_ ,_ :=_fgac .CharcodesToUnicodeWithStats (charcodes );return _bfgd ;};func (_cbfcg *LTV )getCerts (_gcff []*_gg .Certificate )([][]byte ,error ){_adad :=make ([][]byte ,0,len (_gcff ));for _ ,_bgef :=range _gcff {_adad =append (_adad ,_bgef .Raw );};return _adad ,nil ;};func _bceg (_gdcbb _dbc .PdfObject )(*_dbc .PdfObjectDictionary ,*fontCommon ,error ){_cadd :=&fontCommon {};if _bcfa ,_bgcde :=_gdcbb .(*_dbc .PdfIndirectObject );_bgcde {_cadd ._egbc =_bcfa .ObjectNumber ;};_ebff ,_feeba :=_dbc .GetDict (_gdcbb );if !_feeba {_gge .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdcbb );return nil ,nil ,ErrFontNotSupported ;};_fgcca ,_feeba :=_dbc .GetNameVal (_ebff .Get ("\u0054\u0079\u0070\u0065"));if !_feeba {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgcca !="\u0046\u006f\u006e\u0074"{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgcca ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_dbc .ErrTypeError ;};_egcf ,_feeba :=_dbc .GetNameVal (_ebff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_feeba {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_cadd ._abdbb =_egcf ;_bafb ,_feeba :=_dbc .GetNameVal (_ebff .Get ("\u004e\u0061\u006d\u0065"));if _feeba {_cadd ._afda =_bafb ;};if _egcf =="\u0054\u0079\u0070e\u0033"{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_ebff );return _ebff ,_cadd ,ErrType3FontNotSupported ;};_gcfc ,_feeba :=_dbc .GetNameVal (_ebff .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_feeba {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _ebff ,_cadd ,ErrRequiredAttributeMissing ;};_cadd ._cebb =_gcfc ;_fbegd :=_ebff .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fbegd !=nil {_dbge ,_effbb :=_ddag (_fbegd );if _effbb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_effbb );return _ebff ,_cadd ,_effbb ;};_cadd ._gadcb =_dbge ;};_beebg :=_ebff .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _beebg !=nil {_cadd ._cefde =_dbc .TraceToDirectObject (_beebg );_gbbb ,_acdce :=_fdef (_cadd ._cefde ,_cadd );if _acdce !=nil {return _ebff ,_cadd ,_acdce ;};_cadd ._caga =_gbbb ;}else if _egcf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_egcf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fead ,_gbaff :=_ce .NewCIDSystemInfo (_ebff .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _gbaff !=nil {return _ebff ,_cadd ,_gbaff ;};_gbcea :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fead .Registry ,_fead .Ordering );if _ce .IsPredefinedCMap (_gbcea ){_cadd ._caga ,_gbaff =_ce .LoadPredefinedCMap (_gbcea );if _gbaff !=nil {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gbcea ,_gbaff );};};};return _ebff ,_cadd ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ggec *PdfAppender )UpdateObject (obj _dbc .PdfObject ){_ggec .replaceObject (obj ,obj );if _ ,_dfad :=_ggec ._agag [obj ];!_dfad {_ggec ._fgea =append (_ggec ._fgea ,obj );_ggec ._agag [obj ]=struct{}{};};};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gegf :=&PdfBorderStyle {};return _gegf };

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcfb *PdfColorspaceSpecialSeparation )ToPdfObject ()_dbc .PdfObject {_gdcee :=_dbc .MakeArray (_dbc .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_gdcee .Append (_dcfb .ColorantName );_gdcee .Append (_dcfb .AlternateSpace .ToPdfObject ());_gdcee .Append (_dcfb .TintTransform .ToPdfObject ());if _dcfb ._eegb !=nil {_dcfb ._eegb .PdfObject =_gdcee ;return _dcfb ._eegb ;};return _gdcee ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cbef ,_gdgad :=NewStandard14Font (basefont );if _gdgad !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _cbef ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionJavaScript )ToPdfObject ()_dbc .PdfObject {_ecb .PdfAction .ToPdfObject ();_cdf :=_ecb ._ff ;_bbe :=_cdf .PdfObject .(*_dbc .PdfObjectDictionary );_bbe .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeJavaScript )));_bbe .SetIfNotNil ("\u004a\u0053",_ecb .JS );return _cdf ;};

// ImageToRGB convert an indexed image to RGB.
func (_eebb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_eebb .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_aea :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gaaea ,img ._fgabe );_faeg :=_bee .NewReader (img .getBase ());_face :=_bee .NewWriter (_aea );var (_cgbd uint32 ;_bddc int ;_cfdf error ;);for {_cgbd ,_cfdf =_faeg .ReadSample ();if _cfdf ==_ec .EOF {break ;}else if _cfdf !=nil {return img ,_cfdf ;};_bddc =int (_cgbd );_gge .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bddc ,N ,len (_eebb ._dabc ));if (_bddc +1)*N > len (_eebb ._dabc ){_bddc =len (_eebb ._dabc )/N -1;_gge .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bddc );if _bddc < 0{_gge .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _bccdc :=_bddc *N ;_bccdc < (_bddc +1)*N ;_bccdc ++{if _cfdf =_face .WriteSample (uint32 (_eebb ._dabc [_bccdc ]));_cfdf !=nil {return img ,_cfdf ;};};};return _eebb .Base .ImageToRGB (_dfddd (&_aea ));};

// ToPdfObject implements interface PdfModel.
func (_fdec *PdfAnnotationWidget )ToPdfObject ()_dbc .PdfObject {_fdec .PdfAnnotation .ToPdfObject ();_gdbg :=_fdec ._gef ;_add :=_gdbg .PdfObject .(*_dbc .PdfObjectDictionary );if _fdec ._dce {return _gdbg ;};_fdec ._dce =true ;_add .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_add .SetIfNotNil ("\u0048",_fdec .H );_add .SetIfNotNil ("\u004d\u004b",_fdec .MK );_add .SetIfNotNil ("\u0041",_fdec .A );_add .SetIfNotNil ("\u0041\u0041",_fdec .AA );_add .SetIfNotNil ("\u0042\u0053",_fdec .BS );_afge :=_fdec .Parent ;if _fdec ._agbg !=nil {if _fdec ._agbg ._befed ==_fdec ._gef {_fdec ._agbg .ToPdfObject ();};_afge =_fdec ._agbg .GetContainingPdfObject ();};if _afge !=_gdbg {_add .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_afge );};_fdec ._dce =false ;return _gdbg ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gaba *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gaba .AlternateSpace ==nil {return nil ,_ge .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _gaba .AlternateSpace .ColorToRGB (color );};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_dbc .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// GetContainingPdfObject implements interface PdfModel.
func (_dedge *PdfFilespec )GetContainingPdfObject ()_dbc .PdfObject {return _dedge ._gbfcg };

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_dbc .PdfIndirectObject ;SV *_dbc .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_eedb *PdfColorspaceLab )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baad ,_cdecd :=_dbc .GetNumbersAsFloat (objects );if _cdecd !=nil {return nil ,_cdecd ;};return _eedb .ColorFromFloats (_baad );};

// K returns the value of the key component of the color.
func (_ddcfa *PdfColorDeviceCMYK )K ()float64 {return _ddcfa [3]};func (_eafe *PdfField )inherit (_afgdb func (*PdfField )bool )(bool ,error ){_fcaac :=map[*PdfField ]bool {};_cgea :=false ;_gadc :=_eafe ;for _gadc !=nil {if _ ,_ecdd :=_fcaac [_gadc ];_ecdd {return false ,_ge .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_bedg :=_afgdb (_gadc );if _bedg {_cgea =true ;break ;};_fcaac [_gadc ]=true ;_gadc =_gadc .Parent ;};return _cgea ,nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_fcggg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _daeb []float64 ;for _dfcef :=0;_dfcef < _fcggg .GetNumComponents ();_dfcef ++{_daeb =append (_daeb ,0.0,1.0);};return _daeb ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_bdcb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bdcb .Alternate ==nil {_gge .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _bdcb .N ==1{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_efgf :=NewPdfColorspaceDeviceGray ();return _efgf .ColorToRGB (color );}else if _bdcb .N ==3{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _bdcb .N ==4{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_egcd :=NewPdfColorspaceDeviceCMYK ();return _egcd .ColorToRGB (color );}else {return nil ,_ge .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_gge .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bdcb );return _bdcb .Alternate .ColorToRGB (color );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ffddd OutlineDest )ToPdfObject ()_dbc .PdfObject {if (_ffddd .PageObj ==nil &&_ffddd .Page < 0)||_ffddd .Mode ==""{return _dbc .MakeNull ();};_afeea :=_dbc .MakeArray ();if _ffddd .PageObj !=nil {_afeea .Append (_ffddd .PageObj );}else {_afeea .Append (_dbc .MakeInteger (_ffddd .Page ));};_afeea .Append (_dbc .MakeName (_ffddd .Mode ));switch _ffddd .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_afeea .Append (_dbc .MakeFloat (_ffddd .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_afeea .Append (_dbc .MakeFloat (_ffddd .X ));case "\u0058\u0059\u005a":_afeea .Append (_dbc .MakeFloat (_ffddd .X ));_afeea .Append (_dbc .MakeFloat (_ffddd .Y ));_afeea .Append (_dbc .MakeFloat (_ffddd .Zoom ));default:_afeea .Set (1,_dbc .MakeName ("\u0046\u0069\u0074"));};return _afeea ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_cdee :=PdfColorCalRGB {a ,b ,c };return &_cdee ;};func _caee (_agdb _dbc .PdfObject )(*PdfColorspaceLab ,error ){_gbbc :=NewPdfColorspaceLab ();if _cagd ,_fadc :=_agdb .(*_dbc .PdfIndirectObject );_fadc {_gbbc ._beae =_cagd ;};_agdb =_dbc .TraceToDirectObject (_agdb );_egfcg ,_dcbd :=_agdb .(*_dbc .PdfObjectArray );if !_dcbd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egfcg .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_agdb =_dbc .TraceToDirectObject (_egfcg .Get (0));_aefec ,_dcbd :=_agdb .(*_dbc .PdfObjectName );if !_dcbd {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_aefec !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_agdb =_dbc .TraceToDirectObject (_egfcg .Get (1));_egdf ,_dcbd :=_agdb .(*_dbc .PdfObjectDictionary );if !_dcbd {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_agdb =_egdf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_agdb =_dbc .TraceToDirectObject (_agdb );_fdaa ,_dcbd :=_agdb .(*_dbc .PdfObjectArray );if !_dcbd {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _fdaa .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_egda ,_dgfe :=_fdaa .GetAsFloat64Slice ();if _dgfe !=nil {return nil ,_dgfe ;};_gbbc .WhitePoint =_egda ;_agdb =_egdf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _agdb !=nil {_agdb =_dbc .TraceToDirectObject (_agdb );_dcdff ,_dacf :=_agdb .(*_dbc .PdfObjectArray );if !_dacf {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dcdff .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_efgg ,_fage :=_dcdff .GetAsFloat64Slice ();if _fage !=nil {return nil ,_fage ;};_gbbc .BlackPoint =_efgg ;};_agdb =_egdf .Get ("\u0052\u0061\u006eg\u0065");if _agdb !=nil {_agdb =_dbc .TraceToDirectObject (_agdb );_egabd ,_befc :=_agdb .(*_dbc .PdfObjectArray );if !_befc {_gge .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egabd .Len ()!=4{_gge .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_acgea ,_fgaga :=_egabd .GetAsFloat64Slice ();if _fgaga !=nil {return nil ,_fgaga ;};_gbbc .Range =_acgea ;};return _gbbc ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ad :=NewPdfAction ();_eed :=&PdfActionGoToR {};_eed .PdfAction =_ad ;_ad .SetContext (_eed );return _eed ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_dbc .PdfObjectStream )(*XObjectForm ,error ){_cfbgf :=&XObjectForm {};_cfbgf ._bacgb =stream ;_accdf :=*(stream .PdfObjectDictionary );_feagc ,_aacbd :=_dbc .NewEncoderFromStream (stream );if _aacbd !=nil {return nil ,_aacbd ;};_cfbgf .Filter =_feagc ;if _ebddd :=_accdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ebddd !=nil {_dcabe ,_dgdgd :=_ebddd .(*_dbc .PdfObjectName );if !_dgdgd {return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_dcabe !="\u0046\u006f\u0072\u006d"{_gge .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ge .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _cacbd :=_accdf .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_cacbd !=nil {_cfbgf .FormType =_cacbd ;};if _bbbea :=_accdf .Get ("\u0042\u0042\u006f\u0078");_bbbea !=nil {_cfbgf .BBox =_bbbea ;};if _eaece :=_accdf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eaece !=nil {_cfbgf .Matrix =_eaece ;};if _bcadd :=_accdf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bcadd !=nil {_bcadd =_dbc .TraceToDirectObject (_bcadd );_bgdc ,_daaag :=_bcadd .(*_dbc .PdfObjectDictionary );if !_daaag {_gge .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_dbc .ErrTypeError ;};_dfgae ,_dgdgda :=NewPdfPageResourcesFromDict (_bgdc );if _dgdgda !=nil {_gge .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_dgdgda ;};_cfbgf .Resources =_dfgae ;_gge .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cfbgf .Resources );};_cfbgf .Group =_accdf .Get ("\u0047\u0072\u006fu\u0070");_cfbgf .Ref =_accdf .Get ("\u0052\u0065\u0066");_cfbgf .MetaData =_accdf .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cfbgf .PieceInfo =_accdf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cfbgf .LastModified =_accdf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cfbgf .StructParent =_accdf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cfbgf .StructParents =_accdf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cfbgf .OPI =_accdf .Get ("\u004f\u0050\u0049");_cfbgf .OC =_accdf .Get ("\u004f\u0043");_cfbgf .Name =_accdf .Get ("\u004e\u0061\u006d\u0065");_cfbgf .Stream =stream .Stream ;return _cfbgf ,nil ;};

// ToInteger convert to an integer format.
func (_dgfd *PdfColorCalGray )ToInteger (bits int )uint32 {_agdee :=_bc .Pow (2,float64 (bits ))-1;return uint32 (_agdee *_dgfd .Val ());};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func _dcaf (_bada _dbc .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gge .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_bada .String (),_bada );_cgbf :=NewPdfColorspaceSpecialPattern ();if _bbced ,_fcgbe :=_bada .(*_dbc .PdfIndirectObject );_fcgbe {_cgbf ._gaga =_bbced ;};_bada =_dbc .TraceToDirectObject (_bada );if _caedf ,_bcdd :=_bada .(*_dbc .PdfObjectName );_bcdd {if *_caedf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _cgbf ,nil ;};_acgc ,_gcbf :=_bada .(*_dbc .PdfObjectArray );if !_gcbf {_gge .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_bada );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _acgc .Len ()!=1&&_acgc .Len ()!=2{_gge .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_acgc );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_bada =_acgc .Get (0);if _fgcc ,_eecf :=_bada .(*_dbc .PdfObjectName );_eecf {if *_fgcc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gge .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_fgcc );return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _acgc .Len ()> 1{_bada =_acgc .Get (1);_bada =_dbc .TraceToDirectObject (_bada );_gead ,_faac :=NewPdfColorspaceFromPdfObject (_bada );if _faac !=nil {return nil ,_faac ;};_cgbf .UnderlyingCS =_gead ;};_gge .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_cgbf .UnderlyingCS );return _cgbf ,nil ;};func (_bec *DSS )addOCSPs (_dbga [][]byte )([]*_dbc .PdfObjectStream ,error ){return _bec .add (&_bec .OCSPs ,_bec ._aead ,_dbga );};

// A returns the value of the A component of the color.
func (_dfdb *PdfColorLab )A ()float64 {return _dfdb [1]};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_gcdd :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_gcdd ;};

// ToPdfObject implements interface PdfModel.
func (_cag *PdfActionGoTo )ToPdfObject ()_dbc .PdfObject {_cag .PdfAction .ToPdfObject ();_ggc :=_cag ._ff ;_bcd :=_ggc .PdfObject .(*_dbc .PdfObjectDictionary );_bcd .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeGoTo )));_bcd .SetIfNotNil ("\u0044",_cag .D );return _ggc ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gaga *_dbc .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_cbad *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccae ,_bege :=_dbc .GetNumbersAsFloat (objects );if _bege !=nil {return nil ,_bege ;};return _cbad .ColorFromFloats (_ccae );};func (_adf *PdfReader )newPdfActionTransFromDict (_cggg *_dbc .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_cggg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _dbc .PdfObject ;BS _dbc .PdfObject ;LE _dbc .PdfObject ;IC _dbc .PdfObject ;LL _dbc .PdfObject ;LLE _dbc .PdfObject ;Cap _dbc .PdfObject ;IT _dbc .PdfObject ;LLO _dbc .PdfObject ;CP _dbc .PdfObject ;Measure _dbc .PdfObject ;CO _dbc .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ffdc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fdffa :=RC4_128bit ;if options !=nil {_fdffa =options .Algorithm ;};_aadaa :=_fb .PermOwner ;if options !=nil {_aadaa =options .Permissions ;};var _ccgga _ac .Filter ;switch _fdffa {case RC4_128bit :_ccgga =_ac .NewFilterV2 (16);case AES_128bit :_ccgga =_ac .NewFilterAESV2 ();case AES_256bit :_ccgga =_ac .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_ffcd ,_gggad ,_dgcab :=_dbc .PdfCryptNewEncrypt (_ccgga ,userPass ,ownerPass ,_aadaa );if _dgcab !=nil {return _dgcab ;};_ffdc ._bdgee =_ffcd ;if _gggad .Major !=0{_ffdc .SetVersion (_gggad .Major ,_gggad .Minor );};_ffdc ._baag =_gggad .Encrypt ;_ffdc ._fbgddd =_dbc .MakeArray (_dbc .MakeHexString (_gggad .ID0 ),_dbc .MakeHexString (_gggad .ID1 ));_cbagf :=_dbc .MakeIndirectObject (_gggad .Encrypt );_ffdc ._baegd =_cbagf ;_ffdc .addObject (_cbagf );return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cacc :=&PdfColorspaceSpecialSeparation {};return _cacc ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_fcaa *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_bbbba *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bbbba ._efgcc .GetCrypter ()!=nil &&!_bbbba ._efgcc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_feac :=_bbbba ._gcaad ;_gccff :=_feac .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gccff ==nil {return nil ,nil ;};_dfcg ,_ :=_dbc .GetIndirect (_gccff );_gccff =_dbc .TraceToDirectObject (_gccff );if _dbc .IsNullObject (_gccff ){_gge .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_cabbbb ,_aaeea :=_dbc .GetDict (_gccff );if !_aaeea {_gge .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gccff );_gge .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gccff );};_gge .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_gge .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bbbba ._fcbf {_abaee :=_bbbba .traverseObjectData (_cabbbb );if _abaee !=nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_abaee );return nil ,_abaee ;};};_agbfe ,_abfab :=_bbbba .newPdfAcroFormFromDict (_dfcg ,_cabbbb );if _abfab !=nil {return nil ,_abfab ;};return _agbfe ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_gddg *_dbc .PdfIndirectObject ;_aeada _cg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_dbc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _dbc .PdfObject ;W _dbc .PdfObject ;DW2 _dbc .PdfObject ;W2 _dbc .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _dbc .PdfObject ;_agadf map[_cg .CharCode ]float64 ;_cbdec float64 ;_adfdb map[rune ]int ;};func (_eab *PdfReader )newPdfAnnotationTextFromDict (_fbe *_dbc .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cbge :=PdfAnnotationText {};_geca ,_ebbc :=_eab .newPdfAnnotationMarkupFromDict (_fbe );if _ebbc !=nil {return nil ,_ebbc ;};_cbge .PdfAnnotationMarkup =_geca ;_cbge .Open =_fbe .Get ("\u004f\u0070\u0065\u006e");_cbge .Name =_fbe .Get ("\u004e\u0061\u006d\u0065");_cbge .State =_fbe .Get ("\u0053\u0074\u0061t\u0065");_cbge .StateModel =_fbe .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_cbge ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _dbc .PdfObject )(PdfColorspace ,error ){var _bebdf *_dbc .PdfIndirectObject ;var _bcgee *_dbc .PdfObjectName ;var _gefg *_dbc .PdfObjectArray ;if _dcgc ,_ddde :=obj .(*_dbc .PdfIndirectObject );_ddde {_bebdf =_dcgc ;};obj =_dbc .TraceToDirectObject (obj );switch _bace :=obj .(type ){case *_dbc .PdfObjectArray :_gefg =_bace ;case *_dbc .PdfObjectName :_bcgee =_bace ;};if _bcgee !=nil {switch *_bcgee {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_gge .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bcgee );return nil ,_eaceb ;};};if _gefg !=nil &&_gefg .Len ()> 0{var _aefb _dbc .PdfObject =_bebdf ;if _bebdf ==nil {_aefb =_gefg ;};if _eegc ,_agad :=_dbc .GetName (_gefg .Get (0));_agad {switch _eegc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gefg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gefg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gefg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _edgg (_aefb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gbaf (_aefb );case "\u004c\u0061\u0062":return _caee (_aefb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cgbb (_aefb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _dcaf (_aefb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gggac (_aefb );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cabbb (_aefb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bagc (_aefb );default:_gge .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eegc );};};};_gge .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// ValidateSignatures validates digital signatures in the document.
func (_bfecd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _bfecd .AcroForm ==nil {return nil ,nil ;};if _bfecd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_afcg *PdfSignature ;_dgdge *PdfField ;_gbca SignatureHandler ;};var _bgcf []*sigFieldPair ;for _ ,_cbcgg :=range _bfecd .AcroForm .AllFields (){if _cbcgg .V ==nil {continue ;};if _cddbca ,_bfdae :=_dbc .GetDict (_cbcgg .V );_bfdae {if _abcb ,_eggf :=_dbc .GetNameVal (_cddbca .Get ("\u0054\u0079\u0070\u0065"));_eggf &&_abcb =="\u0053\u0069\u0067"{_gdfgg ,_cefed :=_dbc .GetIndirect (_cbcgg .V );if !_cefed {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_ecffc ,_cccf :=_bfecd .newPdfSignatureFromIndirect (_gdfgg );if _cccf !=nil {return nil ,_cccf ;};var _fgff SignatureHandler ;for _ ,_ebag :=range handlers {if _ebag .IsApplicable (_ecffc ){_fgff =_ebag ;break ;};};_bgcf =append (_bgcf ,&sigFieldPair {_afcg :_ecffc ,_dgdge :_cbcgg ,_gbca :_fgff });};};};var _cffcda []SignatureValidationResult ;for _ ,_cdcec :=range _bgcf {_agdg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_cdcec ._dgdge }};if _cdcec ._gbca ==nil {_agdg .Errors =append (_agdg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_cffcda =append (_cffcda ,_agdg );continue ;};_eggage ,_gdbcb :=_cdcec ._gbca .NewDigest (_cdcec ._afcg );if _gdbcb !=nil {_agdg .Errors =append (_agdg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_gdbcb .Error ());_cffcda =append (_cffcda ,_agdg );continue ;};_babgg :=_cdcec ._afcg .ByteRange ;if _babgg ==nil {_agdg .Errors =append (_agdg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cffcda =append (_cffcda ,_agdg );continue ;};for _aedfd :=0;_aedfd < _babgg .Len ();_aedfd =_aedfd +2{_accbe ,_ :=_dbc .GetNumberAsInt64 (_babgg .Get (_aedfd ));_edgb ,_ :=_dbc .GetIntVal (_babgg .Get (_aedfd +1));if _ ,_bgdgc :=_bfecd ._egge .Seek (_accbe ,_ec .SeekStart );_bgdgc !=nil {return nil ,_bgdgc ;};_fdgb :=make ([]byte ,_edgb );if _ ,_dfdac :=_bfecd ._egge .Read (_fdgb );_dfdac !=nil {return nil ,_dfdac ;};_eggage .Write (_fdgb );};_agdad ,_gdbcb :=_cdcec ._gbca .Validate (_cdcec ._afcg ,_eggage );if _gdbcb !=nil {return nil ,_gdbcb ;};_agdad .Name =_cdcec ._afcg .Name .Decoded ();_agdad .Reason =_cdcec ._afcg .Reason .Decoded ();if _cdcec ._afcg .M !=nil {_fdebe ,_fdged :=NewPdfDate (_cdcec ._afcg .M .String ());if _fdged !=nil {_agdad .Errors =append (_agdad .Errors ,_fdged .Error ());continue ;};_agdad .Date =_fdebe ;};_agdad .ContactInfo =_cdcec ._afcg .ContactInfo .Decoded ();_agdad .Location =_cdcec ._afcg .Location .Decoded ();_agdad .Fields =_agdg .Fields ;_cffcda =append (_cffcda ,_agdad );};return _cffcda ,nil ;};

// Val returns the color value.
func (_cacfb *PdfColorDeviceGray )Val ()float64 {return float64 (*_cacfb )};func (_aaeg *fontFile )parseASCIIPart (_efcf []byte )error {if len (_efcf )< 2||string (_efcf [:2])!="\u0025\u0021"{return _ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_dedb ,_ebfg ,_abfeg :=_fdbe (_efcf );if _abfeg !=nil {return _abfeg ;};_abfa :=_bcfd (_dedb );_aaeg ._bdfa =_abfa ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _aaeg ._bdfa ==""{_gge .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _ebfg !=""{_ccbgb ,_gadge :=_bgag (_ebfg );if _gadge !=nil {return _gadge ;};_deabcb ,_gadge :=_cg .NewCustomSimpleTextEncoder (_ccbgb ,nil );if _gadge !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gadge );return nil ;};_aaeg ._bgea =_deabcb ;};return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ggdge *PdfReader )PageFromIndirectObject (ind *_dbc .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ggdge .PageList )!=len (_ggdge ._afege ){return nil ,0,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _ddgda ,_bgfag :=range _ggdge ._afege {if _bgfag ==ind {return _ggdge .PageList [_ddgda ],_ddgda +1,nil ;};};return nil ,0,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_ececd *PdfWriter )hasObject (_fcfec _dbc .PdfObject )bool {_ ,_bagae :=_ececd ._ebdbb [_fcfec ];return _bagae ;};func _abbf (_bdgea _dbc .PdfObject )(*PdfPageResourcesColorspaces ,error ){_faacg :=&PdfPageResourcesColorspaces {};if _bcagg ,_fdbf :=_bdgea .(*_dbc .PdfIndirectObject );_fdbf {_faacg ._cgbbc =_bcagg ;_bdgea =_bcagg .PdfObject ;};_edfacc ,_bdgge :=_dbc .GetDict (_bdgea );if !_bdgge {return nil ,_ge .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_faacg .Names =[]string {};_faacg .Colorspaces =map[string ]PdfColorspace {};for _ ,_adgf :=range _edfacc .Keys (){_ebfcg :=_edfacc .Get (_adgf );_faacg .Names =append (_faacg .Names ,string (_adgf ));_bcafg ,_cdaa :=NewPdfColorspaceFromPdfObject (_ebfcg );if _cdaa !=nil {return nil ,_cdaa ;};_faacg .Colorspaces [string (_adgf )]=_bcafg ;};return _faacg ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_bdca *PdfColorspaceSpecialIndexed )ToPdfObject ()_dbc .PdfObject {_dfae :=_dbc .MakeArray (_dbc .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_dfae .Append (_bdca .Base .ToPdfObject ());_dfae .Append (_dbc .MakeInteger (int64 (_bdca .HiVal )));_dfae .Append (_bdca .Lookup );if _bdca ._ccfb !=nil {_bdca ._ccfb .PdfObject =_dfae ;return _bdca ._ccfb ;};return _dfae ;};var _ pdfFont =(*pdfFontType0 )(nil );var _efee =_fc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fedc *PdfFieldButton )ToPdfObject ()_dbc .PdfObject {_fedc .PdfField .ToPdfObject ();_gcggf :=_fedc ._befed ;_agfb :=_gcggf .PdfObject .(*_dbc .PdfObjectDictionary );_agfb .Set ("\u0046\u0054",_dbc .MakeName ("\u0042\u0074\u006e"));if _fedc .Opt !=nil {_agfb .Set ("\u004f\u0070\u0074",_fedc .Opt );};return _gcggf ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bceag *PdfPageResources )GetExtGState (keyName _dbc .PdfObjectName )(_dbc .PdfObject ,bool ){if _bceag .ExtGState ==nil {return nil ,false ;};_bfaae ,_edcd :=_dbc .TraceToDirectObject (_bceag .ExtGState ).(*_dbc .PdfObjectDictionary );if !_edcd {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bceag .ExtGState );return nil ,false ;};if _afdag :=_bfaae .Get (keyName );_afdag !=nil {return _afdag ,true ;};return nil ,false ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_cbgdc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _dbc .GetNumberAsFloat (_cbgdc .Descent );};

// ToPdfObject implements interface PdfModel.
func (_fcd *PdfActionThread )ToPdfObject ()_dbc .PdfObject {_fcd .PdfAction .ToPdfObject ();_aed :=_fcd ._ff ;_ade :=_aed .PdfObject .(*_dbc .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeThread )));if _fcd .F !=nil {_ade .Set ("\u0046",_fcd .F .ToPdfObject ());};_ade .SetIfNotNil ("\u0044",_fcd .D );_ade .SetIfNotNil ("\u0042",_fcd .B );return _aed ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ceef pdfFont };

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_dbc .PdfObjectName ;Colorants _dbc .PdfObject ;Process _dbc .PdfObject ;MixingHints _dbc .PdfObject ;_dded *_dbc .PdfIndirectObject ;};

// HasFontByName checks if has font resource by name.
func (_afed *PdfPage )HasFontByName (name _dbc .PdfObjectName )bool {_ccbdd ,_cdeac :=_afed .Resources .Font .(*_dbc .PdfObjectDictionary );if !_cdeac {return false ;};if _eeaga :=_ccbdd .Get (name );_eeaga !=nil {return true ;};return false ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_eagad *PdfSignature )bool ;Validate (_ccedf *PdfSignature ,_ceacg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gcfff *PdfSignature )(Hasher ,error );Sign (_ebde *PdfSignature ,_bfafa Hasher )error ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_beacf *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acd :=vals [0];if _acd < 0.0||_acd > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbge :=vals [1];if _bbge < 0.0||_bbge > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggac :=vals [2];if _ggac < 0.0||_ggac > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deda :=NewPdfColorDeviceRGB (_acd ,_bbge ,_ggac );return _deda ,nil ;};func _fagcdd (_ecadg _dbc .PdfObject ){_gge .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ecadg ,_ecadg .String ());if _cacb ,_babaf :=_ecadg .(*_dbc .PdfObjectStream );_babaf {_efgde ,_bagef :=_dbc .DecodeStream (_cacb );if _bagef !=nil {_gge .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bagef );return ;};_gge .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_efgde );}else if _fbcfe ,_bcbgd :=_ecadg .(*_dbc .PdfIndirectObject );_bcbgd {_gge .Log .Debug ("\u0025\u0054\u0020%\u0076",_fbcfe .PdfObject ,_fbcfe .PdfObject );_gge .Log .Debug ("\u0025\u0073",_fbcfe .PdfObject .String ());};};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _dbc .PdfObject ;LE _dbc .PdfObject ;BS _dbc .PdfObject ;IC _dbc .PdfObject ;BE _dbc .PdfObject ;IT _dbc .PdfObject ;Measure _dbc .PdfObject ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_egca *PdfPageResources )AddExtGState (gsName _dbc .PdfObjectName ,gsDict _dbc .PdfObject )error {if _egca .ExtGState ==nil {_egca .ExtGState =_dbc .MakeDict ();};_adgdb :=_egca .ExtGState ;_dcgge ,_bfgef :=_dbc .TraceToDirectObject (_adgdb ).(*_dbc .PdfObjectDictionary );if !_bfgef {_gge .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_adgdb ,_dbc .TraceToDirectObject (_adgdb ));return _dbc .ErrTypeError ;};_dcgge .Set (gsName ,gsDict );return nil ;};func _gggac (_agabd _dbc .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bddd :=NewPdfColorspaceSpecialIndexed ();if _bcad ,_gefc :=_agabd .(*_dbc .PdfIndirectObject );_gefc {_bddd ._ccfb =_bcad ;};_agabd =_dbc .TraceToDirectObject (_agabd );_dbbc ,_degeb :=_agabd .(*_dbc .PdfObjectArray );if !_degeb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbbc .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_agabd =_dbbc .Get (0);_gbga ,_degeb :=_agabd .(*_dbc .PdfObjectName );if !_degeb {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gbga !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_agabd =_dbbc .Get (1);_dfeb ,_fgab :=DetermineColorspaceNameFromPdfObject (_agabd );if _fgab !=nil {return nil ,_fgab ;};if _dfeb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dfeb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gge .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dfeb );return nil ,_eaceb ;};_gfcc ,_fgab :=NewPdfColorspaceFromPdfObject (_agabd );if _fgab !=nil {return nil ,_fgab ;};_bddd .Base =_gfcc ;_agabd =_dbbc .Get (2);_bbcgb ,_fgab :=_dbc .GetNumberAsInt64 (_agabd );if _fgab !=nil {return nil ,_fgab ;};if _bbcgb > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_bddd .HiVal =int (_bbcgb );_agabd =_dbbc .Get (3);_bddd .Lookup =_agabd ;_agabd =_dbc .TraceToDirectObject (_agabd );var _fefb []byte ;if _cafd ,_dgfb :=_agabd .(*_dbc .PdfObjectString );_dgfb {_fefb =_cafd .Bytes ();_gge .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fefb );}else if _ddcfe ,_bddg :=_agabd .(*_dbc .PdfObjectStream );_bddg {_gge .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_agabd .String ());_gge .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ddcfe .Stream ),_ddcfe .Stream );_gdcbad ,_ceff :=_dbc .DecodeStream (_ddcfe );if _ceff !=nil {return nil ,_ceff ;};_gge .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_gdcbad ),_gdcbad );_fefb =_gdcbad ;}else {_gge .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_agabd );return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fefb )< _bddd .Base .GetNumComponents ()*(_bddd .HiVal +1){_gge .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_gge .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fefb ),_bddd .Base .GetNumComponents (),_bddd .HiVal );}else {_fefb =_fefb [:_bddd .Base .GetNumComponents ()*(_bddd .HiVal +1)];};_bddd ._dabc =_fefb ;return _bddd ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dadf ,_aebe :=_gdgab (basefont );if _aebe !=nil {return nil ,_aebe ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dadf ._cggaf =_cg .NewWinAnsiEncoder ();};return &PdfFont {_ceef :&_dadf },nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ddcd *PdfColorspaceCalRGB )ToPdfObject ()_dbc .PdfObject {_gfbbd :=&_dbc .PdfObjectArray {};_gfbbd .Append (_dbc .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bcgeed :=_dbc .MakeDict ();if _ddcd .WhitePoint !=nil {_deag :=_dbc .MakeArray (_dbc .MakeFloat (_ddcd .WhitePoint [0]),_dbc .MakeFloat (_ddcd .WhitePoint [1]),_dbc .MakeFloat (_ddcd .WhitePoint [2]));_bcgeed .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_deag );}else {_gge .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ddcd .BlackPoint !=nil {_fbfc :=_dbc .MakeArray (_dbc .MakeFloat (_ddcd .BlackPoint [0]),_dbc .MakeFloat (_ddcd .BlackPoint [1]),_dbc .MakeFloat (_ddcd .BlackPoint [2]));_bcgeed .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fbfc );};if _ddcd .Gamma !=nil {_cbfcb :=_dbc .MakeArray (_dbc .MakeFloat (_ddcd .Gamma [0]),_dbc .MakeFloat (_ddcd .Gamma [1]),_dbc .MakeFloat (_ddcd .Gamma [2]));_bcgeed .Set ("\u0047\u0061\u006dm\u0061",_cbfcb );};if _ddcd .Matrix !=nil {_cfea :=_dbc .MakeArray (_dbc .MakeFloat (_ddcd .Matrix [0]),_dbc .MakeFloat (_ddcd .Matrix [1]),_dbc .MakeFloat (_ddcd .Matrix [2]),_dbc .MakeFloat (_ddcd .Matrix [3]),_dbc .MakeFloat (_ddcd .Matrix [4]),_dbc .MakeFloat (_ddcd .Matrix [5]),_dbc .MakeFloat (_ddcd .Matrix [6]),_dbc .MakeFloat (_ddcd .Matrix [7]),_dbc .MakeFloat (_ddcd .Matrix [8]));_bcgeed .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cfea );};_gfbbd .Append (_bcgeed );if _ddcd ._gbfc !=nil {_ddcd ._gbfc .PdfObject =_gfbbd ;return _ddcd ._gbfc ;};return _gfbbd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fege pdfFontType0 )GetCharMetrics (code _cg .CharCode )(_aca .CharMetrics ,bool ){if _fege .DescendantFont ==nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fege );return _aca .CharMetrics {},false ;};return _fege .DescendantFont .GetCharMetrics (code );};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cfce :=&PdfColorspaceCalGray {};_cfce .BlackPoint =[]float64 {0.0,0.0,0.0};_cfce .Gamma =1;return _cfce ;};

// SetFlag sets the flag for the field.
func (_egcc *PdfField )SetFlag (flag FieldFlag ){_egcc .Ff =_dbc .MakeInteger (int64 (flag ))};func (_fbgfc *PdfAcroForm )filteredFields (_dbcab FieldFilterFunc ,_ggagb bool )[]*PdfField {if _fbgfc ==nil {return nil ;};return _eggagdb (_fbgfc .Fields ,_dbcab ,_ggagb );};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_fgee *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ge .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_ccfc ,_abgb :=_ggd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaaea ,img ._fgabe );if _abgb !=nil {return img ,_abgb ;};_edcac ,_abgb :=_ggd .GrayConverter .Convert (_ccfc );if _abgb !=nil {return img ,_abgb ;};return _dfddd (_edcac .Base ()),nil ;};var _gddbc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_egcgc :=NewPdfAnnotation ();_abfe :=&PdfAnnotationFreeText {};_abfe .PdfAnnotation =_egcgc ;_abfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egcgc .SetContext (_abfe );return _abfe ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_agge *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_agge .HiVal )};};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dcbdd *PdfPageResources )SetXObjectFormByName (keyName _dbc .PdfObjectName ,xform *XObjectForm )error {_gcfed :=xform .ToPdfObject ().(*_dbc .PdfObjectStream );_gcgag :=_dcbdd .SetXObjectByName (keyName ,_gcfed );return _gcgag ;};func (_ebca *pdfFontSimple )updateStandard14Font (){_cdfbe ,_dcabc :=_ebca .Encoder ().(_cg .SimpleEncoder );if !_dcabc {_gge .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ebca .Encoder (),_ebca );return ;};_aggfd :=_cdfbe .Charcodes ();_ebca ._dbcdc =make (map[_cg .CharCode ]float64 ,len (_aggfd ));for _ ,_gebb :=range _aggfd {_cdcdb ,_ :=_cdfbe .CharcodeToRune (_gebb );_ebca ._dbcdc [_gebb ]=_ebca ._bacea [_cdcdb ].Wx ;};};var _ pdfFont =(*pdfFontSimple )(nil );

// IsTiling specifies if the pattern is a tiling pattern.
func (_dffaa *PdfPattern )IsTiling ()bool {return _dffaa .PatternType ==1};func (_deefb *LTV )validateSig (_deaf *PdfSignature )error {if _deaf ==nil ||_deaf .Contents ==nil ||len (_deaf .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_deaf );};return nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_cdgbc DefaultImageHandler )NewImageFromGoImage (goimg _fe .Image )(*Image ,error ){_afeg ,_cgaa :=_ggd .FromGoImage (goimg );if _cgaa !=nil {return nil ,_cgaa ;};_bceb :=_dfddd (_afeg .Base ());return &_bceb ,nil ;};func (_afddb fontCommon )coreString ()string {_egec :="";if _afddb ._gadcb !=nil {_egec =_afddb ._gadcb .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_afddb ._abdbb ,_afddb ._cebb ,_afddb ._afda ,_afddb ._egbc ,_afddb ._cefde !=nil ,_afddb .fontFlags (),_egec );};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_dfcd *PdfReader )GetEncryptionMethod ()string {_dbef :=_dfcd ._efgcc .GetCrypter ();return _dbef .String ();};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_bdf *PdfActionSetOCGState )ToPdfObject ()_dbc .PdfObject {_bdf .PdfAction .ToPdfObject ();_ffb :=_bdf ._ff ;_aaf :=_ffb .PdfObject .(*_dbc .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeSetOCGState )));_aaf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bdf .State );_aaf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bdf .PreserveRB );return _ffb ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dadag *PdfPage )GetContentStreams ()([]string ,error ){_gdaec :=_dadag .GetContentStreamObjs ();var _adgee []string ;for _ ,_eadf :=range _gdaec {_bfefb ,_abaa :=_eafcgg (_eadf );if _abaa !=nil {return nil ,_abaa ;};_adgee =append (_adgee ,_bfefb );};return _adgee ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fgf PdfModel ;Rect _dbc .PdfObject ;Contents _dbc .PdfObject ;P _dbc .PdfObject ;NM _dbc .PdfObject ;M _dbc .PdfObject ;F _dbc .PdfObject ;AP _dbc .PdfObject ;AS _dbc .PdfObject ;Border _dbc .PdfObject ;C _dbc .PdfObject ;StructParent _dbc .PdfObject ;OC _dbc .PdfObject ;_gef *_dbc .PdfIndirectObject ;};func _cfccg ()string {return _gge .Version };

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bcadf *PdfField )FullName ()(string ,error ){var _efeg _gd .Buffer ;_agabde :=[]string {};if _bcadf .T !=nil {_agabde =append (_agabde ,_bcadf .T .Decoded ());};_facg :=map[*PdfField ]bool {};_facg [_bcadf ]=true ;_bfdca :=_bcadf .Parent ;for _bfdca !=nil {if _ ,_baab :=_facg [_bfdca ];_baab {return _efeg .String (),_ge .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bfdca .T ==nil {return _efeg .String (),_ge .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_agabde =append (_agabde ,_bfdca .T .Decoded ());_facg [_bfdca ]=true ;_bfdca =_bfdca .Parent ;};for _acgcd :=len (_agabde )-1;_acgcd >=0;_acgcd --{_efeg .WriteString (_agabde [_acgcd ]);if _acgcd > 0{_efeg .WriteString ("\u002e");};};return _efeg .String (),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_abca *PdfAnnotation )GetContainingPdfObject ()_dbc .PdfObject {return _abca ._gef };

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _dbc .PdfObject ;BS _dbc .PdfObject ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_acde *PdfPage )AppendContentStream (contentStr string )error {_gdfcd ,_acaff :=_acde .GetContentStreams ();if _acaff !=nil {return _acaff ;};if len (_gdfcd )==0{_gdfcd =[]string {contentStr };return _acde .SetContentStreams (_gdfcd ,_dbc .NewFlateEncoder ());};var _eedbg _gd .Buffer ;_eedbg .WriteString (_gdfcd [len (_gdfcd )-1]);_eedbg .WriteString ("\u000a");_eedbg .WriteString (contentStr );_gdfcd [len (_gdfcd )-1]=_eedbg .String ();return _acde .SetContentStreams (_gdfcd ,_dbc .NewFlateEncoder ());};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_dcdbe *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;PageCallback PageCallback ;};func _ccaag (_daadf *_dbc .PdfObjectStream )(*PdfFunctionType4 ,error ){_dbabfc :=&PdfFunctionType4 {};_dbabfc ._dcdffg =_daadf ;_dcbgg :=_daadf .PdfObjectDictionary ;_eegdb ,_cfdaf :=_dbc .TraceToDirectObject (_dcbgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dbc .PdfObjectArray );if !_cfdaf {_gge .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eegdb .Len ()%2!=0{_gge .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ge .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fafg ,_ffea :=_eegdb .ToFloat64Array ();if _ffea !=nil {return nil ,_ffea ;};_dbabfc .Domain =_fafg ;_eegdb ,_cfdaf =_dbc .TraceToDirectObject (_dcbgg .Get ("\u0052\u0061\u006eg\u0065")).(*_dbc .PdfObjectArray );if _cfdaf {if _eegdb .Len ()< 0||_eegdb .Len ()%2!=0{return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eabc ,_cbeccf :=_eegdb .ToFloat64Array ();if _cbeccf !=nil {return nil ,_cbeccf ;};_dbabfc .Range =_eabc ;};_bdcaag ,_ffea :=_dbc .DecodeStream (_daadf );if _ffea !=nil {return nil ,_ffea ;};_dbabfc ._fbea =_bdcaag ;_cfaa :=_de .NewPSParser (_bdcaag );_cefe ,_ffea :=_cfaa .Parse ();if _ffea !=nil {return nil ,_ffea ;};_dbabfc .Program =_cefe ;return _dbabfc ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_beaf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fafc :=vals [0];if _fafc < 0.0||_fafc > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cce :=vals [1];if _cce < 0.0||_cce > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfeeb :=vals [2];if _cfeeb < 0.0||_cfeeb > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geffe :=NewPdfColorCalRGB (_fafc ,_cce ,_cfeeb );return _geffe ,nil ;};func (_deffd *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetAscent returns the Ascent of the font `descriptor`.
func (_eddd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _dbc .GetNumberAsFloat (_eddd .Ascent );};func (_bdcfg *PdfReader )lookupPageByObject (_gfgded _dbc .PdfObject )(*PdfPage ,error ){return nil ,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_df PdfModel ;Type _dbc .PdfObject ;S _dbc .PdfObject ;Next _dbc .PdfObject ;_ff *_dbc .PdfIndirectObject ;};func (_eebe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ccgecg :=&XObjectForm {};_gcdbg :=&_dbc .PdfObjectStream {};_gcdbg .PdfObjectDictionary =_dbc .MakeDict ();_ccgecg ._bacgb =_gcdbg ;return _ccgecg ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ebaf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _eafcgg (_fbcfg _dbc .PdfObject )(string ,error ){_fbcfg =_dbc .TraceToDirectObject (_fbcfg );switch _aafdb :=_fbcfg .(type ){case *_dbc .PdfObjectString :return _aafdb .Str (),nil ;case *_dbc .PdfObjectStream :_cebea ,_gaafb :=_dbc .DecodeStream (_aafdb );if _gaafb !=nil {return "",_gaafb ;};return string (_cebea ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fbcfg );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _dbc .PdfObject )(_dbc .PdfObjectName ,error ){var _gdeff *_dbc .PdfObjectName ;var _ace *_dbc .PdfObjectArray ;if _cfcfc ,_aaag :=obj .(*_dbc .PdfIndirectObject );_aaag {if _dgdg ,_fdag :=_cfcfc .PdfObject .(*_dbc .PdfObjectArray );_fdag {_ace =_dgdg ;}else if _befe ,_ccac :=_cfcfc .PdfObject .(*_dbc .PdfObjectName );_ccac {_gdeff =_befe ;};}else if _ffa ,_cbgf :=obj .(*_dbc .PdfObjectArray );_cbgf {_ace =_ffa ;}else if _abdb ,_defe :=obj .(*_dbc .PdfObjectName );_defe {_gdeff =_abdb ;};if _gdeff !=nil {switch *_gdeff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gdeff ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gdeff ,nil ;};};if _ace !=nil &&_ace .Len ()> 0{if _cfdc ,_cefd :=_ace .Get (0).(*_dbc .PdfObjectName );_cefd {switch *_cfdc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ace .Len ()==1{return *_cfdc ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cfdc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cfdc ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cfdc ,nil ;};};};return "",nil ;};

// ToPdfObject implements interface PdfModel.
func (_bg *PdfActionGoToE )ToPdfObject ()_dbc .PdfObject {_bg .PdfAction .ToPdfObject ();_cb :=_bg ._ff ;_dcd :=_cb .PdfObject .(*_dbc .PdfObjectDictionary );_dcd .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeGoToE )));if _bg .F !=nil {_dcd .Set ("\u0046",_bg .F .ToPdfObject ());};_dcd .SetIfNotNil ("\u0044",_bg .D );_dcd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bg .NewWindow );_dcd .SetIfNotNil ("\u0054",_bg .T );return _cb ;};func (_addec *PdfWriter )writeBytes (_dcfba []byte ){if _addec ._ecafa !=nil {return ;};_bgbdb ,_feagg :=_addec ._ecedd .Write (_dcfba );_addec ._fgafa +=int64 (_bgbdb );_addec ._ecafa =_feagg ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _dbc .PdfObject ;B _dbc .PdfObject ;};func _feffg (_fabd *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fabd }};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gfec *PdfAppender )Write (w _ec .Writer )error {if _gfec ._ebeg {return _ge .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_agdd :=NewPdfWriter ();_dabf ,_dfca :=_dbc .GetDict (_agdd ._ggcdf );if !_dfca {return _ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_cccd ,_dfca :=_dabf .Get ("\u004b\u0069\u0064\u0073").(*_dbc .PdfObjectArray );if !_dfca {return _ge .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_dec ,_dfca :=_dabf .Get ("\u0043\u006f\u0075n\u0074").(*_dbc .PdfObjectInteger );if !_dfca {return _ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_gcfef :=_gfec ._cdef ._efgcc ;_bbcg :=_gcfef .GetTrailer ();if _bbcg ==nil {return _ge .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_aabc ,_dfca :=_dbc .GetIndirect (_bbcg .Get ("\u0052\u006f\u006f\u0074"));if !_dfca {return _ge .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fbaab ,_dfca :=_dbc .GetDict (_aabc );if !_dfca {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aabc ,*_bbcg );return _ge .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_eae :=range _fbaab .Keys (){if _agdd ._eddef .Get (_eae )==nil {_ddcf :=_fbaab .Get (_eae );_agdd ._eddef .Set (_eae ,_ddcf );};};if _gfec ._fece !=nil {_agdd ._eddef .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gfec ._fece .ToPdfObject ());_gfec .updateObjectsDeep (_gfec ._fece .ToPdfObject (),nil );};if _gfec ._fca !=nil {_gfec .updateObjectsDeep (_gfec ._fca .ToPdfObject (),nil );_agdd ._eddef .Set ("\u0044\u0053\u0053",_gfec ._fca .GetContainingPdfObject ());};if _agdd ._ccaec < 2{_agdd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_agdd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gfec .addNewObject (_agdd ._fffe );_gfec .addNewObject (_agdd ._ccdgg );_baa :=false ;if len (_gfec ._cdef .PageList )!=len (_gfec ._cgedd ){_baa =true ;}else {for _afaf :=range _gfec ._cdef .PageList {switch {case _gfec ._cgedd [_afaf ]==_gfec ._cdef .PageList [_afaf ]:case _gfec ._cgedd [_afaf ]==_gfec .Reader .PageList [_afaf ]:default:_baa =true ;};if _baa {break ;};};};if _baa {_gfec .updateObjectsDeep (_agdd ._ggcdf ,nil );}else {_gfec ._begf [_agdd ._ggcdf ]=struct{}{};};_agdd ._ggcdf .ObjectNumber =_gfec .Reader ._cabfa .ObjectNumber ;_gfec ._cbecd [_agdd ._ggcdf ]=_gfec .Reader ._cabfa .ObjectNumber ;_gbac :=[]_dbc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_edba :=range _gfec ._cgedd {_acgac :=_edba .ToPdfObject ();*_dec =*_dec +1;if _gafa ,_fdebc :=_acgac .(*_dbc .PdfIndirectObject );_fdebc &&_gafa .GetParser ()==_gfec ._cdef ._efgcc {_cccd .Append (&_gafa .PdfObjectReference );continue ;};if _ega ,_cgce :=_dbc .GetDict (_acgac );_cgce {_cfcf ,_fceg :=_ega .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_dbc .PdfIndirectObject );for _fceg {_gge .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cfcf );_cgad ,_edbf :=_cfcf .PdfObject .(*_dbc .PdfObjectDictionary );if !_edbf {return _ge .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_egbafb :=range _gbac {_gge .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egbafb );if _ega .Get (_egbafb )!=nil {_gge .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fbbeg :=_cgad .Get (_egbafb );_fbbeg !=nil {_gge .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egbafb );_ega .Set (_egbafb ,_fbbeg );};};_cfcf ,_fceg =_cgad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_dbc .PdfIndirectObject );_gge .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cgad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ega .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agdd ._ggcdf );};_gfec .updateObjectsDeep (_acgac ,nil );_cccd .Append (_acgac );};if _ ,_eddf :=_gfec ._acba .Seek (0,_ec .SeekStart );_eddf !=nil {return _eddf ;};_cbea :=make (map[SignatureHandler ]_ec .Writer );_abad :=_dbc .MakeArray ();for _ ,_eedc :=range _gfec ._fgea {if _eafcb ,_fbca :=_dbc .GetIndirect (_eedc );_fbca {if _agbb ,_bega :=_eafcb .PdfObject .(*pdfSignDictionary );_bega {_adag :=*_agbb ._bggea ;var _cdea error ;_cbea [_adag ],_cdea =_adag .NewDigest (_agbb ._ecdabg );if _cdea !=nil {return _cdea ;};_abad .Append (_dbc .MakeInteger (0xfffff),_dbc .MakeInteger (0xfffff));};};};if _abad .Len ()> 0{_abad .Append (_dbc .MakeInteger (0xfffff),_dbc .MakeInteger (0xfffff));};for _ ,_edfad :=range _gfec ._fgea {if _ceaf ,_bbaa :=_dbc .GetIndirect (_edfad );_bbaa {if _eaba ,_edca :=_ceaf .PdfObject .(*pdfSignDictionary );_edca {_eaba .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_abad );};};};_aag :=len (_cbea )> 0;var _ecgeb _ec .Reader =_gfec ._acba ;if _aag {_cbdbf :=make ([]_ec .Writer ,0,len (_cbea ));for _ ,_eeddf :=range _cbea {_cbdbf =append (_cbdbf ,_eeddf );};_ecgeb =_ec .TeeReader (_gfec ._acba ,_ec .MultiWriter (_cbdbf ...));};_fbaf ,_fgfd :=_ec .Copy (w ,_ecgeb );if _fgfd !=nil {return _fgfd ;};if len (_gfec ._fgea )==0{return nil ;};_agdd ._cabce =_fbaf ;_agdd .ObjNumOffset =_gfec ._ccbg ;_agdd ._edegf =true ;_agdd ._dagcg =_gfec ._bfcgf ;_agdd ._fgbea =_gfec ._ggdf ;_agdd ._fbff =_gfec ._cfa ;_agdd ._adaa =_gfec ._cdef .PdfVersion ().Minor ;_agdd ._bdaf =_gfec ._cbecd ;_bfedf :=_gfec ._dgb .GetXrefType ();if _bfedf !=nil {_dgbg :=*_bfedf ==_dbc .XrefTypeObjectStream ;_agdd ._babf =&_dgbg ;};_agdd ._ebdbb =map[_dbc .PdfObject ]struct{}{};_agdd ._cded =[]_dbc .PdfObject {};for _ ,_bfgb :=range _gfec ._fgea {if _ ,_bdaa :=_gfec ._begf [_bfgb ];_bdaa {continue ;};_agdd .addObject (_bfgb );};_beba :=w ;if _aag {_beba =_gd .NewBuffer (nil );};if _gfff :=_agdd .Write (_beba );_gfff !=nil {return _gfff ;};if _aag {_ggcfg :=_beba .(*_gd .Buffer ).Bytes ();_ffga :=_dbc .MakeArray ();var _gfee []*pdfSignDictionary ;var _aecag int64 ;for _ ,_cfg :=range _agdd ._cded {if _daac ,_cadbg :=_dbc .GetIndirect (_cfg );_cadbg {if _daba ,_baegf :=_daac .PdfObject .(*pdfSignDictionary );_baegf {_gfee =append (_gfee ,_daba );_fefc :=_daba ._efggc +int64 (_daba ._cagba );_ffga .Append (_dbc .MakeInteger (_aecag ),_dbc .MakeInteger (_fefc -_aecag ));_aecag =_daba ._efggc +int64 (_daba ._egaffa );};};};_ffga .Append (_dbc .MakeInteger (_aecag ),_dbc .MakeInteger (_fbaf +int64 (len (_ggcfg ))-_aecag ));_gabc :=[]byte (_ffga .WriteString ());for _ ,_fgbfa :=range _gfee {_eafb :=int (_fgbfa ._efggc -_fbaf );for _aafd :=_fgbfa ._adbfg ;_aafd < _fgbfa ._fbbebd ;_aafd ++{_ggcfg [_eafb +_aafd ]=' ';};_cegc :=_ggcfg [_eafb +_fgbfa ._adbfg :_eafb +_fgbfa ._fbbebd ];copy (_cegc ,_gabc );};var _abbg int ;for _ ,_cdecc :=range _gfee {_daaa :=int (_cdecc ._efggc -_fbaf );_bdfe :=_ggcfg [_abbg :_daaa +_cdecc ._cagba ];_agac :=*_cdecc ._bggea ;_cbea [_agac ].Write (_bdfe );_abbg =_daaa +_cdecc ._egaffa ;};for _ ,_gfgg :=range _gfee {_abdea :=_ggcfg [_abbg :];_ggg :=*_gfgg ._bggea ;_cbea [_ggg ].Write (_abdea );};for _ ,_bbef :=range _gfee {_gdeg :=int (_bbef ._efggc -_fbaf );_bgfa :=*_bbef ._bggea ;_aaec :=_cbea [_bgfa ];if _dbcb :=_bgfa .Sign (_bbef ._ecdabg ,_aaec );_dbcb !=nil {return _dbcb ;};_bbef ._ecdabg .ByteRange =_ffga ;_gbcg :=[]byte (_bbef ._ecdabg .Contents .WriteString ());for _fegac :=_bbef ._adbfg ;_fegac < _bbef ._fbbebd ;_fegac ++{_ggcfg [_gdeg +_fegac ]=' ';};for _cccg :=_bbef ._cagba ;_cccg < _bbef ._egaffa ;_cccg ++{_ggcfg [_gdeg +_cccg ]=' ';};_fcdbe :=_ggcfg [_gdeg +_bbef ._adbfg :_gdeg +_bbef ._fbbebd ];copy (_fcdbe ,_gabc );_fcdbe =_ggcfg [_gdeg +_bbef ._cagba :_gdeg +_bbef ._egaffa ];copy (_fcdbe ,_gbcg );};_eeaae :=_gd .NewBuffer (_ggcfg );_ ,_fgfd =_ec .Copy (w ,_eeaae );if _fgfd !=nil {return _fgfd ;};};_gfec ._ebeg =true ;return nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_dbc .PdfObjectArray ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dbee *PdfAppender )UpdatePage (page *PdfPage ){_dbee .updateObjectsDeep (page .ToPdfObject (),nil )};func (_bdfeb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_agecb *pdfCIDFontType0 )ToPdfObject ()_dbc .PdfObject {return _dbc .MakeNull ()};func _gcdfdg (_fbcfa _dbc .PdfObject )[]*_dbc .PdfObjectStream {if _fbcfa ==nil {return nil ;};_gfgaf ,_gace :=_dbc .GetArray (_fbcfa );if !_gace ||_gfgaf .Len ()==0{return nil ;};_badbb :=make ([]*_dbc .PdfObjectStream ,0,_gfgaf .Len ());for _ ,_adeed :=range _gfgaf .Elements (){if _gedce ,_gfeg :=_dbc .GetStream (_adeed );_gfeg {_badbb =append (_badbb ,_gedce );};};return _badbb ;};func _edcfc (_fcaace _dbc .PdfObject )(PdfFunction ,error ){_fcaace =_dbc .ResolveReference (_fcaace );if _gbdec ,_effff :=_fcaace .(*_dbc .PdfObjectStream );_effff {_ggcd :=_gbdec .PdfObjectDictionary ;_geabe ,_cecccb :=_ggcd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dbc .PdfObjectInteger );if !_cecccb {_gge .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_geabe ==0{return _cdfda (_gbdec );}else if *_geabe ==4{return _ccaag (_gbdec );}else {return nil ,_ge .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bcaf ,_daeac :=_fcaace .(*_dbc .PdfIndirectObject );_daeac {_bfbb ,_dffgg :=_bcaf .PdfObject .(*_dbc .PdfObjectDictionary );if !_dffgg {_gge .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bagf ,_dffgg :=_bfbb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dbc .PdfObjectInteger );if !_dffgg {_gge .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bagf ==2{return _daaafc (_bcaf );}else if *_bagf ==3{return _cfae (_bcaf );}else {return nil ,_ge .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eccg ,_agfc :=_fcaace .(*_dbc .PdfObjectDictionary );_agfc {_ggcff ,_ggffc :=_eccg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_dbc .PdfObjectInteger );if !_ggffc {_gge .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ggcff ==2{return _daaafc (_eccg );}else if *_ggcff ==3{return _cfae (_eccg );}else {return nil ,_ge .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gge .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fcaace );return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gdce *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// SetLocation sets the `Location` field of the signature.
func (_gddcf *PdfSignature )SetLocation (location string ){_gddcf .Location =_dbc .MakeString (location )};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_efcc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_cfbg ,_ ,_cegce :=_efcc .CharcodesToUnicodeWithStats (_efcc .BytesToCharcodes (data ));_dbdge :=_cg .ExpandLigatures (_cfbg );return _dbdge ,_ddg .RuneCountInString (_dbdge ),_cegce ;};

// ToPdfObject implements interface PdfModel.
func (_fcbe *PdfAnnotationSquiggly )ToPdfObject ()_dbc .PdfObject {_fcbe .PdfAnnotation .ToPdfObject ();_gbc :=_fcbe ._gef ;_gedf :=_gbc .PdfObject .(*_dbc .PdfObjectDictionary );_fcbe .PdfAnnotationMarkup .appendToPdfDictionary (_gedf );_gedf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_gedf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcbe .QuadPoints );return _gbc ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _dbc .PdfObject ;AN _dbc .PdfObject ;OP _dbc .PdfObject ;JS _dbc .PdfObject ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dfdg *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_eceb :=_bee .NewReader (img .getBase ());_gcgg :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dfdg .AlternateSpace .GetNumComponents (),nil ,img ._gaaea ,nil );_cfeab :=_bee .NewWriter (_gcgg );_fbeg :=_bc .Pow (2,float64 (img .BitsPerComponent ))-1;_gge .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_gge .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dfdg .TintTransform );_edaab :=_dfdg .AlternateSpace .DecodeArray ();var (_abedd uint32 ;_caea error ;);for {_abedd ,_caea =_eceb .ReadSample ();if _caea ==_ec .EOF {break ;};if _caea !=nil {return img ,_caea ;};_cdcd :=float64 (_abedd )/_fbeg ;_eggag ,_cfag :=_dfdg .TintTransform .Evaluate ([]float64 {_cdcd });if _cfag !=nil {return img ,_cfag ;};for _egad ,_ceee :=range _eggag {_fcgg :=_ggd .LinearInterpolate (_ceee ,_edaab [_egad *2],_edaab [_egad *2+1],0,1);if _cfag =_cfeab .WriteSample (uint32 (_fcgg *_fbeg ));_cfag !=nil {return img ,_cfag ;};};};return _dfdg .AlternateSpace .ImageToRGB (_dfddd (&_gcgg ));};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dfg *_dbc .PdfIndirectObject ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_efdcc *Image )SetSamples (samples []uint32 ){if _efdcc .BitsPerComponent < 8{samples =_efdcc .samplesAddPadding (samples );};_gabad :=_bee .ResampleUint32 (samples ,int (_efdcc .BitsPerComponent ),8);_fgged :=make ([]byte ,len (_gabad ));for _bdgef ,_bbed :=range _gabad {_fgged [_bdgef ]=byte (_bbed );};_efdcc .Data =_fgged ;};func _ecdab (_fbec *_dbc .PdfObjectDictionary ,_efff *fontCommon )(*pdfCIDFontType0 ,error ){if _efff ._abdbb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gge .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_efff );return nil ,_dbc .ErrRangeError ;};_adeg :=_feffg (_efff );_ggae ,_fdde :=_dbc .GetDict (_fbec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fdde {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_efff );return nil ,ErrRequiredAttributeMissing ;};_adeg .CIDSystemInfo =_ggae ;_adeg .DW =_fbec .Get ("\u0044\u0057");_adeg .W =_fbec .Get ("\u0057");_adeg .DW2 =_fbec .Get ("\u0044\u0057\u0032");_adeg .W2 =_fbec .Get ("\u0057\u0032");_adeg ._efcbd =1000.0;if _fbeea ,_bbdff :=_dbc .GetNumberAsFloat (_adeg .DW );_bbdff ==nil {_adeg ._efcbd =_fbeea ;};_faee ,_gcacf :=_cfcag (_adeg .W );if _gcacf !=nil {return nil ,_gcacf ;};if _faee ==nil {_faee =map[_cg .CharCode ]float64 {};};_adeg ._fgcd =_faee ;return _adeg ,nil ;};func (_adde *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _adde ._gadcb };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;var _daed =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};func _gdgab (_degc StdFontName )(pdfFontSimple ,error ){_bbcd ,_cedcd :=_aca .NewStdFontByName (_degc );if !_cedcd {return pdfFontSimple {},ErrFontNotSupported ;};_egbd :=_defb (_bbcd );return _egbd ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gebc *_dbc .PdfIndirectObject ;Certs []*_dbc .PdfObjectStream ;OCSPs []*_dbc .PdfObjectStream ;CRLs []*_dbc .PdfObjectStream ;VRI map[string ]*VRI ;_gbad map[string ]*_dbc .PdfObjectStream ;_aead map[string ]*_dbc .PdfObjectStream ;_befd map[string ]*_dbc .PdfObjectStream ;};func (_cdcc *PdfReader )newPdfAnnotationPolygonFromDict (_deffe *_dbc .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_ebbb :=PdfAnnotationPolygon {};_cee ,_bfed :=_cdcc .newPdfAnnotationMarkupFromDict (_deffe );if _bfed !=nil {return nil ,_bfed ;};_ebbb .PdfAnnotationMarkup =_cee ;_ebbb .Vertices =_deffe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ebbb .LE =_deffe .Get ("\u004c\u0045");_ebbb .BS =_deffe .Get ("\u0042\u0053");_ebbb .IC =_deffe .Get ("\u0049\u0043");_ebbb .BE =_deffe .Get ("\u0042\u0045");_ebbb .IT =_deffe .Get ("\u0049\u0054");_ebbb .Measure =_deffe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ebbb ,nil ;};func (_aaae *PdfReader )newPdfAnnotationInkFromDict (_fagd *_dbc .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_eaab :=PdfAnnotationInk {};_gfde ,_eeac :=_aaae .newPdfAnnotationMarkupFromDict (_fagd );if _eeac !=nil {return nil ,_eeac ;};_eaab .PdfAnnotationMarkup =_gfde ;_eaab .InkList =_fagd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_eaab .BS =_fagd .Get ("\u0042\u0053");return &_eaab ,nil ;};func (_agdea *PdfWriter )writeObject (_cbba int ,_egdga _dbc .PdfObject ){_gge .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cbba );if _fbceg ,_gfbdc :=_egdga .(*_dbc .PdfIndirectObject );_gfbdc {_agdea ._acgfd [_cbba ]=crossReference {Type :1,Offset :_agdea ._fgafa ,Generation :_fbceg .GenerationNumber };_bedga :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbba );if _gcgab ,_fdfdc :=_fbceg .PdfObject .(*pdfSignDictionary );_fdfdc {_gcgab ._efggc =_agdea ._fgafa +int64 (len (_bedga ));};if _fbceg .PdfObject ==nil {_gge .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_fbceg .PdfObject =_dbc .MakeNull ();};_bedga +=_fbceg .PdfObject .WriteString ();_bedga +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_agdea .writeString (_bedga );return ;};if _ffdeg ,_fdfcg :=_egdga .(*_dbc .PdfObjectStream );_fdfcg {_agdea ._acgfd [_cbba ]=crossReference {Type :1,Offset :_agdea ._fgafa ,Generation :_ffdeg .GenerationNumber };_bddcf :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbba );_bddcf +=_ffdeg .PdfObjectDictionary .WriteString ();_bddcf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_agdea .writeString (_bddcf );_agdea .writeBytes (_ffdeg .Stream );_agdea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fegee ,_bgdae :=_egdga .(*_dbc .PdfObjectStreams );_bgdae {_agdea ._acgfd [_cbba ]=crossReference {Type :1,Offset :_agdea ._fgafa ,Generation :_fegee .GenerationNumber };_acdb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbba );var _dcdbf []string ;var _acegff string ;var _accce int64 ;for _gdfgbb ,_gdde :=range _fegee .Elements (){_cdceg ,_bgddg :=_gdde .(*_dbc .PdfIndirectObject );if !_bgddg {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cbba ,_gdde );continue ;};_faff :=_cdceg .PdfObject .WriteString ()+"\u0020";_acegff =_acegff +_faff ;_dcdbf =append (_dcdbf ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_cdceg .ObjectNumber ,_accce ));_agdea ._acgfd [int (_cdceg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cbba ,Index :_gdfgbb };_accce =_accce +int64 (len ([]byte (_faff )));};_cdda :=_ab .Join (_dcdbf ,"\u0020")+"\u0020";_bfgdcg :=_dbc .NewFlateEncoder ();_efca :=_bfgdcg .MakeStreamDict ();_efca .Set (_dbc .PdfObjectName ("\u0054\u0079\u0070\u0065"),_dbc .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_afdaab :=int64 (_fegee .Len ());_efca .Set (_dbc .PdfObjectName ("\u004e"),_dbc .MakeInteger (_afdaab ));_aega :=int64 (len (_cdda ));_efca .Set (_dbc .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_dbc .MakeInteger (_aega ));_bcgcf ,_ :=_bfgdcg .EncodeBytes ([]byte (_cdda +_acegff ));_bbeeg :=int64 (len (_bcgcf ));_efca .Set (_dbc .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_dbc .MakeInteger (_bbeeg ));_acdb +=_efca .WriteString ();_acdb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_agdea .writeString (_acdb );_agdea .writeBytes (_bcgcf );_agdea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_agdea .writeString (_egdga .WriteString ());};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _dbc .StreamEncoder ;Intent _dbc .PdfObject ;ImageMask _dbc .PdfObject ;Mask _dbc .PdfObject ;Matte _dbc .PdfObject ;Decode _dbc .PdfObject ;Interpolate _dbc .PdfObject ;Alternatives _dbc .PdfObject ;SMask _dbc .PdfObject ;SMaskInData _dbc .PdfObject ;Name _dbc .PdfObject ;StructParent _dbc .PdfObject ;ID _dbc .PdfObject ;OPI _dbc .PdfObject ;Metadata _dbc .PdfObject ;OC _dbc .PdfObject ;Stream []byte ;_acadb *_dbc .PdfObjectStream ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_cbbc :=NewPdfAnnotation ();_dcc :=&PdfAnnotationHighlight {};_dcc .PdfAnnotation =_cbbc ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbbc .SetContext (_dcc );return _dcc ;};func _gafag (_bfgbb *_dbc .PdfIndirectObject ,_aaed *_dbc .PdfObjectDictionary )(*DSS ,error ){if _bfgbb ==nil {_bfgbb =_dbc .MakeIndirectObject (nil );};_bfgbb .PdfObject =_dbc .MakeDict ();_dbafc :=map[string ]*VRI {};if _gfed ,_cbdf :=_dbc .GetDict (_aaed .Get ("\u0056\u0052\u0049"));_cbdf {for _ ,_ccfda :=range _gfed .Keys (){if _cebaf ,_eagd :=_dbc .GetDict (_gfed .Get (_ccfda ));_eagd {_dbafc [_ab .ToUpper (_ccfda .String ())]=_dbcf (_cebaf );};};};return &DSS {Certs :_gcdfdg (_aaed .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_gcdfdg (_aaed .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_gcdfdg (_aaed .Get ("\u0043\u0052\u004c\u0073")),VRI :_dbafc ,_gebc :_bfgbb },nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cgcec *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbf :=vals [0];_gedc :=[]float64 {_acbf };_dcbdb ,_gfda :=_cgcec .TintTransform .Evaluate (_gedc );if _gfda !=nil {_gge .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gfda );_gge .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cgcec .TintTransform );return nil ,_gfda ;};_gge .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_dcbdb ,_cgcec .AlternateSpace );_aggd ,_gfda :=_cgcec .AlternateSpace .ColorFromFloats (_dcbdb );if _gfda !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gfda );return nil ,_gfda ;};return _aggd ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dcbfd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dcbfd ._agbga =colorspace ;};

// ToPdfObject implements interface PdfModel.
func (_eea *PdfActionNamed )ToPdfObject ()_dbc .PdfObject {_eea .PdfAction .ToPdfObject ();_fcbc :=_eea ._ff ;_gcc :=_fcbc .PdfObject .(*_dbc .PdfObjectDictionary );_gcc .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeNamed )));_gcc .SetIfNotNil ("\u004e",_eea .N );return _fcbc ;};type pdfFontSimple struct{fontCommon ;_abga *_dbc .PdfIndirectObject ;_dbcdc map[_cg .CharCode ]float64 ;_cggaf _cg .TextEncoder ;_gdbb _cg .TextEncoder ;_cbacf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _dbc .PdfObject ;LastChar _dbc .PdfObject ;Widths _dbc .PdfObject ;Encoding _dbc .PdfObject ;_bacea map[rune ]_aca .CharMetrics ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_egfab *PdfReader )GetIndirectObjectByNumber (number int )(_dbc .PdfObject ,error ){_degd ,_baceg :=_egfab ._efgcc .LookupByNumber (number );return _degd ,_baceg ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gdac PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_dbc .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gfdbf []_dbc .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fggc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// SetContentStream sets the pattern cell's content stream.
func (_ccba *PdfTilingPattern )SetContentStream (content []byte ,encoder _dbc .StreamEncoder )error {_gdeda ,_adae :=_ccba ._dfacd .(*_dbc .PdfObjectStream );if !_adae {_gge .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccba ._dfacd );return _dbc .ErrTypeError ;};if encoder ==nil {encoder =_dbc .NewRawEncoder ();};_cffge :=_gdeda .PdfObjectDictionary ;_aecafb :=encoder .MakeStreamDict ();_cffge .Merge (_aecafb );_acged ,_fbgdd :=encoder .EncodeBytes (content );if _fbgdd !=nil {return _fbgdd ;};_cffge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_acged ))));_gdeda .Stream =_acged ;return nil ;};var (_geeg =_fc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_eaga =_fc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_ecaa =_fc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_ddcfb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_dagb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ggbb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// Encoder returns the font's text encoder.
func (_bafdb *PdfFont )Encoder ()_cg .TextEncoder {_dfebg :=_bafdb .actualFont ();if _dfebg ==nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bafdb ._ceef );return nil ;};return _dfebg .Encoder ();};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_dbc .PdfObject ;};func _fbgb (_ebddb ,_faefc string )string {if _ab .Contains (_ebddb ,"\u002b"){_acbe :=_ab .Split (_ebddb ,"\u002b");if len (_acbe )==2{_ebddb =_acbe [1];};};return _faefc +"\u002b"+_ebddb ;};

// ToPdfObject implements interface PdfModel.
func (_ffd *PdfAnnotationPopup )ToPdfObject ()_dbc .PdfObject {_ffd .PdfAnnotation .ToPdfObject ();_caa :=_ffd ._gef ;_gaee :=_caa .PdfObject .(*_dbc .PdfObjectDictionary );_gaee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0050\u006f\u0070u\u0070"));_gaee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffd .Parent );_gaee .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ffd .Open );return _caa ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dbdb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dbdb .Alternate ==nil {_gge .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _dbdb .N ==1{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_feaa :=NewPdfColorspaceDeviceGray ();return _feaa .ImageToRGB (img );}else if _dbdb .N ==3{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _dbdb .N ==4{_gge .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cbaag :=NewPdfColorspaceDeviceCMYK ();return _cbaag .ImageToRGB (img );}else {return img ,_ge .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_gge .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dbdb );_edga ,_gfcd :=_dbdb .Alternate .ImageToRGB (img );_gge .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gge .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_edga );return _edga ,_gfcd ;};func _cfae (_cdba _dbc .PdfObject )(*PdfFunctionType3 ,error ){_ebee :=&PdfFunctionType3 {};var _gffaf *_dbc .PdfObjectDictionary ;if _fgdb ,_bcacg :=_cdba .(*_dbc .PdfIndirectObject );_bcacg {_eaag ,_cdfgc :=_fgdb .PdfObject .(*_dbc .PdfObjectDictionary );if !_cdfgc {return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebee ._fdge =_fgdb ;_gffaf =_eaag ;}else if _degea ,_fdfdg :=_cdba .(*_dbc .PdfObjectDictionary );_fdfdg {_gffaf =_degea ;}else {return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gefde ,_fecg :=_dbc .TraceToDirectObject (_gffaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dbc .PdfObjectArray );if !_fecg {_gge .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gefde .Len ()!=2{_gge .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ge .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fageg ,_fcfag :=_gefde .ToFloat64Array ();if _fcfag !=nil {return nil ,_fcfag ;};_ebee .Domain =_fageg ;_gefde ,_fecg =_dbc .TraceToDirectObject (_gffaf .Get ("\u0052\u0061\u006eg\u0065")).(*_dbc .PdfObjectArray );if _fecg {if _gefde .Len ()< 0||_gefde .Len ()%2!=0{return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dced ,_bgfbc :=_gefde .ToFloat64Array ();if _bgfbc !=nil {return nil ,_bgfbc ;};_ebee .Range =_dced ;};_gefde ,_fecg =_dbc .TraceToDirectObject (_gffaf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_dbc .PdfObjectArray );if !_fecg {_gge .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ebee .Functions =[]PdfFunction {};for _ ,_fgfae :=range _gefde .Elements (){_gedd ,_egefc :=_edcfc (_fgfae );if _egefc !=nil {return nil ,_egefc ;};_ebee .Functions =append (_ebee .Functions ,_gedd );};_gefde ,_fecg =_dbc .TraceToDirectObject (_gffaf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_dbc .PdfObjectArray );if !_fecg {_gge .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_agded ,_fcfag :=_gefde .ToFloat64Array ();if _fcfag !=nil {return nil ,_fcfag ;};_ebee .Bounds =_agded ;if len (_ebee .Bounds )!=len (_ebee .Functions )-1{_gge .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ebee .Bounds ),len (_ebee .Functions ));return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gefde ,_fecg =_dbc .TraceToDirectObject (_gffaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_dbc .PdfObjectArray );if !_fecg {_gge .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eecbe ,_fcfag :=_gefde .ToFloat64Array ();if _fcfag !=nil {return nil ,_fcfag ;};_ebee .Encode =_eecbe ;if len (_ebee .Encode )!=2*len (_ebee .Functions ){_gge .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ebee .Encode ),len (_ebee .Functions ));return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ebee ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_dbc .PdfObject ;GetContainingPdfObject ()_dbc .PdfObject ;};func _gbaf (_cbebg _dbc .PdfObject )(*PdfColorspaceCalRGB ,error ){_eaabg :=NewPdfColorspaceCalRGB ();if _cadc ,_cecgf :=_cbebg .(*_dbc .PdfIndirectObject );_cecgf {_eaabg ._gbfc =_cadc ;};_cbebg =_dbc .TraceToDirectObject (_cbebg );_egdd ,_ggfd :=_cbebg .(*_dbc .PdfObjectArray );if !_ggfd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egdd .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cbebg =_dbc .TraceToDirectObject (_egdd .Get (0));_aaga ,_ggfd :=_cbebg .(*_dbc .PdfObjectName );if !_ggfd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_aaga !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cbebg =_dbc .TraceToDirectObject (_egdd .Get (1));_ffae ,_ggfd :=_cbebg .(*_dbc .PdfObjectDictionary );if !_ggfd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_cbebg =_ffae .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cbebg =_dbc .TraceToDirectObject (_cbebg );_cdde ,_ggfd :=_cbebg .(*_dbc .PdfObjectArray );if !_ggfd {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _cdde .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbgef ,_cgef :=_cdde .GetAsFloat64Slice ();if _cgef !=nil {return nil ,_cgef ;};_eaabg .WhitePoint =_bbgef ;_cbebg =_ffae .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cbebg !=nil {_cbebg =_dbc .TraceToDirectObject (_cbebg );_gdbc ,_fedg :=_cbebg .(*_dbc .PdfObjectArray );if !_fedg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _gdbc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gcdb ,_dcgb :=_gdbc .GetAsFloat64Slice ();if _dcgb !=nil {return nil ,_dcgb ;};_eaabg .BlackPoint =_gcdb ;};_cbebg =_ffae .Get ("\u0047\u0061\u006dm\u0061");if _cbebg !=nil {_cbebg =_dbc .TraceToDirectObject (_cbebg );_bbege ,_fdda :=_cbebg .(*_dbc .PdfObjectArray );if !_fdda {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bbege .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_baee ,_dffa :=_bbege .GetAsFloat64Slice ();if _dffa !=nil {return nil ,_dffa ;};_eaabg .Gamma =_baee ;};_cbebg =_ffae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cbebg !=nil {_cbebg =_dbc .TraceToDirectObject (_cbebg );_ebge ,_degg :=_cbebg .(*_dbc .PdfObjectArray );if !_degg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _ebge .Len ()!=9{_gge .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ebge .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_bfgcb ,_cabbg :=_ebge .GetAsFloat64Slice ();if _cabbg !=nil {return nil ,_cabbg ;};_eaabg .Matrix =_bfgcb ;};return _eaabg ,nil ;};

// B returns the value of the blue component of the color.
func (_egac *PdfColorDeviceRGB )B ()float64 {return _egac [2]};

// ToPdfObject implements interface PdfModel.
func (_dda *PdfActionGoToR )ToPdfObject ()_dbc .PdfObject {_dda .PdfAction .ToPdfObject ();_acc :=_dda ._ff ;_agd :=_acc .PdfObject .(*_dbc .PdfObjectDictionary );_agd .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeGoToR )));if _dda .F !=nil {_agd .Set ("\u0046",_dda .F .ToPdfObject ());};_agd .SetIfNotNil ("\u0044",_dda .D );_agd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dda .NewWindow );return _acc ;};func _cacae ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _ddabc };

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_aff *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_aff .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_aff ._fece =acroForm ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _dbc .PdfObject ;NewWindow _dbc .PdfObject ;};func _dgbdd (_bggge *PdfField )[]*PdfField {_efeab :=[]*PdfField {_bggge };for _ ,_cdad :=range _bggge .Kids {_efeab =append (_efeab ,_dgbdd (_cdad )...);};return _efeab ;};func _gdaeaa (_ddgdc []byte )[]byte {const _bcbe =52845;const _bdab =22719;_gedcb :=55665;for _ ,_ebda :=range _ddgdc [:4]{_gedcb =(int (_ebda )+_gedcb )*_bcbe +_bdab ;};_fgbca :=make ([]byte ,len (_ddgdc )-4);for _bgfb ,_gcfgb :=range _ddgdc [4:]{_fgbca [_bgfb ]=byte (int (_gcfgb )^_gedcb >>8);_gedcb =(int (_gcfgb )+_gedcb )*_bcbe +_bdab ;};return _fgbca ;};

// GetContentStream returns the XObject Form's content stream.
func (_bgdab *XObjectForm )GetContentStream ()([]byte ,error ){_ecdc ,_egdag :=_dbc .DecodeStream (_bgdab ._bacgb );if _egdag !=nil {return nil ,_egdag ;};return _ecdc ,nil ;};func (_acf *PdfReader )newPdfActionGotoEFromDict (_dbg *_dbc .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dba ,_afa :=_cgg (_dbg .Get ("\u0046"));if _afa !=nil {return nil ,_afa ;};return &PdfActionGoToE {D :_dbg .Get ("\u0044"),NewWindow :_dbg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_dbg .Get ("\u0054"),F :_dba },nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fgfg *PdfField )GetContext ()PdfModel {return _fgfg ._cgda };func (_gdga *PdfReader )newPdfActionImportDataFromDict (_fbb *_dbc .PdfObjectDictionary )(*PdfActionImportData ,error ){_adcf ,_dfb :=_cgg (_fbb .Get ("\u0046"));if _dfb !=nil {return nil ,_dfb ;};return &PdfActionImportData {F :_adcf },nil ;};func _cdfda (_abbe *_dbc .PdfObjectStream )(*PdfFunctionType0 ,error ){_efdg :=&PdfFunctionType0 {};_efdg ._fcfg =_abbe ;_caad :=_abbe .PdfObjectDictionary ;_dbgc ,_egbbd :=_dbc .TraceToDirectObject (_caad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dbc .PdfObjectArray );if !_egbbd {_gge .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dbgc .Len ()< 0||_dbgc .Len ()%2!=0{_gge .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ge .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_efdg .NumInputs =_dbgc .Len ()/2;_aggdb ,_cdce :=_dbgc .ToFloat64Array ();if _cdce !=nil {return nil ,_cdce ;};_efdg .Domain =_aggdb ;_dbgc ,_egbbd =_dbc .TraceToDirectObject (_caad .Get ("\u0052\u0061\u006eg\u0065")).(*_dbc .PdfObjectArray );if !_egbbd {_gge .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dbgc .Len ()< 0||_dbgc .Len ()%2!=0{return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_efdg .NumOutputs =_dbgc .Len ()/2;_gedbd ,_cdce :=_dbgc .ToFloat64Array ();if _cdce !=nil {return nil ,_cdce ;};_efdg .Range =_gedbd ;_dbgc ,_egbbd =_dbc .TraceToDirectObject (_caad .Get ("\u0053\u0069\u007a\u0065")).(*_dbc .PdfObjectArray );if !_egbbd {_gge .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cfda ,_cdce :=_dbgc .ToIntegerArray ();if _cdce !=nil {return nil ,_cdce ;};if len (_cfda )!=_efdg .NumInputs {_gge .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efdg .Size =_cfda ;_acab ,_egbbd :=_dbc .TraceToDirectObject (_caad .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_dbc .PdfObjectInteger );if !_egbbd {_gge .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_acab !=1&&*_acab !=2&&*_acab !=4&&*_acab !=8&&*_acab !=12&&*_acab !=16&&*_acab !=24&&*_acab !=32{_gge .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_acab );return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efdg .BitsPerSample =int (*_acab );_efdg .Order =1;_gaage ,_egbbd :=_dbc .TraceToDirectObject (_caad .Get ("\u004f\u0072\u0064e\u0072")).(*_dbc .PdfObjectInteger );if _egbbd {if *_gaage !=1&&*_gaage !=3{_gge .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gaage );return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efdg .Order =int (*_gaage );};_dbgc ,_egbbd =_dbc .TraceToDirectObject (_caad .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_dbc .PdfObjectArray );if _egbbd {_fcbd ,_afea :=_dbgc .ToFloat64Array ();if _afea !=nil {return nil ,_afea ;};_efdg .Encode =_fcbd ;};_dbgc ,_egbbd =_dbc .TraceToDirectObject (_caad .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_dbc .PdfObjectArray );if _egbbd {_abgaa ,_ccceg :=_dbgc .ToFloat64Array ();if _ccceg !=nil {return nil ,_ccceg ;};_efdg .Decode =_abgaa ;};_dgfbc ,_cdce :=_dbc .DecodeStream (_abbe );if _cdce !=nil {return nil ,_cdce ;};_efdg ._bfba =_dgfbc ;return _efdg ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_bafcbf *PdfDate )ToPdfObject ()_dbc .PdfObject {_aefbf :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bafcbf ._dagd ,_bafcbf ._fedfe ,_bafcbf ._aeed ,_bafcbf ._adbde ,_bafcbf ._eced ,_bafcbf ._ggcb ,_bafcbf ._efddc ,_bafcbf ._ebbca ,_bafcbf ._cffca );return _dbc .MakeString (_aefbf );};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_feebg byte )byte ;

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_dbc .PdfObjectStream ;OCSP []*_dbc .PdfObjectStream ;CRL []*_dbc .PdfObjectStream ;TU *_dbc .PdfObjectString ;TS *_dbc .PdfObjectString ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eagdf ,_ggeac :=_eg .Open (filePath );if _ggeac !=nil {_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ggeac );return nil ,_ggeac ;};defer _eagdf .Close ();return NewCompositePdfFontFromTTF (_eagdf );};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_fcffb :=NewPdfOutline ();_fcffb ._cadfc =&_fcffb ;return _fcffb ;};

// Fill populates `form` with values provided by `provider`.
func (_agggb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _agggb .fill (provider ,nil )};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _dbc .PdfObject ;Open _dbc .PdfObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ffbeg :=&XObjectImage {};_bfdgfd :=&_dbc .PdfObjectStream {};_bfdgfd .PdfObjectDictionary =_dbc .MakeDict ();_ffbeg ._acadb =_bfdgfd ;return _ffbeg ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_abf :=NewPdfAnnotation ();_dac :=&PdfAnnotationText {};_dac .PdfAnnotation =_abf ;_dac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abf .SetContext (_dac );return _dac ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_abcd :_dbc .MakeIndirectObject (_dbc .MakeDict ())};};func (_dcce *PdfReader )newPdfAnnotationPolyLineFromDict (_dbae *_dbc .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ebbd :=PdfAnnotationPolyLine {};_ecfg ,_feda :=_dcce .newPdfAnnotationMarkupFromDict (_dbae );if _feda !=nil {return nil ,_feda ;};_ebbd .PdfAnnotationMarkup =_ecfg ;_ebbd .Vertices =_dbae .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ebbd .LE =_dbae .Get ("\u004c\u0045");_ebbd .BS =_dbae .Get ("\u0042\u0053");_ebbd .IC =_dbae .Get ("\u0049\u0043");_ebbd .BE =_dbae .Get ("\u0042\u0045");_ebbd .IT =_dbae .Get ("\u0049\u0054");_ebbd .Measure =_dbae .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ebbd ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _dbc .PdfObject ;MK _dbc .PdfObject ;A _dbc .PdfObject ;AA _dbc .PdfObject ;BS _dbc .PdfObject ;Parent _dbc .PdfObject ;_agbg *PdfField ;_dce bool ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cbgfg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cbgfg .Mask ()|fl .Mask ())};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fdad *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_cadfc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_def :=NewPdfAction ();_bb :=&PdfActionMovie {};_bb .PdfAction =_def ;_def .SetContext (_bb );return _bb ;};func (_bebge *PdfWriter )copyObjects (){_cacfc :=make (map[_dbc .PdfObject ]_dbc .PdfObject );_gebcd :=make ([]_dbc .PdfObject ,0,len (_bebge ._cded ));_beeda :=make (map[_dbc .PdfObject ]struct{},len (_bebge ._cded ));_efgfg :=make (map[_dbc .PdfObject ]struct{});for _ ,_gefca :=range _bebge ._cded {_efcfg :=_bebge .copyObject (_gefca ,_cacfc ,_efgfg ,false );if _ ,_addef :=_efgfg [_gefca ];_addef {continue ;};_gebcd =append (_gebcd ,_efcfg );_beeda [_efcfg ]=struct{}{};};_bebge ._cded =_gebcd ;_bebge ._ebdbb =_beeda ;_bebge ._fffe =_bebge .copyObject (_bebge ._fffe ,_cacfc ,nil ,false ).(*_dbc .PdfIndirectObject );_bebge ._ccdgg =_bebge .copyObject (_bebge ._ccdgg ,_cacfc ,nil ,false ).(*_dbc .PdfIndirectObject );if _bebge ._baegd !=nil {_bebge ._baegd =_bebge .copyObject (_bebge ._baegd ,_cacfc ,nil ,false ).(*_dbc .PdfIndirectObject );};if _bebge ._edegf {_fcad :=make (map[_dbc .PdfObject ]int64 );for _eaeg ,_caacca :=range _bebge ._bdaf {if _bgcb ,_eabcg :=_cacfc [_eaeg ];_eabcg {_fcad [_bgcb ]=_caacca ;}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_bebge ._bdaf =_fcad ;};};

// L returns the value of the L component of the color.
func (_dceb *PdfColorLab )L ()float64 {return _dceb [0]};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bdga *PdfFieldButton )IsRadio ()bool {return _bdga .GetType ()==ButtonTypeRadio };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_dagd int64 ;_fedfe int64 ;_aeed int64 ;_adbde int64 ;_eced int64 ;_ggcb int64 ;_efddc byte ;_ebbca int64 ;_cffca int64 ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_deege *Image )GetParamsDict ()*_dbc .PdfObjectDictionary {_abac :=_dbc .MakeDict ();_abac .Set ("\u0057\u0069\u0064t\u0068",_dbc .MakeInteger (_deege .Width ));_abac .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dbc .MakeInteger (_deege .Height ));_abac .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dbc .MakeInteger (int64 (_deege .ColorComponents )));_abac .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbc .MakeInteger (_deege .BitsPerComponent ));return _abac ;};func (_abe *PdfReader )newPdfActionThreadFromDict (_fcg *_dbc .PdfObjectDictionary )(*PdfActionThread ,error ){_edd ,_dgd :=_cgg (_fcg .Get ("\u0046"));if _dgd !=nil {return nil ,_dgd ;};return &PdfActionThread {D :_fcg .Get ("\u0044"),B :_fcg .Get ("\u0042"),F :_edd },nil ;};type pdfSignDictionary struct{*_dbc .PdfObjectDictionary ;_bggea *SignatureHandler ;_ecdabg *PdfSignature ;_efggc int64 ;_cagba int ;_egaffa int ;_adbfg int ;_fbbebd int ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dbbed *modelManager )GetModelFromPrimitive (primitive _dbc .PdfObject )PdfModel {model ,_fdbd :=_dbbed ._ecgfdb [primitive ];if !_fdbd {return nil ;};return model ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// SetDecode sets the decode image float slice.
func (_cffcd *Image )SetDecode (decode []float64 ){_cffcd ._fgabe =decode };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_agab *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func _edfac (_adbf *_dbc .PdfObjectDictionary )(*PdfFieldText ,error ){_ccga :=&PdfFieldText {};_ccga .DA ,_ =_dbc .GetString (_adbf .Get ("\u0044\u0041"));_ccga .Q ,_ =_dbc .GetInt (_adbf .Get ("\u0051"));_ccga .DS ,_ =_dbc .GetString (_adbf .Get ("\u0044\u0053"));_ccga .RV =_adbf .Get ("\u0052\u0056");_ccga .MaxLen ,_ =_dbc .GetInt (_adbf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ccga ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bfaa *PdfPage )SetContentStreams (cStreams []string ,encoder _dbc .StreamEncoder )error {if len (cStreams )==0{_bfaa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_dbc .NewRawEncoder ();};var _bcbec []*_dbc .PdfObjectStream ;for _ ,_egfeb :=range cStreams {_bcgcb :=&_dbc .PdfObjectStream {};_eaae :=encoder .MakeStreamDict ();_dffec ,_ddeda :=encoder .EncodeBytes ([]byte (_egfeb ));if _ddeda !=nil {return _ddeda ;};_eaae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_dffec ))));_bcgcb .PdfObjectDictionary =_eaae ;_bcgcb .Stream =_dffec ;_bcbec =append (_bcbec ,_bcgcb );};if len (_bcbec )==1{_bfaa .Contents =_bcbec [0];}else {_ffedd :=_dbc .MakeArray ();for _ ,_cedbg :=range _bcbec {_ffedd .Append (_cedbg );};_bfaa .Contents =_ffedd ;};return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gabab *VRI )ToPdfObject ()*_dbc .PdfObjectDictionary {_bbcbg :=_dbc .MakeDict ();_bbcbg .SetIfNotNil (_dbc .PdfObjectName ("\u0043\u0065\u0072\u0074"),_deae (_gabab .Cert ));_bbcbg .SetIfNotNil (_dbc .PdfObjectName ("\u004f\u0043\u0053\u0050"),_deae (_gabab .OCSP ));_bbcbg .SetIfNotNil (_dbc .PdfObjectName ("\u0043\u0052\u004c"),_deae (_gabab .CRL ));_bbcbg .SetIfNotNil ("\u0054\u0055",_gabab .TU );_bbcbg .SetIfNotNil ("\u0054\u0053",_gabab .TS );return _bbcbg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dfce *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abcg ,_gebd :=_dbc .GetNumbersAsFloat (objects );if _gebd !=nil {return nil ,_gebd ;};return _dfce .ColorFromFloats (_abcg );};func _ceggc ()_f .Time {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _feddb };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbbdc *PdfShadingType2 )ToPdfObject ()_dbc .PdfObject {_gbbdc .PdfShading .ToPdfObject ();_cbeccb ,_agcf :=_gbbdc .getShadingDict ();if _agcf !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cbeccb ==nil {_gge .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gbbdc .Coords !=nil {_cbeccb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gbbdc .Coords );};if _gbbdc .Domain !=nil {_cbeccb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbbdc .Domain );};if _gbbdc .Function !=nil {if len (_gbbdc .Function )==1{_cbeccb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbbdc .Function [0].ToPdfObject ());}else {_dgdcg :=_dbc .MakeArray ();for _ ,_cdfbb :=range _gbbdc .Function {_dgdcg .Append (_cdfbb .ToPdfObject ());};_cbeccb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgdcg );};};if _gbbdc .Extend !=nil {_cbeccb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gbbdc .Extend );};return _gbbdc ._bdgfb ;};

// ToInteger convert to an integer format.
func (_deeeb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cbdc :=_bc .Pow (2,float64 (bits ))-1;return uint32 (_cbdc *_deeeb .Val ());};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetNumPages returns the number of pages in the document.
func (_fgfb *PdfReader )GetNumPages ()(int ,error ){if _fgfb ._efgcc .GetCrypter ()!=nil &&!_fgfb ._efgcc .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_fgfb ._afege ),nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_decd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _decd .Range };

// ToPdfObject returns a stream object.
func (_ffdca *XObjectImage )ToPdfObject ()_dbc .PdfObject {_ffcff :=_ffdca ._acadb ;_ffdaf :=_ffcff .PdfObjectDictionary ;if _ffdca .Filter !=nil {_ffdaf =_ffdca .Filter .MakeStreamDict ();_ffcff .PdfObjectDictionary =_ffdaf ;};_ffdaf .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_ffdaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0049\u006d\u0061g\u0065"));_ffdaf .Set ("\u0057\u0069\u0064t\u0068",_dbc .MakeInteger (*(_ffdca .Width )));_ffdaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dbc .MakeInteger (*(_ffdca .Height )));if _ffdca .BitsPerComponent !=nil {_ffdaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbc .MakeInteger (*(_ffdca .BitsPerComponent )));};if _ffdca .ColorSpace !=nil {_ffdaf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ffdca .ColorSpace .ToPdfObject ());};_ffdaf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ffdca .Intent );_ffdaf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ffdca .ImageMask );_ffdaf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ffdca .Mask );_ffdaf .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffdca .Decode );_ffdaf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ffdca .Interpolate );_ffdaf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ffdca .Alternatives );_ffdaf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ffdca .SMask );_ffdaf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ffdca .SMaskInData );_ffdaf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ffdca .Matte );_ffdaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffdca .Name );_ffdaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ffdca .StructParent );_ffdaf .SetIfNotNil ("\u0049\u0044",_ffdca .ID );_ffdaf .SetIfNotNil ("\u004f\u0050\u0049",_ffdca .OPI );_ffdaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ffdca .Metadata );_ffdaf .SetIfNotNil ("\u004f\u0043",_ffdca .OC );_ffdaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_ffdca .Stream ))));_ffcff .Stream =_ffdca .Stream ;return _ffcff ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cecca *pdfFontSimple )ToPdfObject ()_dbc .PdfObject {if _cecca ._abga ==nil {_cecca ._abga =&_dbc .PdfIndirectObject {};};_cgccf :=_cecca .baseFields ().asPdfObjectDictionary ("");_cecca ._abga .PdfObject =_cgccf ;if _cecca .FirstChar !=nil {_cgccf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cecca .FirstChar );};if _cecca .LastChar !=nil {_cgccf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cecca .LastChar );};if _cecca .Widths !=nil {_cgccf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cecca .Widths );};if _cecca .Encoding !=nil {_cgccf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cecca .Encoding );}else if _cecca ._cggaf !=nil {_egcbg :=_cecca ._cggaf .ToPdfObject ();if _egcbg !=nil {_cgccf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egcbg );};};return _cecca ._abga ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ccgec *PdfFont )SubsetRegistered ()error {switch _agga :=_ccgec ._ceef .(type ){case *pdfFontType0 :_agabdc :=_agga .subsetRegistered ();if _agabdc !=nil {_gge .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_agabdc );return _agabdc ;};if _agga ._cegea !=nil {if _agga ._deec !=nil {_agga ._deec .ToPdfObject ();};_agga .ToPdfObject ();};default:_gge .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_agga );};return nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_de .PSProgram ;_dfbfe *_de .PSExecutor ;_fbea []byte ;_dcdffg *_dbc .PdfObjectStream ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _f .Time )(PdfDate ,error ){_eggdc :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_accd ,_ :=_gb .ParseInt (_eggdc [1:3],10,32);_edbbed ,_ :=_gb .ParseInt (_eggdc [4:6],10,32);return PdfDate {_dagd :int64 (timeObj .Year ()),_fedfe :int64 (timeObj .Month ()),_aeed :int64 (timeObj .Day ()),_adbde :int64 (timeObj .Hour ()),_eced :int64 (timeObj .Minute ()),_ggcb :int64 (timeObj .Second ()),_efddc :_eggdc [0],_ebbca :_accd ,_cffca :_edbbed },nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gaf :=NewPdfAction ();_cga :=&PdfActionResetForm {};_cga .PdfAction =_gaf ;_gaf .SetContext (_cga );return _cga ;};func (_cgd *PdfReader )loadAction (_gcfe _dbc .PdfObject )(*PdfAction ,error ){if _cdgb ,_ffe :=_dbc .GetIndirect (_gcfe );_ffe {_bced ,_edad :=_cgd .newPdfActionFromIndirectObject (_cdgb );if _edad !=nil {return nil ,_edad ;};return _bced ,nil ;}else if !_dbc .IsNullObject (_gcfe ){return nil ,_ge .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// Write writes out the PDF.
func (_cdcce *PdfWriter )Write (writer _ec .Writer )error {_gge .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bdcaaf :=_gc .GetLicenseKey ();if (_bdcaaf ==nil ||!_bdcaaf .IsLicensed ())&&!_gaadb {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _ge .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cdcce ._afeeg !=nil {_gge .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cdcce ._afeeg );_agaa :=_cdcce ._afeeg .ToPdfObject ();_gge .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_agaa ,_agaa ,_agaa );_cdcce ._eddef .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_agaa );_dece :=_cdcce .addObjects (_agaa );if _dece !=nil {return _dece ;};};if _cdcce ._bfddg !=nil {_gge .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_efeag :=_cdcce ._bfddg .ToPdfObject ();_gge .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_efeag );_cdcce ._eddef .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_efeag );_ebfgba :=_cdcce .addObjects (_efeag );if _ebfgba !=nil {return _ebfgba ;};};for _daef ,_ebfeg :=range _cdcce ._aeeg {if !_cdcce .hasObject (_daef ){_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_daef ,_daef ,_daef );for _ ,_ebcad :=range _ebfeg {for _ ,_cdga :=range _ebcad .Keys (){_fgdge :=_ebcad .Get (_cdga );if _fgdge ==_daef {_gge .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_ebcad .Set (_cdga ,_dbc .MakeNull ());break ;};};};};};_cdcce ._eddef .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_dbc .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_cdcce ._ccaec ,_cdcce ._adaa )));_cdcce .copyObjects ();if _cdcce ._dgba !=nil {var _cbada error ;_cdcce ._cded ,_cbada =_cdcce ._dgba .Optimize (_cdcce ._cded );if _cbada !=nil {return _cbada ;};_adffe :=make (map[_dbc .PdfObject ]struct{},len (_cdcce ._cded ));for _ ,_agefb :=range _cdcce ._cded {_adffe [_agefb ]=struct{}{};};_cdcce ._ebdbb =_adffe ;};_cdcce ._fgafa =_cdcce ._cabce ;_cdcce ._ecedd =_ba .NewWriter (writer );_egedf :=_cdcce ._ccaec > 1||(_cdcce ._ccaec ==1&&_cdcce ._adaa > 4);if _cdcce ._babf !=nil {_egedf =*_cdcce ._babf ;};_ffcfd :=make (map[_dbc .PdfObject ]bool );for _ ,_cdfc :=range _cdcce ._cded {if _fedcg ,_eeccb :=_cdfc .(*_dbc .PdfObjectStreams );_eeccb {_egedf =true ;for _ ,_faeca :=range _fedcg .Elements (){_ffcfd [_faeca ]=true ;if _fced ,_afbea :=_faeca .(*_dbc .PdfIndirectObject );_afbea {_ffcfd [_fced .PdfObject ]=true ;};};};};if _egedf &&_cdcce ._ccaec ==1&&_cdcce ._adaa < 5{_cdcce ._adaa =5;};if _cdcce ._edegf {_cdcce .writeString ("\u000a");}else {_cdcce .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cdcce ._ccaec ,_cdcce ._adaa ));_cdcce .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_cdcce .updateObjectNumbers ();_gge .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cdcce ._cded ));_cdcce ._acgfd =make (map[int ]crossReference );_cdcce ._acgfd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cdcce ._dagcg .ObjectMap !=nil {for _fgcdg ,_dfabd :=range _cdcce ._dagcg .ObjectMap {if _fgcdg ==0{continue ;};if _dfabd .XType ==_dbc .XrefTypeObjectStream {_dagcgg :=crossReference {Type :2,ObjectNumber :_dfabd .OsObjNumber ,Index :_dfabd .OsObjIndex };_cdcce ._acgfd [_fgcdg ]=_dagcgg ;};if _dfabd .XType ==_dbc .XrefTypeTableEntry {_gecdg :=crossReference {Type :1,ObjectNumber :_dfabd .ObjectNumber ,Offset :_dfabd .Offset };_cdcce ._acgfd [_fgcdg ]=_gecdg ;};};};for _ ,_egff :=range _cdcce ._cded {if _fbcgd :=_ffcfd [_egff ];_fbcgd {continue ;};_debf :=int64 (0);switch _cfggf :=_egff .(type ){case *_dbc .PdfIndirectObject :_debf =_cfggf .ObjectNumber ;case *_dbc .PdfObjectStream :_debf =_cfggf .ObjectNumber ;case *_dbc .PdfObjectStreams :_debf =_cfggf .ObjectNumber ;default:_gge .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_egff );return ErrTypeCheck ;};if _cdcce ._bdgee !=nil &&_egff !=_cdcce ._baegd {_dfegfd :=_cdcce ._bdgee .Encrypt (_egff ,_debf ,0);if _dfegfd !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dfegfd );return _dfegfd ;};};_cdcce .writeObject (int (_debf ),_egff );};_agadg :=_cdcce ._fgafa ;var _abgbg int ;for _cafea :=range _cdcce ._acgfd {if _cafea > _abgbg {_abgbg =_cafea ;};};if _egedf {_eaec :=_abgbg +1;_cdcce ._acgfd [_eaec ]=crossReference {Type :1,ObjectNumber :_eaec ,Offset :_agadg };_babff :=_gd .NewBuffer (nil );_egcaa :=_dbc .MakeArray ();for _ddbde :=0;_ddbde <=_abgbg ;{for ;_ddbde <=_abgbg ;_ddbde ++{_fggd ,_eeggc :=_cdcce ._acgfd [_ddbde ];if _eeggc &&(!_cdcce ._edegf ||_cdcce ._edegf &&(_fggd .Type ==1&&_fggd .Offset >=_cdcce ._fbff ||_fggd .Type ==0)){break ;};};var _deabd int ;for _deabd =_ddbde +1;_deabd <=_abgbg ;_deabd ++{_cfecd ,_facce :=_cdcce ._acgfd [_deabd ];if _facce &&(!_cdcce ._edegf ||_cdcce ._edegf &&(_cfecd .Type ==1&&_cfecd .Offset > _cdcce ._fbff )){continue ;};break ;};_egcaa .Append (_dbc .MakeInteger (int64 (_ddbde )),_dbc .MakeInteger (int64 (_deabd -_ddbde )));for _becgg :=_ddbde ;_becgg < _deabd ;_becgg ++{_bddec :=_cdcce ._acgfd [_becgg ];switch _bddec .Type {case 0:_d .Write (_babff ,_d .BigEndian ,byte (0));_d .Write (_babff ,_d .BigEndian ,uint32 (0));_d .Write (_babff ,_d .BigEndian ,uint16 (0xFFFF));case 1:_d .Write (_babff ,_d .BigEndian ,byte (1));_d .Write (_babff ,_d .BigEndian ,uint32 (_bddec .Offset ));_d .Write (_babff ,_d .BigEndian ,uint16 (_bddec .Generation ));case 2:_d .Write (_babff ,_d .BigEndian ,byte (2));_d .Write (_babff ,_d .BigEndian ,uint32 (_bddec .ObjectNumber ));_d .Write (_babff ,_d .BigEndian ,uint16 (_bddec .Index ));};};_ddbde =_deabd +1;};_cegdg ,_accfc :=_dbc .MakeStream (_babff .Bytes (),_dbc .NewFlateEncoder ());if _accfc !=nil {return _accfc ;};_cegdg .ObjectNumber =int64 (_eaec );_cegdg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0058\u0052\u0065\u0066"));_cegdg .PdfObjectDictionary .Set ("\u0057",_dbc .MakeArray (_dbc .MakeInteger (1),_dbc .MakeInteger (4),_dbc .MakeInteger (2)));_cegdg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_egcaa );_cegdg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_dbc .MakeInteger (int64 (_eaec +1)));_cegdg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cdcce ._fffe );_cegdg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cdcce ._ccdgg );if _cdcce ._edegf &&_cdcce ._fgbea > 0{_cegdg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_dbc .MakeInteger (_cdcce ._fgbea ));};if _cdcce ._bdgee !=nil {_cegdg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdcce ._baegd );_cegdg .Set ("\u0049\u0044",_cdcce ._fbgddd );_gge .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdcce ._fbgddd );};_cdcce .writeObject (int (_cegdg .ObjectNumber ),_cegdg );}else {_cdcce .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dede :=0;_dede <=_abgbg ;{for ;_dede <=_abgbg ;_dede ++{_aegac ,_ecgff :=_cdcce ._acgfd [_dede ];if _ecgff &&(!_cdcce ._edegf ||_cdcce ._edegf &&(_aegac .Type ==1&&_aegac .Offset >=_cdcce ._fbff ||_aegac .Type ==0)){break ;};};var _bcdbg int ;for _bcdbg =_dede +1;_bcdbg <=_abgbg ;_bcdbg ++{_egfge ,_agdbd :=_cdcce ._acgfd [_bcdbg ];if _agdbd &&(!_cdcce ._edegf ||_cdcce ._edegf &&(_egfge .Type ==1&&_egfge .Offset > _cdcce ._fbff )){continue ;};break ;};_beff :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dede ,_bcdbg -_dede );_cdcce .writeString (_beff );for _agcae :=_dede ;_agcae < _bcdbg ;_agcae ++{_feae :=_cdcce ._acgfd [_agcae ];switch _feae .Type {case 0:_beff =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_cdcce .writeString (_beff );case 1:_beff =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_feae .Offset ,0);_cdcce .writeString (_beff );};};_dede =_bcdbg +1;};_aabgf :=_dbc .MakeDict ();_aabgf .Set ("\u0049\u006e\u0066\u006f",_cdcce ._fffe );_aabgf .Set ("\u0052\u006f\u006f\u0074",_cdcce ._ccdgg );_aabgf .Set ("\u0053\u0069\u007a\u0065",_dbc .MakeInteger (int64 (_abgbg +1)));if _cdcce ._edegf &&_cdcce ._fgbea > 0{_aabgf .Set ("\u0050\u0072\u0065\u0076",_dbc .MakeInteger (_cdcce ._fgbea ));};if _cdcce ._bdgee !=nil {_aabgf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdcce ._baegd );_aabgf .Set ("\u0049\u0044",_cdcce ._fbgddd );_gge .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdcce ._fbgddd );};_cdcce .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cdcce .writeString (_aabgf .WriteString ());_cdcce .writeString ("\u000a");};_gbgaa :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_agadg );_cdcce .writeString (_gbgaa );_cdcce .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _cdcce ._ecafa ==nil {_cdcce ._ecafa =_cdcce ._ecedd .Flush ();};return _cdcce ._ecafa ;};func _badeb (_bab _dbc .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_faec :=&PdfColorspaceDeviceNAttributes {};var _bdcaa *_dbc .PdfObjectDictionary ;if _fdada ,_fbdg :=_bab .(*_dbc .PdfIndirectObject );_fbdg {_faec ._dded =_fdada ;var _ecd bool ;_bdcaa ,_ecd =_fdada .PdfObject .(*_dbc .PdfObjectDictionary );if !_ecd {_gge .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _deabf ,_bdgb :=_bab .(*_dbc .PdfObjectDictionary );_bdgb {_bdcaa =_deabf ;}else {_gge .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eagb :=_bdcaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_eagb !=nil {_bdcfe ,_eegbb :=_dbc .TraceToDirectObject (_eagb ).(*_dbc .PdfObjectName );if !_eegbb {_gge .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_faec .Subtype =_bdcfe ;};if _bgab :=_bdcaa .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_bgab !=nil {_faec .Colorants =_bgab ;};if _bbega :=_bdcaa .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_bbega !=nil {_faec .Process =_bbega ;};if _fada :=_bdcaa .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fada !=nil {_faec .MixingHints =_fada ;};return _faec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_adcb *PdfAnnotationLink )ToPdfObject ()_dbc .PdfObject {_adcb .PdfAnnotation .ToPdfObject ();_fgfa :=_adcb ._gef ;_bfcf :=_fgfa .PdfObject .(*_dbc .PdfObjectDictionary );_bfcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u004c\u0069\u006e\u006b"));if _adcb ._bge !=nil &&_adcb ._bge ._df !=nil {_bfcf .Set ("\u0041",_adcb ._bge ._df .ToPdfObject ());}else if _adcb .A !=nil {_bfcf .Set ("\u0041",_adcb .A );};_bfcf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_adcb .Dest );_bfcf .SetIfNotNil ("\u0048",_adcb .H );_bfcf .SetIfNotNil ("\u0050\u0041",_adcb .PA );_bfcf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_adcb .QuadPoints );_bfcf .SetIfNotNil ("\u0042\u0053",_adcb .BS );return _fgfa ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eccbd *PdfPageResources )SetColorspaceByName (keyName _dbc .PdfObjectName ,cs PdfColorspace )error {_ddfd ,_eccbdb :=_eccbd .GetColorspaces ();if _eccbdb !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eccbdb );return _eccbdb ;};if _ddfd ==nil {_ddfd =NewPdfPageResourcesColorspaces ();_eccbd .SetColorSpace (_ddfd );};_ddfd .Set (keyName ,cs );return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_fddc *pdfFontType0 )ToPdfObject ()_dbc .PdfObject {if _fddc ._cegea ==nil {_fddc ._cegea =&_dbc .PdfIndirectObject {};};_dgeg :=_fddc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_fddc ._cegea .PdfObject =_dgeg ;if _fddc .Encoding !=nil {_dgeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fddc .Encoding );}else if _fddc ._deec !=nil {_dgeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fddc ._deec .ToPdfObject ());};if _fddc .DescendantFont !=nil {_dgeg .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_dbc .MakeArray (_fddc .DescendantFont .ToPdfObject ()));};return _fddc ._cegea ;};

// ToPdfObject implements interface PdfModel.
func (_bgc *PdfActionTrans )ToPdfObject ()_dbc .PdfObject {_bgc .PdfAction .ToPdfObject ();_abg :=_bgc ._ff ;_fd :=_abg .PdfObject .(*_dbc .PdfObjectDictionary );_fd .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeTrans )));_fd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bgc .Trans );return _abg ;};func (_eace *PdfReader )newPdfActionRenditionFromDict (_bgae *_dbc .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bgae .Get ("\u0052"),AN :_bgae .Get ("\u0041\u004e"),OP :_bgae .Get ("\u004f\u0050"),JS :_bgae .Get ("\u004a\u0053")},nil ;};func (_eedac *pdfFontType0 )baseFields ()*fontCommon {return &_eedac .fontCommon };func _cdab ()*modelManager {_cceb :=modelManager {};_cceb ._gdege =map[PdfModel ]_dbc .PdfObject {};_cceb ._ecgfdb =map[_dbc .PdfObject ]PdfModel {};return &_cceb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bbea *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgdg :=vals [0];if _cgdg < 0.0||_cgdg > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aafc :=NewPdfColorCalGray (_cgdg );return _aafc ,nil ;};func (_cgga *PdfReader )newPdfFieldSignatureFromDict (_eedfe *_dbc .PdfObjectDictionary )(*PdfFieldSignature ,error ){_beeca :=&PdfFieldSignature {};_cgbg ,_ggcgc :=_dbc .GetIndirect (_eedfe .Get ("\u0056"));if _ggcgc {var _ffffc error ;_beeca .V ,_ffffc =_cgga .newPdfSignatureFromIndirect (_cgbg );if _ffffc !=nil {return nil ,_ffffc ;};};_beeca .Lock ,_ =_dbc .GetIndirect (_eedfe .Get ("\u004c\u006f\u0063\u006b"));_beeca .SV ,_ =_dbc .GetIndirect (_eedfe .Get ("\u0053\u0056"));return _beeca ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_acfb *pdfCIDFontType2 )ToPdfObject ()_dbc .PdfObject {if _acfb ._gddg ==nil {_acfb ._gddg =&_dbc .PdfIndirectObject {};};_afaa :=_acfb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_acfb ._gddg .PdfObject =_afaa ;if _acfb .CIDSystemInfo !=nil {_afaa .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_acfb .CIDSystemInfo );};if _acfb .DW !=nil {_afaa .Set ("\u0044\u0057",_acfb .DW );};if _acfb .DW2 !=nil {_afaa .Set ("\u0044\u0057\u0032",_acfb .DW2 );};if _acfb .W !=nil {_afaa .Set ("\u0057",_acfb .W );};if _acfb .W2 !=nil {_afaa .Set ("\u0057\u0032",_acfb .W2 );};if _acfb .CIDToGIDMap !=nil {_afaa .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_acfb .CIDToGIDMap );};return _acfb ._gddg ;};func _bagc (_acdg _dbc .PdfObject )(*PdfColorspaceDeviceN ,error ){_adab :=NewPdfColorspaceDeviceN ();if _afaba ,_gcee :=_acdg .(*_dbc .PdfIndirectObject );_gcee {_adab ._gcbe =_afaba ;};_acdg =_dbc .TraceToDirectObject (_acdg );_ebdba ,_ceag :=_acdg .(*_dbc .PdfObjectArray );if !_ceag {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ebdba .Len ()!=4&&_ebdba .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_acdg =_ebdba .Get (0);_cebfc ,_ceag :=_acdg .(*_dbc .PdfObjectName );if !_ceag {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_cebfc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_acdg =_ebdba .Get (1);_acdg =_dbc .TraceToDirectObject (_acdg );_aecaff ,_ceag :=_acdg .(*_dbc .PdfObjectArray );if !_ceag {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_adab .ColorantNames =_aecaff ;_acdg =_ebdba .Get (2);_gbff ,_dccd :=NewPdfColorspaceFromPdfObject (_acdg );if _dccd !=nil {return nil ,_dccd ;};_adab .AlternateSpace =_gbff ;_cgcd ,_dccd :=_edcfc (_ebdba .Get (3));if _dccd !=nil {return nil ,_dccd ;};_adab .TintTransform =_cgcd ;if _ebdba .Len ()==5{_ebcc ,_bfee :=_badeb (_ebdba .Get (4));if _bfee !=nil {return nil ,_bfee ;};_adab .Attributes =_ebcc ;};return _adab ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_baeb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dggfg *PdfPageResources )GetColorspaceByName (keyName _dbc .PdfObjectName )(PdfColorspace ,bool ){_ecef ,_becb :=_dggfg .GetColorspaces ();if _becb !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_becb );return nil ,false ;};if _ecef ==nil {return nil ,false ;};_cafgg ,_abce :=_ecef .Colorspaces [string (keyName )];if !_abce {return nil ,false ;};return _cafgg ,true ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fgd :=NewPdfAnnotation ();_cecf :=&PdfAnnotationLink {};_cecf .PdfAnnotation =_fgd ;_fgd .SetContext (_cecf );return _cecf ;};type fontCommon struct{_cebb string ;_abdbb string ;_afda string ;_cefde _dbc .PdfObject ;_caga *_ce .CMap ;_gadcb *PdfFontDescriptor ;_egbc int64 ;};

// ToPdfObject implements interface PdfModel.
func (_fce *PdfAnnotationInk )ToPdfObject ()_dbc .PdfObject {_fce .PdfAnnotation .ToPdfObject ();_edfa :=_fce ._gef ;_efg :=_edfa .PdfObject .(*_dbc .PdfObjectDictionary );_fce .PdfAnnotationMarkup .appendToPdfDictionary (_efg );_efg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0049\u006e\u006b"));_efg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fce .InkList );_efg .SetIfNotNil ("\u0042\u0053",_fce .BS );return _edfa ;};type pdfFontType0 struct{fontCommon ;_cegea *_dbc .PdfIndirectObject ;_deec _cg .TextEncoder ;Encoding _dbc .PdfObject ;DescendantFont *PdfFont ;_bfad *_ce .CMap ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fcb :=&PdfAction {};_fcb ._ff =_dbc .MakeIndirectObject (_dbc .MakeDict ());return _fcb ;};

// GetAction returns the PDF action for the annotation link.
func (_bdg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bdg ._bge !=nil {return _bdg ._bge ,nil ;};if _bdg .A ==nil {return nil ,nil ;};if _bdg ._aae ==nil {return nil ,nil ;};_ecf ,_cff :=_bdg ._aae .loadAction (_bdg .A );if _cff !=nil {return nil ,_cff ;};_bdg ._bge =_ecf ;return _bdg ._bge ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bged *PdfFieldChoice )ToPdfObject ()_dbc .PdfObject {_bged .PdfField .ToPdfObject ();_cebd :=_bged ._befed ;_edbe :=_cebd .PdfObject .(*_dbc .PdfObjectDictionary );_edbe .Set ("\u0046\u0054",_dbc .MakeName ("\u0043\u0068"));if _bged .Opt !=nil {_edbe .Set ("\u004f\u0070\u0074",_bged .Opt );};if _bged .TI !=nil {_edbe .Set ("\u0054\u0049",_bged .TI );};if _bged .I !=nil {_edbe .Set ("\u0049",_bged .I );};return _cebd ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_gdaca *PdfReader )IsEncrypted ()(bool ,error ){return _gdaca ._efgcc .IsEncrypted ()};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _dbc .PdfObject ;IC _dbc .PdfObject ;BE _dbc .PdfObject ;RD _dbc .PdfObject ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_egbeg *PdfFieldButton )SetType (btype ButtonType ){_gggaa :=uint32 (0);if _egbeg .Ff !=nil {_gggaa =uint32 (*_egbeg .Ff );};switch btype {case ButtonTypePush :_gggaa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_gggaa |=FieldFlagRadio .Mask ();};_egbeg .Ff =_dbc .MakeInteger (int64 (_gggaa ));};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cdadc *Outline )Insert (index uint ,item *OutlineItem ){_dacc :=uint (len (_cdadc .Entries ));if index > _dacc {index =_dacc ;};_cdadc .Entries =append (_cdadc .Entries [:index ],append ([]*OutlineItem {item },_cdadc .Entries [index :]...)...);};

// C returns the value of the C component of the color.
func (_efgd *PdfColorCalRGB )C ()float64 {return _efgd [2]};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_dbc .PdfObjectInteger ;BitsPerComponent *_dbc .PdfObjectInteger ;BitsPerFlag *_dbc .PdfObjectInteger ;Decode *_dbc .PdfObjectArray ;Function []PdfFunction ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fabca *Image )ToJBIG2Image ()(*_dbc .JBIG2Image ,error ){_egdgd ,_cfcfb :=_fabca .ToGoImage ();if _cfcfb !=nil {return nil ,_cfcfb ;};return _dbc .GoImageToJBIG2 (_egdgd ,_dbc .JB2ImageAutoThreshold );};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_db .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_db .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_db .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_dddcb *PdfAppender ;_ecbd *DSS ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _dbc .PdfObject ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_efga :=map[rune ]int {};for _ ,_cccbc :=range text {_efga [_cccbc ]++;};return _efga ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_efag *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_fae :=func (_deabc float64 )float64 {if _deabc >=6.0/29{return _deabc *_deabc *_deabc ;};return 108.0/841*(_deabc -4/29);};_eabb :=img ._fgabe ;if len (_eabb )!=6{_gge .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_eabb =_efag .DecodeArray ();};_begcc :=_bee .NewReader (img .getBase ());_fdfd :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gaaea ,img ._fgabe );_fcfb :=_bee .NewWriter (_fdfd );_cdbb :=_bc .Pow (2,float64 (img .BitsPerComponent ))-1;_fecb :=make ([]uint32 ,3);var (_bdcc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_gade ,_fbgf ,_adbcf float64 ;);for {_bdcc =_begcc .ReadSamples (_fecb );if _bdcc ==_ec .EOF {break ;}else if _bdcc !=nil {return img ,_bdcc ;};Ls =float64 (_fecb [0])/_cdbb ;As =float64 (_fecb [1])/_cdbb ;Bs =float64 (_fecb [2])/_cdbb ;Ls =_ggd .LinearInterpolate (Ls ,0.0,1.0,_eabb [0],_eabb [1]);As =_ggd .LinearInterpolate (As ,0.0,1.0,_eabb [2],_eabb [3]);Bs =_ggd .LinearInterpolate (Bs ,0.0,1.0,_eabb [4],_eabb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_efag .WhitePoint [0]*_fae (L );Y =_efag .WhitePoint [1]*_fae (M );Z =_efag .WhitePoint [2]*_fae (N );_gade =3.240479*X +-1.537150*Y +-0.498535*Z ;_fbgf =-0.969256*X +1.875992*Y +0.041556*Z ;_adbcf =0.055648*X +-0.204043*Y +1.057311*Z ;_gade =_bc .Min (_bc .Max (_gade ,0),1.0);_fbgf =_bc .Min (_bc .Max (_fbgf ,0),1.0);_adbcf =_bc .Min (_bc .Max (_adbcf ,0),1.0);_fecb [0]=uint32 (_gade *_cdbb );_fecb [1]=uint32 (_fbgf *_cdbb );_fecb [2]=uint32 (_adbcf *_cdbb );if _bdcc =_fcfb .WriteSamples (_fecb );_bdcc !=nil {return img ,_bdcc ;};};return _dfddd (&_fdfd ),nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _dbc .PdfObject ;T _dbc .PdfObject ;Operation _dbc .PdfObject ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_egfd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bfdc :=_bee .NewReader (img .getBase ());_feec :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gaaea ,img ._fgabe );_ggad :=_bee .NewWriter (_feec );_cgec :=_bc .Pow (2,float64 (img .BitsPerComponent ))-1;_beab :=_egfd .GetNumComponents ();_bfgg :=make ([]uint32 ,_beab );_acaa :=make ([]float64 ,_beab );for {_ccag :=_bfdc .ReadSamples (_bfgg );if _ccag ==_ec .EOF {break ;}else if _ccag !=nil {return img ,_ccag ;};for _bdagg :=0;_bdagg < _beab ;_bdagg ++{_acacb :=float64 (_bfgg [_bdagg ])/_cgec ;_acaa [_bdagg ]=_acacb ;};_abddg ,_ccag :=_egfd .TintTransform .Evaluate (_acaa );if _ccag !=nil {return img ,_ccag ;};for _ ,_bedc :=range _abddg {_bedc =_bc .Min (_bc .Max (0,_bedc ),1.0);if _ccag =_ggad .WriteSample (uint32 (_bedc *_cgec ));_ccag !=nil {return img ,_ccag ;};};};return _egfd .AlternateSpace .ImageToRGB (_dfddd (&_feec ));};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gebc :_dbc .MakeIndirectObject (_dbc .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cd :=NewPdfAction ();_bfc :=&PdfActionThread {};_bfc .PdfAction =_cd ;_cd .SetContext (_bfc );return _bfc ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cegb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cegb .GetNumComponents (){return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fede ,_fdbg :=_cegb .TintTransform .Evaluate (vals );if _fdbg !=nil {return nil ,_fdbg ;};_fffd ,_fdbg :=_cegb .AlternateSpace .ColorFromFloats (_fede );if _fdbg !=nil {return nil ,_fdbg ;};return _fffd ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_agde :=NewPdfAnnotation ();_dbbb :=&PdfAnnotationStamp {};_dbbb .PdfAnnotation =_agde ;_dbbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agde .SetContext (_dbbb );return _dbbb ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_deedf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _deedf ._agbga !=nil {return _deedf ._agbga ,nil ;};if _deedf .ColorSpace ==nil {return nil ,nil ;};_afba ,_ddggd :=_abbf (_deedf .ColorSpace );if _ddggd !=nil {return nil ,_ddggd ;};_deedf ._agbga =_afba ;return _deedf ._agbga ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_begdd *DSS )GetContainingPdfObject ()_dbc .PdfObject {return _begdd ._gebc };func (_cfga *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// Encoder returns the font's text encoder.
func (_bebg pdfFontType0 )Encoder ()_cg .TextEncoder {return _bebg ._deec };

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_acdcg *XObjectImage )SetFilter (encoder _dbc .StreamEncoder )error {_febfc :=_acdcg .Stream ;_gdbfd ,_afccb :=_acdcg .Filter .DecodeBytes (_febfc );if _afccb !=nil {return _afccb ;};_acdcg .Filter =encoder ;encoder .UpdateParams (_acdcg .getParamsDict ());_febfc ,_afccb =encoder .EncodeBytes (_gdbfd );if _afccb !=nil {return _afccb ;};_acdcg .Stream =_febfc ;return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject returns the PDF representation of the pattern.
func (_dedgc *PdfPattern )ToPdfObject ()_dbc .PdfObject {_gbgcf :=_dedgc .getDict ();_gbgcf .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gbgcf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_dbc .MakeInteger (_dedgc .PatternType ));return _dedgc ._dfacd ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bfcfc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bfcfc ._cffa ==nil {_bfcfc .GetAnnotations ();};_bfcfc ._cffa =append (_bfcfc ._cffa ,annot );};func (_gaaa *PdfReader )newPdfAnnotationPopupFromDict (_gfbe *_dbc .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_adba :=PdfAnnotationPopup {};_adba .Parent =_gfbe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_adba .Open =_gfbe .Get ("\u004f\u0070\u0065\u006e");return &_adba ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_defea *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){const _fddb =_cg .CharCode (32);const _bbcf =_cg .CharCode (255);_dccdf ,_cddb :=_dd .ReadAll (r );if _cddb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cddb );return nil ,_cddb ;};_cfcec ,_cddb :=_aca .TtfParse (_gd .NewReader (_dccdf ));if _cddb !=nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cddb );return nil ,_cddb ;};_addc :=&pdfFontSimple {_dbcdc :make (map[_cg .CharCode ]float64 ),fontCommon :fontCommon {_abdbb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_addc ._cggaf =_cg .NewWinAnsiEncoder ();_addc ._cebb =_cfcec .PostScriptName ;_addc .FirstChar =_dbc .MakeInteger (int64 (_fddb ));_addc .LastChar =_dbc .MakeInteger (int64 (_bbcf ));_baccd :=1000.0/float64 (_cfcec .UnitsPerEm );if len (_cfcec .Widths )<=0{return nil ,_ge .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_ceafg :=_baccd *float64 (_cfcec .Widths [0]);_febfd :=make ([]float64 ,0,_bbcf -_fddb +1);for _cgbgf :=_fddb ;_cgbgf <=_bbcf ;_cgbgf ++{_dgfc ,_gfbg :=_addc .Encoder ().CharcodeToRune (_cgbgf );if !_gfbg {_gge .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_cgbgf );_febfd =append (_febfd ,_ceafg );continue ;};_ddgfa ,_fdcd :=_cfcec .Chars [_dgfc ];if !_fdcd {_gge .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_febfd =append (_febfd ,_ceafg );continue ;};_fcfd :=_baccd *float64 (_cfcec .Widths [_ddgfa ]);_febfd =append (_febfd ,_fcfd );};_addc .Widths =_dbc .MakeIndirectObject (_dbc .MakeArrayFromFloats (_febfd ));if len (_febfd )< int (_bbcf -_fddb +1){_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_febfd ),255-32+1);return nil ,_dbc .ErrRangeError ;};for _febeg :=_fddb ;_febeg <=_bbcf ;_febeg ++{_addc ._dbcdc [_febeg ]=_febfd [_febeg -_fddb ];};_addc .Encoding =_dbc .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_adee :=&PdfFontDescriptor {};_adee .FontName =_dbc .MakeName (_cfcec .PostScriptName );_adee .Ascent =_dbc .MakeFloat (_baccd *float64 (_cfcec .TypoAscender ));_adee .Descent =_dbc .MakeFloat (_baccd *float64 (_cfcec .TypoDescender ));_adee .CapHeight =_dbc .MakeFloat (_baccd *float64 (_cfcec .CapHeight ));_adee .FontBBox =_dbc .MakeArrayFromFloats ([]float64 {_baccd *float64 (_cfcec .Xmin ),_baccd *float64 (_cfcec .Ymin ),_baccd *float64 (_cfcec .Xmax ),_baccd *float64 (_cfcec .Ymax )});_adee .ItalicAngle =_dbc .MakeFloat (_cfcec .ItalicAngle );_adee .MissingWidth =_dbc .MakeFloat (_baccd *float64 (_cfcec .Widths [0]));_bdde ,_cddb :=_dbc .MakeStream (_dccdf ,_dbc .NewFlateEncoder ());if _cddb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cddb );return nil ,_cddb ;};_bdde .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dbc .MakeInteger (int64 (len (_dccdf ))));_adee .FontFile2 =_bdde ;if _cfcec .Bold {_adee .StemV =_dbc .MakeInteger (120);}else {_adee .StemV =_dbc .MakeInteger (70);};_gdacb :=_aagda ;if _cfcec .IsFixedPitch {_gdacb |=_ecgbd ;};if _cfcec .ItalicAngle !=0{_gdacb |=_cdff ;};_adee .Flags =_dbc .MakeInteger (int64 (_gdacb ));_addc ._gadcb =_adee ;_abffb :=&PdfFont {_ceef :_addc };return _abffb ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cebff *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _dbc .GetNumberAsFloat (_cebff .CapHeight );};func (_ddd *PdfReader )newPdfAnnotationProjectionFromDict (_fcde *_dbc .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_ebgc :=&PdfAnnotationProjection {};_cafc ,_gfagd :=_ddd .newPdfAnnotationMarkupFromDict (_fcde );if _gfagd !=nil {return nil ,_gfagd ;};_ebgc .PdfAnnotationMarkup =_cafc ;return _ebgc ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gbfgad :=&PdfOutlineItem {_fdcde :_dbc .MakeIndirectObject (_dbc .MakeDict ())};_gbfgad ._cadfc =_gbfgad ;return _gbfgad ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_egfe *modelManager )GetPrimitiveFromModel (model PdfModel )_dbc .PdfObject {_cbbga ,_adea :=_egfe ._gdege [model ];if !_adea {return nil ;};return _cbbga ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bdfdd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bdfdd .Base .GetNumComponents ();_gfccc :=int (vals [0])*N ;if _gfccc < 0||(_gfccc +N -1)>=len (_bdfdd ._dabc ){return nil ,_ge .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_gebea :=_bdfdd ._dabc [_gfccc :_gfccc +N ];var _geef []float64 ;for _ ,_fafe :=range _gebea {_geef =append (_geef ,float64 (_fafe )/255.0);};_gdedf ,_cbgd :=_bdfdd .Base .ColorFromFloats (_geef );if _cbgd !=nil {return nil ,_cbgd ;};return _gdedf ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bddcg *pdfFontSimple )SetEncoder (encoder _cg .TextEncoder ){_bddcg ._cggaf =encoder };

// SetAnnotations sets the annotations list.
func (_caebd *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_caebd ._cffa =annotations };

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aege *PdfOutlineTreeNode )GetContext ()PdfModel {if _fcfda ,_fbaga :=_aege ._cadfc .(*PdfOutline );_fbaga {return _fcfda ;};if _eggd ,_baaae :=_aege ._cadfc .(*PdfOutlineItem );_baaae {return _eggd ;};_gge .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};func (_gbeb *PdfReader )newPdfAnnotationTrapNetFromDict (_fcdb *_dbc .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_caef :=PdfAnnotationTrapNet {};return &_caef ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _dbc .PdfObject ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_efagd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cg .CharCode )(_fbae []rune ,_fedd ,_fgfgf int ){_eefce ,_fedd ,_fgfgf :=_efagd .CharcodesToStrings (charcodes );return []rune (_ab .Join (_eefce ,"")),_fedd ,_fgfgf ;};

// GetPdfInfo returns the PDF info dictionary.
func (_bfeab *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_accaf :=PdfInfo {};_bbgfg ,_bcdc :=_bfeab .GetTrailer ();if _bcdc !=nil {return nil ,_bcdc ;};var _cfcad *_dbc .PdfObjectDictionary ;_aegeb :=_bbgfg .Get ("\u0049\u006e\u0066\u006f");switch _deaac :=_aegeb .(type ){case *_dbc .PdfObjectReference :_gccef :=_deaac ;_aegeb ,_bcdc =_bfeab .GetIndirectObjectByNumber (int (_gccef .ObjectNumber ));_aegeb =_dbc .TraceToDirectObject (_aegeb );if _bcdc !=nil {return nil ,_bcdc ;};_cfcad ,_ =_aegeb .(*_dbc .PdfObjectDictionary );case *_dbc .PdfObjectDictionary :_cfcad =_deaac ;};if _cfcad ==nil {return nil ,_ge .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_afdde :=range _cfcad .Keys (){switch _afdde {case "\u0054\u0069\u0074l\u0065":_accaf .Title ,_ =_dbc .GetString (_cfcad .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_accaf .Author ,_ =_dbc .GetString (_cfcad .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_accaf .Subject ,_ =_dbc .GetString (_cfcad .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_accaf .Keywords ,_ =_dbc .GetString (_cfcad .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_accaf .Creator ,_ =_dbc .GetString (_cfcad .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_accaf .Producer ,_ =_dbc .GetString (_cfcad .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_accaf .Trapped ,_ =_dbc .GetName (_cfcad .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cdegd ,_gadeg :=_dbc .GetString (_cfcad .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_gadeg &&_cdegd .String ()!=""{_cggdc ,_ggcfe :=NewPdfDate (_cdegd .String ());if _ggcfe !=nil {return nil ,_ggcfe ;};_accaf .CreationDate =&_cggdc ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _ggaga ,_agegd :=_dbc .GetString (_cfcad .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_agegd &&_ggaga .String ()!=""{_dcee ,_baabd :=NewPdfDate (_ggaga .String ());if _baabd !=nil {return nil ,_baabd ;};_accaf .ModifiedDate =&_dcee ;};default:_aeced ,_ :=_dbc .GetString (_cfcad .Get (_afdde ));if _accaf ._fbfca ==nil {_accaf ._fbfca =_dbc .MakeDict ();};_accaf ._fbfca .Set (_afdde ,_aeced );};};return &_accaf ,nil ;};func (_afbb *PdfReader )flattenFieldsWithOpts (_cecga bool ,_gcdf FieldAppearanceGenerator ,_fcgga *FieldFlattenOpts )error {if _fcgga ==nil {_fcgga =&FieldFlattenOpts {};};var _fged bool ;_gdcec :=map[*PdfAnnotation ]bool {};{var _efge []*PdfField ;_edggd :=_afbb .AcroForm ;if _edggd !=nil {if _fcgga .FilterFunc !=nil {_efge =_edggd .filteredFields (_fcgga .FilterFunc ,true );_fged =_edggd .Fields !=nil &&len (*_edggd .Fields )> 0;}else {_efge =_edggd .AllFields ();};};for _ ,_cdfb :=range _efge {for _ ,_gbgae :=range _cdfb .Annotations {_gdcec [_gbgae .PdfAnnotation ]=_cdfb .V !=nil ;if _gcdf !=nil {_gfef ,_eafba :=_gcdf .GenerateAppearanceDict (_edggd ,_cdfb ,_gbgae );if _eafba !=nil {return _eafba ;};_gbgae .AP =_gfef ;};};};};if _cecga {for _ ,_bbaga :=range _afbb .PageList {_dafd ,_dgedb :=_bbaga .GetAnnotations ();if _dgedb !=nil {return _dgedb ;};for _ ,_eacdb :=range _dafd {_gdcec [_eacdb ]=true ;};};};for _ ,_egdaf :=range _afbb .PageList {var _fab []*PdfAnnotation ;if _gcdf !=nil {if _dfga :=_gcdf .WrapContentStream (_egdaf );_dfga !=nil {return _dfga ;};};_bgbad ,_gcad :=_egdaf .GetAnnotations ();if _gcad !=nil {return _gcad ;};for _ ,_abba :=range _bgbad {_gdaab ,_dbdd :=_gdcec [_abba ];if !_dbdd &&_fcgga .AnnotFilterFunc !=nil {if _ ,_bcfc :=_abba .GetContext ().(*PdfAnnotationWidget );!_bcfc {_dbdd =_fcgga .AnnotFilterFunc (_abba );};};if !_dbdd {_fab =append (_fab ,_abba );continue ;};switch _abba .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_abddd ,_cbca ,_cdbbg :=_faaaf (_abba );if _cdbbg !=nil {if !_gdaab {_gge .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cdbbg );continue ;};if _abddd ==nil {continue ;};_bfce :=_egdaf .Resources .GenerateXObjectName ();_egdaf .Resources .SetXObjectFormByName (_bfce ,_abddd );_ccaab :=_bc .Min (_cbca .Llx ,_cbca .Urx );_gbae :=_bc .Min (_cbca .Lly ,_cbca .Ury );var _gbfga []string ;_gbfga =append (_gbfga ,"\u0071");_gbfga =append (_gbfga ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ccaab ,_gbae ));_gbfga =append (_gbfga ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bfce .String ()));_gbfga =append (_gbfga ,"\u0051");_fadce :=_ab .Join (_gbfga ,"\u000a");_cdbbg =_egdaf .AppendContentStream (_fadce );if _cdbbg !=nil {return _cdbbg ;};if _abddd .Resources !=nil {_gfaa ,_edbb :=_dbc .GetDict (_abddd .Resources .Font );if _edbb {for _ ,_caacc :=range _gfaa .Keys (){if !_egdaf .Resources .HasFontByName (_caacc ){_egdaf .Resources .SetFontByName (_caacc ,_gfaa .Get (_caacc ));};};};};};if len (_fab )> 0{_egdaf ._cffa =_fab ;}else {_egdaf ._cffa =[]*PdfAnnotation {};};};if !_fged {_afbb .AcroForm =nil ;};return nil ;};

// SetOCProperties sets the optional content properties.
func (_acgfc *PdfWriter )SetOCProperties (ocProperties _dbc .PdfObject )error {_dgged :=_acgfc ._eddef ;if ocProperties !=nil {_gge .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_dgged .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _acgfc .addObjects (ocProperties );};return nil ;};func _gfdef (_bbbbd _dbc .PdfObject )(*fontFile ,error ){_gge .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bbbbd );_adgg :=&fontFile {};_bbbbd =_dbc .TraceToDirectObject (_bbbbd );_beca ,_fbgd :=_bbbbd .(*_dbc .PdfObjectStream );if !_fbgd {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bbbbd );return nil ,_dbc .ErrTypeError ;};_ggce :=_beca .PdfObjectDictionary ;_ddeeb ,_dega :=_dbc .DecodeStream (_beca );if _dega !=nil {return nil ,_dega ;};_cbebe ,_fbgd :=_dbc .GetNameVal (_ggce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fbgd {_adgg ._gbdb =_cbebe ;if _cbebe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gge .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_beedb ,_ :=_dbc .GetIntVal (_ggce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_agbf ,_ :=_dbc .GetIntVal (_ggce .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _beedb > len (_ddeeb ){_beedb =len (_ddeeb );};if _beedb +_agbf > len (_ddeeb ){_agbf =len (_ddeeb )-_beedb ;};_gdfe :=_ddeeb [:_beedb ];var _efcba []byte ;if _agbf > 0{_efcba =_ddeeb [_beedb :_beedb +_agbf ];};if _beedb > 0&&_agbf > 0{_ebfb :=_adgg .loadFromSegments (_gdfe ,_efcba );if _ebfb !=nil {return nil ,_ebfb ;};};return _adgg ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_edcba *PdfSignature )SetReason (reason string ){_edcba .Reason =_dbc .MakeString (reason )};

// G returns the value of the green component of the color.
func (_dcb *PdfColorDeviceRGB )G ()float64 {return _dcb [1]};func (_cacff *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cacff ._efgcc .GetCrypter ()!=nil &&!_cacff ._efgcc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_eedfea :=_cacff ._gcaad ;_cfedea :=_eedfea .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cfedea ==nil {return nil ,nil ;};_gge .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_beaef :=_dbc .ResolveReference (_cfedea );_gge .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_beaef );if _baebf :=_dbc .IsNullObject (_beaef );_baebf {_gge .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_acafb ,_afbef :=_beaef .(*_dbc .PdfIndirectObject );if !_afbef {if _ ,_gdcbaa :=_dbc .GetDict (_beaef );!_gdcbaa {_gge .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_gge .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_acafb =_dbc .MakeIndirectObject (_beaef );};_dbgaa ,_afbef :=_acafb .PdfObject .(*_dbc .PdfObjectDictionary );if !_afbef {return nil ,_ge .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_gge .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dbgaa );_gaaba ,_ ,_bfbea :=_cacff .buildOutlineTree (_acafb ,nil ,nil ,nil );if _bfbea !=nil {return nil ,_bfbea ;};_gge .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gaaba );return _gaaba ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_eefcf *PdfPageResources )SetPatternByName (keyName _dbc .PdfObjectName ,pattern _dbc .PdfObject )error {if _eefcf .Pattern ==nil {_eefcf .Pattern =_dbc .MakeDict ();};_agfba ,_cbffb :=_eefcf .Pattern .(*_dbc .PdfObjectDictionary );if !_cbffb {return _dbc .ErrTypeError ;};_agfba .Set (keyName ,pattern );return nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dggeb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dggeb ._dabbe .(*PdfTilingPattern );};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ceccc :=&PdfColorspaceCalRGB {};_ceccc .BlackPoint =[]float64 {0.0,0.0,0.0};_ceccc .Gamma =[]float64 {1.0,1.0,1.0};_ceccc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ceccc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdbd *PdfShadingType3 )ToPdfObject ()_dbc .PdfObject {_bdbd .PdfShading .ToPdfObject ();_bbefg ,_edaf :=_bdbd .getShadingDict ();if _edaf !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bdbd .Coords !=nil {_bbefg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bdbd .Coords );};if _bdbd .Domain !=nil {_bbefg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdbd .Domain );};if _bdbd .Function !=nil {if len (_bdbd .Function )==1{_bbefg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdbd .Function [0].ToPdfObject ());}else {_cadgf :=_dbc .MakeArray ();for _ ,_gfbc :=range _bdbd .Function {_cadgf .Append (_gfbc .ToPdfObject ());};_bbefg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadgf );};};if _bdbd .Extend !=nil {_bbefg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bdbd .Extend );};return _bdbd ._bdgfb ;};func (_dgdfe SignatureValidationResult )String ()string {var _ggbgd _gd .Buffer ;_ggbgd .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_dgdfe .Name ));if _dgdfe .Date ._dagd > 0{_ggbgd .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_dgdfe .Date .ToGoTime ().String ()));}else {_ggbgd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dgdfe .Reason )> 0{_ggbgd .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dgdfe .Reason ));}else {_ggbgd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_dgdfe .Location )> 0{_ggbgd .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dgdfe .Location ));}else {_ggbgd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dgdfe .ContactInfo )> 0{_ggbgd .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_dgdfe .ContactInfo ));}else {_ggbgd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ggbgd .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_dgdfe .Fields )));if _dgdfe .IsSigned {_ggbgd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ggbgd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _dgdfe .IsVerified {_ggbgd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ggbgd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _dgdfe .IsTrusted {_ggbgd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ggbgd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_dgdfe .GeneralizedTime .IsZero (){_ggbgd .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_dgdfe .GeneralizedTime .String ()));};return _ggbgd .String ();};func _egdfg (_adddb *_dbc .PdfObjectDictionary )(*PdfShadingType3 ,error ){_afced :=PdfShadingType3 {};_bfbdd :=_adddb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bfbdd ==nil {_gge .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_eefff ,_aaega :=_bfbdd .(*_dbc .PdfObjectArray );if !_aaega {_gge .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfbdd );return nil ,_dbc .ErrTypeError ;};if _eefff .Len ()!=6{_gge .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eefff .Len ());return nil ,ErrInvalidAttribute ;};_afced .Coords =_eefff ;if _ceea :=_adddb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ceea !=nil {_ceea =_dbc .TraceToDirectObject (_ceea );_bgfba ,_agffa :=_ceea .(*_dbc .PdfObjectArray );if !_agffa {_gge .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceea );return nil ,_dbc .ErrTypeError ;};_afced .Domain =_bgfba ;};_bfbdd =_adddb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bfbdd ==nil {_gge .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_afced .Function =[]PdfFunction {};if _cbgfa ,_egeac :=_bfbdd .(*_dbc .PdfObjectArray );_egeac {for _ ,_cdgba :=range _cbgfa .Elements (){_effef ,_bdfag :=_edcfc (_cdgba );if _bdfag !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdfag );return nil ,_bdfag ;};_afced .Function =append (_afced .Function ,_effef );};}else {_adbbb ,_ggagc :=_edcfc (_bfbdd );if _ggagc !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggagc );return nil ,_ggagc ;};_afced .Function =append (_afced .Function ,_adbbb );};if _eadee :=_adddb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eadee !=nil {_eadee =_dbc .TraceToDirectObject (_eadee );_bbfag ,_cddda :=_eadee .(*_dbc .PdfObjectArray );if !_cddda {_gge .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eadee );return nil ,_dbc .ErrTypeError ;};if _bbfag .Len ()!=2{_gge .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bbfag .Len ());return nil ,ErrInvalidAttribute ;};_afced .Extend =_bbfag ;};return &_afced ,nil ;};

// SetImage updates XObject Image with new image data.
func (_dade *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dade .Filter .UpdateParams (img .GetParamsDict ());_dffgeb ,_gdefd :=_dade .Filter .EncodeBytes (img .Data );if _gdefd !=nil {return _gdefd ;};_dade .Stream =_dffgeb ;_dabfb :=img .Width ;_dade .Width =&_dabfb ;_fcddaf :=img .Height ;_dade .Height =&_fcddaf ;_edeeb :=img .BitsPerComponent ;_dade .BitsPerComponent =&_edeeb ;if cs ==nil {if img .ColorComponents ==1{_dade .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dade .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dade .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ge .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dade .ColorSpace =cs ;};return nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ddeg *PdfPageResources )GetXObjectImageByName (keyName _dbc .PdfObjectName )(*XObjectImage ,error ){_agbff ,_adagg :=_ddeg .GetXObjectByName (keyName );if _agbff ==nil {return nil ,nil ;};if _adagg !=XObjectTypeImage {return nil ,_ge .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_bafac ,_dbaa :=NewXObjectImageFromStream (_agbff );if _dbaa !=nil {return nil ,_dbaa ;};return _bafac ,nil ;};

// SetContext sets the sub action (context).
func (_ddf *PdfAction )SetContext (ctx PdfModel ){_ddf ._df =ctx };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bfba []byte ;_acgbgb []uint32 ;_fcfg *_dbc .PdfObjectStream ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ddae ,_cbeed :=_aca .NewStdFontByName (HelveticaName );if !_cbeed {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_fgfdc :=_defb (_ddae );return &PdfFont {_ceef :&_fgfdc };};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ggbcb *_dbc .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_abgbe *PdfTilingPattern )ToPdfObject ()_dbc .PdfObject {_abgbe .PdfPattern .ToPdfObject ();_bbgefd :=_abgbe .getDict ();if _abgbe .PaintType !=nil {_bbgefd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_abgbe .PaintType );};if _abgbe .TilingType !=nil {_bbgefd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_abgbe .TilingType );};if _abgbe .BBox !=nil {_bbgefd .Set ("\u0042\u0042\u006f\u0078",_abgbe .BBox .ToPdfObject ());};if _abgbe .XStep !=nil {_bbgefd .Set ("\u0058\u0053\u0074e\u0070",_abgbe .XStep );};if _abgbe .YStep !=nil {_bbgefd .Set ("\u0059\u0053\u0074e\u0070",_abgbe .YStep );};if _abgbe .Resources !=nil {_bbgefd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abgbe .Resources .ToPdfObject ());};if _abgbe .Matrix !=nil {_bbgefd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_abgbe .Matrix );};return _abgbe ._dfacd ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_dbc .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gcbe *_dbc .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dgac *DSS )ToPdfObject ()_dbc .PdfObject {_egdfb :=_dgac ._gebc .PdfObject .(*_dbc .PdfObjectDictionary );_egdfb .Clear ();_gcdg :=_dbc .MakeDict ();for _acee ,_dgdca :=range _dgac .VRI {_gcdg .Set (*_dbc .MakeName (_acee ),_dgdca .ToPdfObject ());};_egdfb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_deae (_dgac .Certs ));_egdfb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_deae (_dgac .OCSPs ));_egdfb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_deae (_dgac .CRLs ));_egdfb .Set ("\u0056\u0052\u0049",_gcdg );return _dgac ._gebc ;};func _abge (_cdfba *PdfField ,_cfceg _dbc .PdfObject )error {switch _cdfba .GetContext ().(type ){case *PdfFieldText :switch _ccabc :=_cfceg .(type ){case *_dbc .PdfObjectName :_eeafg :=_ccabc ;_gge .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_eeafg .String ());_cdfba .V =_dbc .MakeEncodedString (_ccabc .String (),true );case *_dbc .PdfObjectString :_cdfba .V =_dbc .MakeEncodedString (_ccabc .String (),true );default:_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_ccabc ,_ccabc );};case *PdfFieldButton :switch _cfceg .(type ){case *_dbc .PdfObjectName :if len (_cfceg .String ())> 0{_cdfba .V =_cfceg ;_eeed (_cdfba ,_cfceg );};case *_dbc .PdfObjectString :if len (_cfceg .String ())> 0{_cdfba .V =_dbc .MakeName (_cfceg .String ());_eeed (_cdfba ,_cdfba .V );};default:_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cdfba .PartialName (),_cfceg );_cdfba .V =_cfceg ;};case *PdfFieldChoice :switch _cfceg .(type ){case *_dbc .PdfObjectName :if len (_cfceg .String ())> 0{_cdfba .V =_dbc .MakeString (_cfceg .String ());_eeed (_cdfba ,_cfceg );};case *_dbc .PdfObjectString :if len (_cfceg .String ())> 0{_cdfba .V =_cfceg ;_eeed (_cdfba ,_dbc .MakeName (_cfceg .String ()));};default:_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cdfba .PartialName (),_cfceg );_cdfba .V =_cfceg ;};case *PdfFieldSignature :_gge .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cdfba .PartialName (),_cfceg );};return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_acgead *PdfOutline )ToPdfObject ()_dbc .PdfObject {_adgcb :=_acgead ._bbcgc ;_ffdb :=_adgcb .PdfObject .(*_dbc .PdfObjectDictionary );_ffdb .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _acgead .First !=nil {_ffdb .Set ("\u0046\u0069\u0072s\u0074",_acgead .First .ToPdfObject ());};if _acgead .Last !=nil {_ffdb .Set ("\u004c\u0061\u0073\u0074",_acgead .Last .GetContext ().GetContainingPdfObject ());};if _acgead .Parent !=nil {_ffdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_acgead .Parent .GetContext ().GetContainingPdfObject ());};if _acgead .Count !=nil {_ffdb .Set ("\u0043\u006f\u0075n\u0074",_dbc .MakeInteger (*_acgead .Count ));};return _adgcb ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){_daaad ,_dageb :=_dd .ReadAll (r );if _dageb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dageb );return nil ,_dageb ;};_gfgde ,_dageb :=_aca .TtfParse (_gd .NewReader (_daaad ));if _dageb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dageb );return nil ,_dageb ;};_edda :=&pdfCIDFontType2 {fontCommon :fontCommon {_abdbb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_dbc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cfeabg :=make ([]rune ,0,len (_gfgde .Chars ));for _bage :=range _gfgde .Chars {_cfeabg =append (_cfeabg ,_bage );};_ag .Slice (_cfeabg ,func (_fbcg ,_abggb int )bool {return _cfeabg [_fbcg ]< _cfeabg [_abggb ]});_bfgdc :=1000.0/float64 (_gfgde .UnitsPerEm );if len (_gfgde .Widths )<=0{return nil ,_ge .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_cbeg :=_bfgdc *float64 (_gfgde .Widths [0]);_gabff :=make (map[rune ]int );for _ ,_eada :=range _cfeabg {_efcd :=_gfgde .Chars [_eada ];_faeec :=_bfgdc *float64 (_gfgde .Widths [_efcd ]);_gabff [_eada ]=int (_faeec );};_edda ._adfdb =_gabff ;_edda .DW =_dbc .MakeInteger (int64 (_cbeg ));_dgdb :=_gdaf (_cfeabg ,_gabff ,_gfgde .Chars );_edda .W =_dbc .MakeIndirectObject (_dgdb );_cggce :=_dbc .MakeDict ();_cggce .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_dbc .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cggce .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_dbc .MakeString ("\u0041\u0064\u006fb\u0065"));_cggce .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_dbc .MakeInteger (0));_edda .CIDSystemInfo =_cggce ;_deadd :=&PdfFontDescriptor {FontName :_dbc .MakeName (_gfgde .PostScriptName ),Ascent :_dbc .MakeFloat (_bfgdc *float64 (_gfgde .TypoAscender )),Descent :_dbc .MakeFloat (_bfgdc *float64 (_gfgde .TypoDescender )),CapHeight :_dbc .MakeFloat (_bfgdc *float64 (_gfgde .CapHeight )),FontBBox :_dbc .MakeArrayFromFloats ([]float64 {_bfgdc *float64 (_gfgde .Xmin ),_bfgdc *float64 (_gfgde .Ymin ),_bfgdc *float64 (_gfgde .Xmax ),_bfgdc *float64 (_gfgde .Ymax )}),ItalicAngle :_dbc .MakeFloat (_gfgde .ItalicAngle ),MissingWidth :_dbc .MakeFloat (_bfgdc *float64 (_gfgde .Widths [0]))};_eadg ,_dageb :=_dbc .MakeStream (_daaad ,_dbc .NewFlateEncoder ());if _dageb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dageb );return nil ,_dageb ;};_eadg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dbc .MakeInteger (int64 (len (_daaad ))));_deadd .FontFile2 =_eadg ;if _gfgde .Bold {_deadd .StemV =_dbc .MakeInteger (120);}else {_deadd .StemV =_dbc .MakeInteger (70);};_bbdda :=_deggd ;if _gfgde .IsFixedPitch {_bbdda |=_ecgbd ;};if _gfgde .ItalicAngle !=0{_bbdda |=_cdff ;};_deadd .Flags =_dbc .MakeInteger (int64 (_bbdda ));_edda ._cebb =_gfgde .PostScriptName ;_edda ._gadcb =_deadd ;_agbgc :=pdfFontType0 {fontCommon :fontCommon {_abdbb :"\u0054\u0079\u0070e\u0030",_cebb :_gfgde .PostScriptName },DescendantFont :&PdfFont {_ceef :_edda },Encoding :_dbc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_deec :_gfgde .NewEncoder ()};if len (_gfgde .Chars )> 0{_gegff :=make (map[_ce .CharCode ]rune ,len (_gfgde .Chars ));for _fabc ,_cbdeb :=range _gfgde .Chars {_adcba :=_ce .CharCode (_cbdeb );if _cfec ,_gbcb :=_gegff [_adcba ];!_gbcb ||(_gbcb &&_cfec > _fabc ){_gegff [_adcba ]=_fabc ;};};_agbgc ._caga =_ce .NewToUnicodeCMap (_gegff );};_fgbc :=PdfFont {_ceef :&_agbgc };return &_fgbc ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_gffd :=NewPdfAnnotation ();_dbaf :=&PdfAnnotationFileAttachment {};_dbaf .PdfAnnotation =_gffd ;_dbaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gffd .SetContext (_dbaf );return _dbaf ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_afbc *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// SetForms sets the Acroform for a PDF file.
func (_gfgea *PdfWriter )SetForms (form *PdfAcroForm )error {_gfgea ._bfddg =form ;return nil };

// String returns the name of the colorspace (DeviceN).
func (_afgd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aced *PdfFieldSignature )ToPdfObject ()_dbc .PdfObject {if _aced .PdfAnnotationWidget !=nil {_aced .PdfAnnotationWidget .ToPdfObject ();};_aced .PdfField .ToPdfObject ();_dfgb :=_aced ._befed ;_fgga :=_dfgb .PdfObject .(*_dbc .PdfObjectDictionary );_fgga .SetIfNotNil ("\u0046\u0054",_dbc .MakeName ("\u0053\u0069\u0067"));_fgga .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aced .Lock );_fgga .SetIfNotNil ("\u0053\u0056",_aced .SV );if _aced .V !=nil {_fgga .SetIfNotNil ("\u0056",_aced .V .ToPdfObject ());};return _dfgb ;};

// R returns the value of the red component of the color.
func (_eeab *PdfColorDeviceRGB )R ()float64 {return _eeab [0]};

// M returns the value of the magenta component of the color.
func (_bgeb *PdfColorDeviceCMYK )M ()float64 {return _bgeb [1]};

// ToGoTime returns the date in time.Time format.
func (_bcff PdfDate )ToGoTime ()_f .Time {_bgade :=int (_bcff ._ebbca *60*60+_bcff ._cffca *60);switch _bcff ._efddc {case '-':_bgade =-_bgade ;case 'Z':_bgade =0;};_dgcge :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bcff ._efddc ,_bcff ._ebbca ,_bcff ._cffca );_eddeg :=_f .FixedZone (_dgcge ,_bgade );return _f .Date (int (_bcff ._dagd ),_f .Month (_bcff ._fedfe ),int (_bcff ._aeed ),int (_bcff ._adbde ),int (_bcff ._eced ),int (_bcff ._ggcb ),0,_eddeg );};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func _eccb (_dbgd []byte )bool {if len (_dbgd )< 4{return true ;};for _ggeg :=range _dbgd [:4]{_bgdd :=rune (_ggeg );if !_ef .Is (_ef .ASCII_Hex_Digit ,_bgdd )&&!_ef .IsSpace (_bgdd ){return true ;};};return false ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bcade *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ebad []_cg .TextEncoder ;var _gafc _cg .CMapEncoder ;if _caeea :=_bcade .baseFields ()._caga ;_caeea !=nil {_gafc =_cg .NewCMapEncoder ("",nil ,_caeea );};_cgdda :=_bcade .Encoder ();if _cgdda !=nil {switch _dcfc :=_cgdda .(type ){case _cg .SimpleEncoder :_ddeb :=_dcfc .BaseName ();if _ ,_daga :=_aagdc [_ddeb ];_daga {_ebad =append (_ebad ,_cgdda );};};};if len (_ebad )==0{if _bcade .baseFields ()._caga !=nil {_ebad =append (_ebad ,_gafc );};if _cgdda !=nil {_ebad =append (_ebad ,_cgdda );};};var _dgfbd _gd .Buffer ;var _adfdg int ;for _ ,_cgafa :=range data {var _bgcd bool ;for _ ,_cbaagc :=range _ebad {if _ddafd :=_cbaagc .Encode (string (_cgafa ));len (_ddafd )> 0{_dgfbd .Write (_ddafd );_bgcd =true ;break ;};};if !_bgcd {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cgafa );_adfdg ++;};};if _adfdg !=0{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_adfdg ,_bcade ,_ebad );};return _dgfbd .Bytes (),_adfdg ;};func _deaag (_cfgd _dbc .PdfObject )(*PdfShading ,error ){_aabee :=&PdfShading {};var _ddcb *_dbc .PdfObjectDictionary ;if _becba ,_baeea :=_dbc .GetIndirect (_cfgd );_baeea {_aabee ._bdgfb =_becba ;_cacgd ,_feace :=_becba .PdfObject .(*_dbc .PdfObjectDictionary );if !_feace {_gge .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_dbc .ErrTypeError ;};_ddcb =_cacgd ;}else if _aefbd ,_bacdf :=_dbc .GetStream (_cfgd );_bacdf {_aabee ._bdgfb =_aefbd ;_ddcb =_aefbd .PdfObjectDictionary ;}else if _dabbef ,_daaac :=_dbc .GetDict (_cfgd );_daaac {_aabee ._bdgfb =_dabbef ;_ddcb =_dabbef ;}else {_gge .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cfgd );return nil ,_dbc .ErrTypeError ;};if _ddcb ==nil {_gge .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ge .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cfgd =_ddcb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cfgd ==nil {_gge .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfgd =_dbc .TraceToDirectObject (_cfgd );_decdc ,_dgca :=_cfgd .(*_dbc .PdfObjectInteger );if !_dgca {_gge .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cfgd );return nil ,_dbc .ErrTypeError ;};if *_decdc < 1||*_decdc > 7{_gge .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_decdc );return nil ,_dbc .ErrTypeError ;};_aabee .ShadingType =_decdc ;_cfgd =_ddcb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cfgd ==nil {_gge .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dbcc ,_adca :=NewPdfColorspaceFromPdfObject (_cfgd );if _adca !=nil {_gge .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_adca );return nil ,_adca ;};_aabee .ColorSpace =_dbcc ;_cfgd =_ddcb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cfgd !=nil {_cfgd =_dbc .TraceToDirectObject (_cfgd );_ebgf ,_beece :=_cfgd .(*_dbc .PdfObjectArray );if !_beece {_gge .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cfgd );return nil ,_dbc .ErrTypeError ;};_aabee .Background =_ebgf ;};_cfgd =_ddcb .Get ("\u0042\u0042\u006f\u0078");if _cfgd !=nil {_cfgd =_dbc .TraceToDirectObject (_cfgd );_bbfeg ,_ebaa :=_cfgd .(*_dbc .PdfObjectArray );if !_ebaa {_gge .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cfgd );return nil ,_dbc .ErrTypeError ;};_gcag ,_bgabc :=NewPdfRectangle (*_bbfeg );if _bgabc !=nil {_gge .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bgabc );return nil ,_bgabc ;};_aabee .BBox =_gcag ;};_cfgd =_ddcb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _cfgd !=nil {_cfgd =_dbc .TraceToDirectObject (_cfgd );_bacegg ,_ceac :=_cfgd .(*_dbc .PdfObjectBool );if !_ceac {_gge .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfgd );return nil ,_dbc .ErrTypeError ;};_aabee .AntiAlias =_bacegg ;};switch *_decdc {case 1:_eafaf ,_adbaf :=_ggda (_ddcb );if _adbaf !=nil {return nil ,_adbaf ;};_eafaf .PdfShading =_aabee ;_aabee ._cffaa =_eafaf ;return _aabee ,nil ;case 2:_dbead ,_ggdee :=_gbcgbe (_ddcb );if _ggdee !=nil {return nil ,_ggdee ;};_dbead .PdfShading =_aabee ;_aabee ._cffaa =_dbead ;return _aabee ,nil ;case 3:_aefff ,_cbgg :=_egdfg (_ddcb );if _cbgg !=nil {return nil ,_cbgg ;};_aefff .PdfShading =_aabee ;_aabee ._cffaa =_aefff ;return _aabee ,nil ;case 4:_dcfeg ,_effea :=_fgbad (_ddcb );if _effea !=nil {return nil ,_effea ;};_dcfeg .PdfShading =_aabee ;_aabee ._cffaa =_dcfeg ;return _aabee ,nil ;case 5:_fbaee ,_aadag :=_gdee (_ddcb );if _aadag !=nil {return nil ,_aadag ;};_fbaee .PdfShading =_aabee ;_aabee ._cffaa =_fbaee ;return _aabee ,nil ;case 6:_ecgfe ,_gadce :=_aedd (_ddcb );if _gadce !=nil {return nil ,_gadce ;};_ecgfe .PdfShading =_aabee ;_aabee ._cffaa =_ecgfe ;return _aabee ,nil ;case 7:_aedb ,_fefce :=_gagad (_ddcb );if _fefce !=nil {return nil ,_fefce ;};_aedb .PdfShading =_aabee ;_aabee ._cffaa =_aedb ;return _aabee ,nil ;};return nil ,_ge .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dgcb *XObjectImage )GetContainingPdfObject ()_dbc .PdfObject {return _dgcb ._acadb };func (_beg *PdfReader )newPdfAnnotationSquareFromDict (_aggb *_dbc .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_begc :=PdfAnnotationSquare {};_ffed ,_gfc :=_beg .newPdfAnnotationMarkupFromDict (_aggb );if _gfc !=nil {return nil ,_gfc ;};_begc .PdfAnnotationMarkup =_ffed ;_begc .BS =_aggb .Get ("\u0042\u0053");_begc .IC =_aggb .Get ("\u0049\u0043");_begc .BE =_aggb .Get ("\u0042\u0045");_begc .RD =_aggb .Get ("\u0052\u0044");return &_begc ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_caeba pdfCIDFontType2 )GetRuneMetrics (r rune )(_aca .CharMetrics ,bool ){_beecf ,_dfddb :=_caeba ._adfdb [r ];if !_dfddb {_edcg ,_bcbae :=_dbc .GetInt (_caeba .DW );if !_bcbae {return _aca .CharMetrics {},false ;};_beecf =int (*_edcg );};return _aca .CharMetrics {Wx :float64 (_beecf )},true ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_egefa *PdfPage )Duplicate ()*PdfPage {_faddf :=*_egefa ;_faddf ._dbagc =_dbc .MakeDict ();_faddf ._aaac =_dbc .MakeIndirectObject (_faddf ._dbagc );return &_faddf ;};func (_baccg fontCommon )asPdfObjectDictionary (_fgcac string )*_dbc .PdfObjectDictionary {if _fgcac !=""&&_baccg ._abdbb !=""&&_fgcac !=_baccg ._abdbb {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fgcac ,_baccg );}else if _fgcac ==""&&_baccg ._abdbb ==""{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_baccg );}else if _baccg ._abdbb ==""{_baccg ._abdbb =_fgcac ;};_cgade :=_dbc .MakeDict ();_cgade .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u006f\u006e\u0074"));_cgade .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_dbc .MakeName (_baccg ._cebb ));_cgade .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName (_baccg ._abdbb ));if _baccg ._gadcb !=nil {_cgade .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_baccg ._gadcb .ToPdfObject ());};if _baccg ._cefde !=nil {_cgade .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_baccg ._cefde );}else if _baccg ._caga !=nil {_eeda ,_gbafc :=_baccg ._caga .Stream ();if _gbafc !=nil {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_gbafc );}else {_cgade .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eeda );};};return _cgade ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_fdffd *PdfPage )AddContentStreamByString (contentStr string )error {_gafcg ,_caaee :=_dbc .MakeStream ([]byte (contentStr ),_dbc .NewFlateEncoder ());if _caaee !=nil {return _caaee ;};if _fdffd .Contents ==nil {_fdffd .Contents =_gafcg ;}else {_bfbbc :=_dbc .TraceToDirectObject (_fdffd .Contents );_bafcg ,_gadebb :=_bfbbc .(*_dbc .PdfObjectArray );if !_gadebb {_bafcg =_dbc .MakeArray (_bfbbc );};_bafcg .Append (_gafcg );_fdffd .Contents =_bafcg ;};return nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_afcde *PdfReader )GetTrailer ()(*_dbc .PdfObjectDictionary ,error ){_cbded :=_afcde ._efgcc .GetTrailer ();if _cbded ==nil {return nil ,_ge .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cbded ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_dgea *PdfAppender )WriteToFile (outputPath string )error {_fbcd ,_edeef :=_eg .Create (outputPath );if _edeef !=nil {return _edeef ;};defer _fbcd .Close ();return _dgea .Write (_fbcd );};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ddda *PdfField )IsTerminal ()bool {return len (_ddda .Kids )==0};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_dbc .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _dbc .PdfObject ;A _dbc .PdfObject ;SE _dbc .PdfObject ;C _dbc .PdfObject ;F _dbc .PdfObject ;_fdcde *_dbc .PdfIndirectObject ;};func (_ecbgg *DSS )addCerts (_dage [][]byte )([]*_dbc .PdfObjectStream ,error ){return _ecbgg .add (&_ecbgg .Certs ,_ecbgg ._gbad ,_dage );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_afgge =keywords };

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_bgeg :=NewPdfAnnotation ();_beac :=&PdfAnnotationWatermark {};_beac .PdfAnnotation =_bgeg ;_bgeg .SetContext (_beac );return _beac ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_efegf :=&PdfSignature {Type :_dbc .MakeName ("\u0053\u0069\u0067"),Handler :handler };_dfggeg :=&pdfSignDictionary {PdfObjectDictionary :_dbc .MakeDict (),_bggea :&handler ,_ecdabg :_efegf };_efegf ._cedf =_dbc .MakeIndirectObject (_dfggeg );return _efegf ;};

// String returns a string that describes `base`.
func (_bcede fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bcede .coreString ());};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dbc .PdfObject ;};func (_acadf *PdfReader )newPdfAnnotationHighlightFromDict (_ccb *_dbc .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ffff :=PdfAnnotationHighlight {};_agdef ,_cge :=_acadf .newPdfAnnotationMarkupFromDict (_ccb );if _cge !=nil {return nil ,_cge ;};_ffff .PdfAnnotationMarkup =_agdef ;_ffff .QuadPoints =_ccb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ffff ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bdag *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febf ,_dfde :=_dbc .GetNumbersAsFloat (objects );if _dfde !=nil {return nil ,_dfde ;};return _bdag .ColorFromFloats (_febf );};func (_fadfb *PdfFunctionType0 )processSamples ()error {_aeffd :=_bee .ResampleBytes (_fadfb ._bfba ,_fadfb .BitsPerSample );_fadfb ._acgbgb =_aeffd ;return nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_abd *PdfAnnotationWidget )Field ()*PdfField {return _abd ._agbg };

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fee :=NewPdfAction ();_eca :=&PdfActionRendition {};_eca .PdfAction =_fee ;_fee .SetContext (_eca );return _eca ;};

// ToPdfObject implements interface PdfModel.
func (_gdaea *PdfAnnotationRichMedia )ToPdfObject ()_dbc .PdfObject {_gdaea .PdfAnnotation .ToPdfObject ();_feff :=_gdaea ._gef ;_ebf :=_feff .PdfObject .(*_dbc .PdfObjectDictionary );_ebf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_ebf .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gdaea .RichMediaSettings );_ebf .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gdaea .RichMediaContent );return _feff ;};type modelManager struct{_gdege map[PdfModel ]_dbc .PdfObject ;_ecgfdb map[_dbc .PdfObject ]PdfModel ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gcbaa *XObjectImage )ToImage ()(*Image ,error ){_efabg :=&Image {};if _gcbaa .Height ==nil {return nil ,_ge .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_efabg .Height =*_gcbaa .Height ;if _gcbaa .Width ==nil {return nil ,_ge .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_efabg .Width =*_gcbaa .Width ;if _gcbaa .BitsPerComponent ==nil {return nil ,_ge .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_efabg .BitsPerComponent =*_gcbaa .BitsPerComponent ;_efabg .ColorComponents =_gcbaa .ColorSpace .GetNumComponents ();_gcbaa ._acadb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dbc .MakeInteger (int64 (_efabg .ColorComponents )));_faegd ,_bgbde :=_dbc .DecodeStream (_gcbaa ._acadb );if _bgbde !=nil {return nil ,_bgbde ;};_efabg .Data =_faegd ;if _gcbaa .Decode !=nil {_egddd ,_baaed :=_gcbaa .Decode .(*_dbc .PdfObjectArray );if !_baaed {_gge .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_ge .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_daeeb ,_abbcb :=_egddd .ToFloat64Array ();if _abbcb !=nil {return nil ,_abbcb ;};_efabg ._fgabe =_daeeb ;};return _efabg ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _dbc .PdfObject ;RichMediaContent _dbc .PdfObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_eb :=NewPdfAction ();_ca :=&PdfActionTrans {};_ca .PdfAction =_eb ;_eb .SetContext (_ca );return _ca ;};func (_cdcb *PdfReader )newPdfActionSubmitFormFromDict (_gbed *_dbc .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_beb ,_ece :=_cgg (_gbed .Get ("\u0046"));if _ece !=nil {return nil ,_ece ;};return &PdfActionSubmitForm {F :_beb ,Fields :_gbed .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gbed .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _fdff (_ddfgf *_dbc .PdfObjectDictionary )bool {for _ ,_agbe :=range _ddfgf .Keys (){if _ ,_ccfdac :=_bcbfe [_agbe .String ()];_ccfdac {return true ;};};return false ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_cgdee *PdfFont )CharcodesToStrings (charcodes []_cg .CharCode )([]string ,int ,int ){_ceabb :=_cgdee .baseFields ();_acgdb :=make ([]string ,0,len (charcodes ));_cfed :=0;_afag :=_cgdee .Encoder ();if _afag !=nil {switch _ecga :=_afag .(type ){case _cg .SimpleEncoder :_bdcde :=_ecga .BaseName ();if _ ,_dbfcd :=_aagdc [_bdcde ];_dbfcd {for _ ,_fcdeb :=range charcodes {if _abff ,_fcfeg :=_afag .CharcodeToRune (_fcdeb );_fcfeg {_acgdb =append (_acgdb ,string (_abff ));}else {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fcdeb ,charcodes ,_ceabb .isCIDFont (),_cgdee ,_afag );_cfed ++;_acgdb =append (_acgdb ,_ce .MissingCodeString );};};return _acgdb ,len (_acgdb ),_cfed ;};};};for _ ,_afdd :=range charcodes {if _ceabb ._caga !=nil {if _fecc ,_bdbga :=_ceabb ._caga .CharcodeToUnicode (_ce .CharCode (_afdd ));_bdbga {_acgdb =append (_acgdb ,_fecc );continue ;};};if _afag !=nil {if _cgca ,_adfdc :=_afag .CharcodeToRune (_afdd );_adfdc {_acgdb =append (_acgdb ,string (_cgca ));continue ;};};_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_afdd ,charcodes ,_ceabb .isCIDFont (),_cgdee ,_afag );_cfed ++;_acgdb =append (_acgdb ,_ce .MissingCodeString );};if _cfed !=0{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cfed ,_cgdee );};return _acgdb ,len (_acgdb ),_cfed ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _dbc .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dbe *PdfAction )GetContainingPdfObject ()_dbc .PdfObject {return _dbe ._ff };func (_dgdc *PdfAnnotation )String ()string {_gcd :="";_bdb ,_egcg :=_dgdc .ToPdfObject ().(*_dbc .PdfIndirectObject );if _egcg {_gcd =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dgdc ._fgf ,_bdb .PdfObject .String ());};return _gcd ;};

// GetCerts returns the signature certificate chain.
func (_dafe *PdfSignature )GetCerts ()([]*_gg .Certificate ,error ){var _ffebe []func ()([]*_gg .Certificate ,error );switch _ceada ,_ :=_dbc .GetNameVal (_dafe .SubFilter );_ceada {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_ffebe =append (_ffebe ,_dafe .extractChainFromPKCS7 ,_dafe .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_ffebe =append (_ffebe ,_dafe .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_ffebe =append (_ffebe ,_dafe .extractChainFromPKCS7 );default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_ceada );};for _ ,_ddfgg :=range _ffebe {_cgdb ,_bffba :=_ddfgg ();if _bffba !=nil {return nil ,_bffba ;};if len (_cgdb )> 0{return _cgdb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gaaag *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gaaag .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edfb *PdfColorspaceDeviceRGB )ToPdfObject ()_dbc .PdfObject {return _dbc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// SetVersion sets the PDF version of the output file.
func (_begdca *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_begdca ._ccaec =majorVersion ;_begdca ._adaa =minorVersion ;};func _fdef (_dbda _dbc .PdfObject ,_eege *fontCommon )(*_ce .CMap ,error ){_cecfb ,_fbafc :=_dbc .GetStream (_dbda );if !_fbafc {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dbda );return nil ,_dbc .ErrTypeError ;};_eaccc ,_ddcfd :=_dbc .DecodeStream (_cecfb );if _ddcfd !=nil {return nil ,_ddcfd ;};_gbef ,_ddcfd :=_ce .LoadCmapFromData (_eaccc ,!_eege .isCIDFont ());if _ddcfd !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_cecfb .ObjectNumber ,_ddcfd );};return _gbef ,_ddcfd ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_faa *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cbaa :=range pages {_cbaa =_cbaa .Duplicate ();_aecca (_cbaa );_faa ._cgedd =append (_faa ._cgedd ,_cbaa );};};func _daeef (_adacd *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_adacd }};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ec .ReadSeeker )(*PdfReader ,error ){const _abbaa ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_afcfba :=&PdfReader {_egge :rs ,_gaaae :map[_dbc .PdfObject ]struct{}{},_dcga :_cdab (),_fcbf :false };_fdgf ,_bfdb :=_dcfga ("\u0072");if _bfdb !=nil {return nil ,_bfdb ;};_bfdb =_gc .Track (_fdgf ,_abbaa );if _bfdb !=nil {return nil ,_bfdb ;};_afcfba ._bggcd =_fdgf ;_bedbc ,_bfdb :=_dbc .NewParser (rs );if _bfdb !=nil {return nil ,_bfdb ;};_afcfba ._efgcc =_bedbc ;_caddc ,_bfdb :=_afcfba .IsEncrypted ();if _bfdb !=nil {return nil ,_bfdb ;};if !_caddc {_bfdb =_afcfba .loadStructure ();if _bfdb !=nil {return nil ,_bfdb ;};};return _afcfba ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_abcdf *PdfPage )GetPageDict ()*_dbc .PdfObjectDictionary {_acfeb :=_abcdf ._dbagc ;_acfeb .Clear ();_acfeb .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0050\u0061\u0067\u0065"));_acfeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abcdf .Parent );if _abcdf .LastModified !=nil {_acfeb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_abcdf .LastModified .ToPdfObject ());};if _abcdf .Resources !=nil {_acfeb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abcdf .Resources .ToPdfObject ());};if _abcdf .CropBox !=nil {_acfeb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_abcdf .CropBox .ToPdfObject ());};if _abcdf .MediaBox !=nil {_acfeb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_abcdf .MediaBox .ToPdfObject ());};if _abcdf .BleedBox !=nil {_acfeb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_abcdf .BleedBox .ToPdfObject ());};if _abcdf .TrimBox !=nil {_acfeb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_abcdf .TrimBox .ToPdfObject ());};if _abcdf .ArtBox !=nil {_acfeb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_abcdf .ArtBox .ToPdfObject ());};_acfeb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_abcdf .BoxColorInfo );_acfeb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_abcdf .Contents );if _abcdf .Rotate !=nil {_acfeb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_dbc .MakeInteger (*_abcdf .Rotate ));};_acfeb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_abcdf .Group );_acfeb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_abcdf .Thumb );_acfeb .SetIfNotNil ("\u0042",_abcdf .B );_acfeb .SetIfNotNil ("\u0044\u0075\u0072",_abcdf .Dur );_acfeb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_abcdf .Trans );_acfeb .SetIfNotNil ("\u0041\u0041",_abcdf .AA );_acfeb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_abcdf .Metadata );_acfeb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_abcdf .PieceInfo );_acfeb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_abcdf .StructParents );_acfeb .SetIfNotNil ("\u0049\u0044",_abcdf .ID );_acfeb .SetIfNotNil ("\u0050\u005a",_abcdf .PZ );_acfeb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_abcdf .SeparationInfo );_acfeb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_abcdf .Tabs );_acfeb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_abcdf .TemplateInstantiated );_acfeb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_abcdf .PresSteps );_acfeb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_abcdf .UserUnit );_acfeb .SetIfNotNil ("\u0056\u0050",_abcdf .VP );if _abcdf ._cffa !=nil {_cegca :=_dbc .MakeArray ();for _ ,_fcdbaf :=range _abcdf ._cffa {if _bafcfe :=_fcdbaf .GetContext ();_bafcfe !=nil {_cegca .Append (_bafcfe .ToPdfObject ());}else {_cegca .Append (_fcdbaf .ToPdfObject ());};};if _cegca .Len ()> 0{_acfeb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_cegca );};}else if _abcdf .Annots !=nil {_acfeb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_abcdf .Annots );};return _acfeb ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ae :=NewPdfAction ();_acg :=&PdfActionHide {};_acg .PdfAction =_ae ;_ae .SetContext (_acg );return _acg ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_aedab *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_fbac *PdfPage )setContainer (_gaef *_dbc .PdfIndirectObject ){_gaef .PdfObject =_fbac ._dbagc ;_fbac ._aaac =_gaef ;};func (_geacb *PdfShading )getShadingDict ()(*_dbc .PdfObjectDictionary ,error ){_dcdad :=_geacb ._bdgfb ;if _badgb ,_fadae :=_dcdad .(*_dbc .PdfIndirectObject );_fadae {_fgaba ,_aecbg :=_badgb .PdfObject .(*_dbc .PdfObjectDictionary );if !_aecbg {return nil ,_dbc .ErrTypeError ;};return _fgaba ,nil ;}else if _cgeca ,_fgdbf :=_dcdad .(*_dbc .PdfObjectStream );_fgdbf {return _cgeca .PdfObjectDictionary ,nil ;}else if _gagbd ,_bccfa :=_dcdad .(*_dbc .PdfObjectDictionary );_bccfa {return _gagbd ,nil ;}else {_gge .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_dbc .ErrTypeError ;};};

// ToPdfObject implements interface PdfModel.
func (_aafb *PdfAnnotationPolyLine )ToPdfObject ()_dbc .PdfObject {_aafb .PdfAnnotation .ToPdfObject ();_gadd :=_aafb ._gef ;_cfdd :=_gadd .PdfObject .(*_dbc .PdfObjectDictionary );_aafb .PdfAnnotationMarkup .appendToPdfDictionary (_cfdd );_cfdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_cfdd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aafb .Vertices );_cfdd .SetIfNotNil ("\u004c\u0045",_aafb .LE );_cfdd .SetIfNotNil ("\u0042\u0053",_aafb .BS );_cfdd .SetIfNotNil ("\u0049\u0043",_aafb .IC );_cfdd .SetIfNotNil ("\u0042\u0045",_aafb .BE );_cfdd .SetIfNotNil ("\u0049\u0054",_aafb .IT );_cfdd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aafb .Measure );return _gadd ;};

// ToPdfObject implements interface PdfModel.
func (_fdbb *PdfAnnotationFileAttachment )ToPdfObject ()_dbc .PdfObject {_fdbb .PdfAnnotation .ToPdfObject ();_bade :=_fdbb ._gef ;_adgc :=_bade .PdfObject .(*_dbc .PdfObjectDictionary );_fdbb .PdfAnnotationMarkup .appendToPdfDictionary (_adgc );_adgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_adgc .SetIfNotNil ("\u0046\u0053",_fdbb .FS );_adgc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdbb .Name );return _bade ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_caca *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=_caca .GetNumComponents (){return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafa ,_bdec :=_dbc .GetNumbersAsFloat (objects );if _bdec !=nil {return nil ,_bdec ;};return _caca .ColorFromFloats (_eafa );};func _gdee (_fcbfa *_dbc .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dfag :=PdfShadingType5 {};_ggfgb :=_fcbfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggfgb ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_fcegb ,_aedgg :=_ggfgb .(*_dbc .PdfObjectInteger );if !_aedgg {_gge .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggfgb );return nil ,_dbc .ErrTypeError ;};_dfag .BitsPerCoordinate =_fcegb ;_ggfgb =_fcbfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggfgb ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_fcegb ,_aedgg =_ggfgb .(*_dbc .PdfObjectInteger );if !_aedgg {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggfgb );return nil ,_dbc .ErrTypeError ;};_dfag .BitsPerComponent =_fcegb ;_ggfgb =_fcbfa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ggfgb ==nil {_gge .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_fcegb ,_aedgg =_ggfgb .(*_dbc .PdfObjectInteger );if !_aedgg {_gge .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ggfgb );return nil ,_dbc .ErrTypeError ;};_dfag .VerticesPerRow =_fcegb ;_ggfgb =_fcbfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggfgb ==nil {_gge .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cgced ,_aedgg :=_ggfgb .(*_dbc .PdfObjectArray );if !_aedgg {_gge .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggfgb );return nil ,_dbc .ErrTypeError ;};_dfag .Decode =_cgced ;if _eccbb :=_fcbfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eccbb !=nil {_dfag .Function =[]PdfFunction {};if _bfdcf ,_dgbf :=_eccbb .(*_dbc .PdfObjectArray );_dgbf {for _ ,_ceffd :=range _bfdcf .Elements (){_edcbb ,_fggbf :=_edcfc (_ceffd );if _fggbf !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fggbf );return nil ,_fggbf ;};_dfag .Function =append (_dfag .Function ,_edcbb );};}else {_baecc ,_egcba :=_edcfc (_eccbb );if _egcba !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egcba );return nil ,_egcba ;};_dfag .Function =append (_dfag .Function ,_baecc );};};return &_dfag ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _dbc .PdfObject ;Dest _dbc .PdfObject ;H _dbc .PdfObject ;PA _dbc .PdfObject ;QuadPoints _dbc .PdfObject ;BS _dbc .PdfObject ;_bge *PdfAction ;_aae *PdfReader ;};func (_eaaf *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// HasExtGState checks if ExtGState name is available.
func (_gfffb *PdfPage )HasExtGState (name _dbc .PdfObjectName )bool {if _gfffb .Resources ==nil {return false ;};if _gfffb .Resources .ExtGState ==nil {return false ;};_cgfbg ,_dfaf :=_dbc .TraceToDirectObject (_gfffb .Resources .ExtGState ).(*_dbc .PdfObjectDictionary );if !_dfaf {_gge .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_dbc .TraceToDirectObject (_gfffb .Resources .ExtGState ));return false ;};_acbd :=_cgfbg .Get (name );_acdf :=_acbd !=nil ;return _acdf ;};

// ToPdfObject returns the PDF representation of the function.
func (_bagd *PdfFunctionType0 )ToPdfObject ()_dbc .PdfObject {if _bagd ._fcfg ==nil {_bagd ._fcfg =&_dbc .PdfObjectStream {};};_fbgbfa :=_dbc .MakeDict ();_fbgbfa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dbc .MakeInteger (0));_abbac :=&_dbc .PdfObjectArray {};for _ ,_ageb :=range _bagd .Domain {_abbac .Append (_dbc .MakeFloat (_ageb ));};_fbgbfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abbac );_ggaff :=&_dbc .PdfObjectArray {};for _ ,_aeefd :=range _bagd .Range {_ggaff .Append (_dbc .MakeFloat (_aeefd ));};_fbgbfa .Set ("\u0052\u0061\u006eg\u0065",_ggaff );_bggda :=&_dbc .PdfObjectArray {};for _ ,_adefb :=range _bagd .Size {_bggda .Append (_dbc .MakeInteger (int64 (_adefb )));};_fbgbfa .Set ("\u0053\u0069\u007a\u0065",_bggda );_fbgbfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_dbc .MakeInteger (int64 (_bagd .BitsPerSample )));if _bagd .Order !=1{_fbgbfa .Set ("\u004f\u0072\u0064e\u0072",_dbc .MakeInteger (int64 (_bagd .Order )));};_fbgbfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_bagd ._bfba ))));_bagd ._fcfg .Stream =_bagd ._bfba ;_bagd ._fcfg .PdfObjectDictionary =_fbgbfa ;return _bagd ._fcfg ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _dbc .StreamEncoder ;FormType _dbc .PdfObject ;BBox _dbc .PdfObject ;Matrix _dbc .PdfObject ;Resources *PdfPageResources ;Group _dbc .PdfObject ;Ref _dbc .PdfObject ;MetaData _dbc .PdfObject ;PieceInfo _dbc .PdfObject ;LastModified _dbc .PdfObject ;StructParent _dbc .PdfObject ;StructParents _dbc .PdfObject ;OPI _dbc .PdfObject ;OC _dbc .PdfObject ;Name _dbc .PdfObject ;

// Stream data.
Stream []byte ;_bacgb *_dbc .PdfObjectStream ;};

// HasXObjectByName checks if has XObject resource by name.
func (_aeaf *PdfPage )HasXObjectByName (name _dbc .PdfObjectName )bool {_gefba ,_ebadd :=_aeaf .Resources .XObject .(*_dbc .PdfObjectDictionary );if !_ebadd {return false ;};if _gdaff :=_gefba .Get (name );_gdaff !=nil {return true ;};return false ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dddf pdfCIDFontType2 )GetCharMetrics (code _cg .CharCode )(_aca .CharMetrics ,bool ){if _dgddb ,_bgfaf :=_dddf ._agadf [code ];_bgfaf {return _aca .CharMetrics {Wx :_dgddb },true ;};_cfaf :=rune (code );_cgedc ,_gcgd :=_dddf ._adfdb [_cfaf ];if !_gcgd {_cgedc =int (_dddf ._cbdec );};return _aca .CharMetrics {Wx :float64 (_cgedc )},true ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_agae *PdfFont )ToUnicode ()string {if _agae .baseFields ()._caga ==nil {return "";};return _agae .baseFields ()._caga .Name ();};

// Encoder returns the font's text encoder.
func (_cfccd pdfCIDFontType2 )Encoder ()_cg .TextEncoder {return _cfccd ._aeada };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_beebe *XObjectForm )GetContainingPdfObject ()_dbc .PdfObject {return _beebe ._bacgb };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fgecg *PdfPageResources )GetShadingByName (keyName _dbc .PdfObjectName )(*PdfShading ,bool ){if _fgecg .Shading ==nil {return nil ,false ;};_afagc ,_ceeda :=_dbc .TraceToDirectObject (_fgecg .Shading ).(*_dbc .PdfObjectDictionary );if !_ceeda {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgecg .Shading );return nil ,false ;};if _fbbda :=_afagc .Get (keyName );_fbbda !=nil {_eebea ,_cbbd :=_deaag (_fbbda );if _cbbd !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cbbd );return nil ,false ;};return _eebea ,true ;};return nil ,false ;};func (_abc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gebeg *_dbc .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_gacd :=PdfAnnotationPrinterMark {};_gacd .MN =_gebeg .Get ("\u004d\u004e");return &_gacd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ed *PdfActionResetForm )ToPdfObject ()_dbc .PdfObject {_ed .PdfAction .ToPdfObject ();_fcc :=_ed ._ff ;_edc :=_fcc .PdfObject .(*_dbc .PdfObjectDictionary );_edc .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeResetForm )));_edc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ed .Fields );_edc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ed .Flags );return _fcc ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_abgba :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_abgba .N =N ;return _abgba ,nil ;};func (_ebba *PdfAppender )replaceObject (_gfgb ,_ggcg _dbc .PdfObject ){switch _geffa :=_gfgb .(type ){case *_dbc .PdfIndirectObject :_ebba ._cbecd [_ggcg ]=_geffa .ObjectNumber ;case *_dbc .PdfObjectStream :_ebba ._cbecd [_ggcg ]=_geffa .ObjectNumber ;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_dccb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if _dccb .Alternate ==nil {if _dccb .N ==1{_bbgb :=NewPdfColorspaceDeviceGray ();return _bbgb .ColorFromPdfObjects (objects );}else if _dccb .N ==3{_gbddd :=NewPdfColorspaceDeviceRGB ();return _gbddd .ColorFromPdfObjects (objects );}else if _dccb .N ==4{_adef :=NewPdfColorspaceDeviceCMYK ();return _adef .ColorFromPdfObjects (objects );}else {return nil ,_ge .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _dccb .Alternate .ColorFromPdfObjects (objects );};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gedbe *PdfPage )ToPdfObject ()_dbc .PdfObject {_eddg :=_gedbe ._aaac ;_gedbe .GetPageDict ();return _eddg ;};

// String returns a string representation of the field.
func (_fadf *PdfField )String ()string {if _fcea ,_gegc :=_fadf .ToPdfObject ().(*_dbc .PdfIndirectObject );_gegc {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fadf ._cgda ,_fcea .PdfObject .String ());};return "";};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cbgdb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_dbc .StreamEncoder ,error ){_cgba ,_eecc :=_cbgdb ._dfacd .(*_dbc .PdfObjectStream );if !_eecc {_gge .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbgdb ._dfacd );return nil ,nil ,_dbc .ErrTypeError ;};_gfbbc ,_bgbg :=_dbc .DecodeStream (_cgba );if _bgbg !=nil {_gge .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bgbg );return nil ,nil ,_bgbg ;};_gbafd ,_bgbg :=_dbc .NewEncoderFromStream (_cgba );if _bgbg !=nil {_gge .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bgbg );return nil ,nil ,_bgbg ;};return _gfbbc ,_gbafd ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bacfd *PdfShading )ToPdfObject ()_dbc .PdfObject {_gggfc :=_bacfd ._bdgfb ;_cddbc ,_becc :=_bacfd .getShadingDict ();if _becc !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bacfd .ShadingType !=nil {_cddbc .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bacfd .ShadingType );};if _bacfd .ColorSpace !=nil {_cddbc .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bacfd .ColorSpace .ToPdfObject ());};if _bacfd .Background !=nil {_cddbc .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bacfd .Background );};if _bacfd .BBox !=nil {_cddbc .Set ("\u0042\u0042\u006f\u0078",_bacfd .BBox .ToPdfObject ());};if _bacfd .AntiAlias !=nil {_cddbc .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bacfd .AntiAlias );};return _gggfc ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fdgef *PdfReader )Inspect ()(map[string ]int ,error ){return _fdgef ._efgcc .Inspect ()};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_dbc .PdfObjectInteger ;BitsPerComponent *_dbc .PdfObjectInteger ;VerticesPerRow *_dbc .PdfObjectInteger ;Decode *_dbc .PdfObjectArray ;Function []PdfFunction ;};

// String implements interface PdfObject.
func (_bca *PdfAction )String ()string {_gda ,_gf :=_bca .ToPdfObject ().(*_dbc .PdfIndirectObject );if _gf {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bca ._df ,_gda .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_ceccg *PdfAnnotationSound )ToPdfObject ()_dbc .PdfObject {_ceccg .PdfAnnotation .ToPdfObject ();_bgbf :=_ceccg ._gef ;_cbfb :=_bgbf .PdfObject .(*_dbc .PdfObjectDictionary );_ceccg .PdfAnnotationMarkup .appendToPdfDictionary (_cbfb );_cbfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053\u006f\u0075n\u0064"));_cbfb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ceccg .Sound );_cbfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ceccg .Name );return _bgbf ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// WriteToFile writes the output PDF to file.
func (_caeag *PdfWriter )WriteToFile (outputFilePath string )error {_agaed ,_fdfab :=_eg .Create (outputFilePath );if _fdfab !=nil {return _fdfab ;};defer _agaed .Close ();return _caeag .Write (_agaed );};func (_gaeec *PdfAppender )mergeResources (_cace ,_fea _dbc .PdfObject ,_fbee map[_dbc .PdfObjectName ]_dbc .PdfObjectName )_dbc .PdfObject {if _fea ==nil &&_cace ==nil {return nil ;};if _fea ==nil {return _cace ;};_cfcb ,_cbeb :=_dbc .GetDict (_fea );if !_cbeb {return _cace ;};if _cace ==nil {_gbgd :=_dbc .MakeDict ();_gbgd .Merge (_cfcb );return _fea ;};_gbde ,_cbeb :=_dbc .GetDict (_cace );if !_cbeb {_gge .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_gbde =_dbc .MakeDict ();};for _ ,_ccfeg :=range _cfcb .Keys (){if _abfef ,_bfda :=_fbee [_ccfeg ];_bfda {_gbde .Set (_abfef ,_cfcb .Get (_ccfeg ));}else {_gbde .Set (_ccfeg ,_cfcb .Get (_ccfeg ));};};return _gbde ;};

// ToInteger convert to an integer format.
func (_gfge *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gaeed :=_bc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gaeed *_gfge .A ()),uint32 (_gaeed *_gfge .B ()),uint32 (_gaeed *_gfge .C ())};};

// ToPdfObject implements interface PdfModel.
func (_gab *PdfActionRendition )ToPdfObject ()_dbc .PdfObject {_gab .PdfAction .ToPdfObject ();_egfg :=_gab ._ff ;_eeag :=_egfg .PdfObject .(*_dbc .PdfObjectDictionary );_eeag .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeRendition )));_eeag .SetIfNotNil ("\u0052",_gab .R );_eeag .SetIfNotNil ("\u0041\u004e",_gab .AN );_eeag .SetIfNotNil ("\u004f\u0050",_gab .OP );_eeag .SetIfNotNil ("\u004a\u0053",_gab .JS );return _egfg ;};

// PartialName returns the partial name of the field.
func (_fffda *PdfField )PartialName ()string {_cacdg :="";if _fffda .T !=nil {_cacdg =_fffda .T .Decoded ();}else {_gge .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _cacdg ;};func (_agef *fontFile )loadFromSegments (_gadf ,_fafbd []byte )error {_gge .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gadf ),len (_fafbd ));_ecbca :=_agef .parseASCIIPart (_gadf );if _ecbca !=nil {return _ecbca ;};_gge .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agef );if len (_fafbd )==0{return nil ;};_gge .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agef );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bgebb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bgebb .Alternate ==nil {if _bgebb .N ==1{_cebac :=NewPdfColorspaceDeviceGray ();return _cebac .ColorFromFloats (vals );}else if _bgebb .N ==3{_acgbg :=NewPdfColorspaceDeviceRGB ();return _acgbg .ColorFromFloats (vals );}else if _bgebb .N ==4{_bccd :=NewPdfColorspaceDeviceCMYK ();return _bccd .ColorFromFloats (vals );}else {return nil ,_ge .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _bgebb .Alternate .ColorFromFloats (vals );};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_agb :=NewPdfAction ();_adg :=&PdfActionGoToE {};_adg .PdfAction =_agb ;_agb .SetContext (_adg );return _adg ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ceba :=NewPdfAnnotation ();_bcef :=&PdfAnnotationInk {};_bcef .PdfAnnotation =_ceba ;_bcef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceba .SetContext (_bcef );return _bcef ;};

// AddImageResource adds an image to the XObject resources.
func (_ddfe *PdfPage )AddImageResource (name _dbc .PdfObjectName ,ximg *XObjectImage )error {var _bbdbe *_dbc .PdfObjectDictionary ;if _ddfe .Resources .XObject ==nil {_bbdbe =_dbc .MakeDict ();_ddfe .Resources .XObject =_bbdbe ;}else {var _fagaf bool ;_bbdbe ,_fagaf =(_ddfe .Resources .XObject ).(*_dbc .PdfObjectDictionary );if !_fagaf {return _ge .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bbdbe .Set (name ,ximg .ToPdfObject ());return nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_dbc .PdfObjectStream ;Data []byte ;_ggcaf *_dbc .PdfIndirectObject ;_acea *_dbc .PdfObjectStream ;};func (_egdeb *PdfReader )loadAnnotations (_gcdbf _dbc .PdfObject )([]*PdfAnnotation ,error ){_gdbbd ,_gffb :=_dbc .GetArray (_gcdbf );if !_gffb {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dffc []*PdfAnnotation ;for _ ,_dbafe :=range _gdbbd .Elements (){_dbafe =_dbc .ResolveReference (_dbafe );if _ ,_gggaaa :=_dbafe .(*_dbc .PdfObjectNull );_gggaaa {continue ;};_fgce ,_abddgg :=_dbafe .(*_dbc .PdfObjectDictionary );_dbgfd ,_gfeaa :=_dbafe .(*_dbc .PdfIndirectObject );if _abddgg {_dbgfd =&_dbc .PdfIndirectObject {};_dbgfd .PdfObject =_fgce ;}else {if !_gfeaa {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_gbddf ,_ccdeg :=_egdeb .newPdfAnnotationFromIndirectObject (_dbgfd );if _ccdeg !=nil {return nil ,_ccdeg ;};switch _bebb :=_gbddf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cceda :=range _egdeb .AcroForm .AllFields (){if _cceda ._befed ==_bebb .Parent {_bebb ._agbg =_cceda ;break ;};};};if _gbddf !=nil {_dffc =append (_dffc ,_gbddf );};};return _dffc ,nil ;};func _gagad (_ccgce *_dbc .PdfObjectDictionary )(*PdfShadingType7 ,error ){_gaafg :=PdfShadingType7 {};_aaafc :=_ccgce .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aaafc ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gcacfa ,_ecaaa :=_aaafc .(*_dbc .PdfObjectInteger );if !_ecaaa {_gge .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaafc );return nil ,_dbc .ErrTypeError ;};_gaafg .BitsPerCoordinate =_gcacfa ;_aaafc =_ccgce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aaafc ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gcacfa ,_ecaaa =_aaafc .(*_dbc .PdfObjectInteger );if !_ecaaa {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aaafc );return nil ,_dbc .ErrTypeError ;};_gaafg .BitsPerComponent =_gcacfa ;_aaafc =_ccgce .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aaafc ==nil {_gge .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcacfa ,_ecaaa =_aaafc .(*_dbc .PdfObjectInteger );if !_ecaaa {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aaafc );return nil ,_dbc .ErrTypeError ;};_gaafg .BitsPerComponent =_gcacfa ;_aaafc =_ccgce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aaafc ==nil {_gge .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dbed ,_ecaaa :=_aaafc .(*_dbc .PdfObjectArray );if !_ecaaa {_gge .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aaafc );return nil ,_dbc .ErrTypeError ;};_gaafg .Decode =_dbed ;if _ccagg :=_ccgce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ccagg !=nil {_gaafg .Function =[]PdfFunction {};if _efabd ,_bfecg :=_ccagg .(*_dbc .PdfObjectArray );_bfecg {for _ ,_fbfeg :=range _efabd .Elements (){_cggdb ,_acfdf :=_edcfc (_fbfeg );if _acfdf !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acfdf );return nil ,_acfdf ;};_gaafg .Function =append (_gaafg .Function ,_cggdb );};}else {_fbbfc ,_bgabf :=_edcfc (_ccagg );if _bgabf !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgabf );return nil ,_bgabf ;};_gaafg .Function =append (_gaafg .Function ,_fbbfc );};};return &_gaafg ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gcddc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gcddc .Base ==nil {return nil ,_ge .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _gcddc .Base .ColorToRGB (color );};

// CustomKeys returns all custom info keys as list.
func (_ccfg *PdfInfo )CustomKeys ()[]string {if _ccfg ._fbfca ==nil {return nil ;};_cdfde :=make ([]string ,len (_ccfg ._fbfca .Keys ()));for _ ,_afbgf :=range _ccfg ._fbfca .Keys (){_cdfde =append (_cdfde ,_afbgf .String ());};return _cdfde ;};

// A returns the value of the A component of the color.
func (_bfgc *PdfColorCalRGB )A ()float64 {return _bfgc [0]};func _fdbe (_gaec []byte )(_fdaef ,_dbgab string ,_eedfg error ){_gge .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gaec ));_ccaf :=_geeg .FindIndex (_gaec );if _ccaf ==nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_dbc .ErrTypeError ;};_degga :=_ccaf [1];_bbfdd :=_ab .Index (string (_gaec [_degga :]),_ddcfb );if _bbfdd < 0{_fdaef =string (_gaec [_degga :]);return _fdaef ,"",nil ;};_gbgf :=_degga +_bbfdd ;_fdaef =string (_gaec [_degga :_gbgf ]);_fbdf :=_gbgf ;_bbfdd =_ab .Index (string (_gaec [_fbdf :]),_dagb );if _bbfdd < 0{_gge .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eedfg );return "","",_dbc .ErrTypeError ;};_gbefb :=_fbdf +_bbfdd ;_dbgab =string (_gaec [_fbdf :_gbefb ]);return _fdaef ,_dbgab ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bfeb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cbdba :=_bee .NewReader (img .getBase ());_afbg :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dfac :=_bee .NewWriter (_afbg );_cadef :=_bc .Pow (2,float64 (img .BitsPerComponent ))-1;_fcgfa :=make ([]uint32 ,3);var (_feef uint32 ;ANorm ,X ,Y ,Z ,_eecd ,_edef ,_afgeb float64 ;_gcge error ;);for {_feef ,_gcge =_cbdba .ReadSample ();if _gcge ==_ec .EOF {break ;}else if _gcge !=nil {return img ,_gcge ;};ANorm =float64 (_feef )/_cadef ;X =_bfeb .WhitePoint [0]*_bc .Pow (ANorm ,_bfeb .Gamma );Y =_bfeb .WhitePoint [1]*_bc .Pow (ANorm ,_bfeb .Gamma );Z =_bfeb .WhitePoint [2]*_bc .Pow (ANorm ,_bfeb .Gamma );_eecd =3.240479*X +-1.537150*Y +-0.498535*Z ;_edef =-0.969256*X +1.875992*Y +0.041556*Z ;_afgeb =0.055648*X +-0.204043*Y +1.057311*Z ;_eecd =_bc .Min (_bc .Max (_eecd ,0),1.0);_edef =_bc .Min (_bc .Max (_edef ,0),1.0);_afgeb =_bc .Min (_bc .Max (_afgeb ,0),1.0);_fcgfa [0]=uint32 (_eecd *_cadef );_fcgfa [1]=uint32 (_edef *_cadef );_fcgfa [2]=uint32 (_afgeb *_cadef );if _gcge =_dfac .WriteSamples (_fcgfa );_gcge !=nil {return img ,_gcge ;};};return _dfddd (&_afbg ),nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dfedb *Outline )ToPdfOutline ()*PdfOutline {_eafff :=NewPdfOutline ();var _dbbad []*PdfOutlineItem ;var _gadcg int64 ;var _caffe *PdfOutlineItem ;for _ ,_cgaff :=range _dfedb .Entries {_aeefdc ,_eacbb :=_cgaff .ToPdfOutlineItem ();_aeefdc .Parent =&_eafff .PdfOutlineTreeNode ;if _caffe !=nil {_caffe .Next =&_aeefdc .PdfOutlineTreeNode ;_aeefdc .Prev =&_caffe .PdfOutlineTreeNode ;};_dbbad =append (_dbbad ,_aeefdc );_gadcg +=_eacbb ;_caffe =_aeefdc ;};_cegad :=int64 (len (_dbbad ));_gadcg +=_cegad ;if _cegad > 0{_eafff .First =&_dbbad [0].PdfOutlineTreeNode ;_eafff .Last =&_dbbad [_cegad -1].PdfOutlineTreeNode ;_eafff .Count =&_gadcg ;};return _eafff ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bce :=NewPdfAction ();_ded :=&PdfActionJavaScript {};_ded .PdfAction =_bce ;_bce .SetContext (_ded );return _ded ;};

// ToPdfObject implements interface PdfModel.
func (_fdeb *PdfAnnotation3D )ToPdfObject ()_dbc .PdfObject {_fdeb .PdfAnnotation .ToPdfObject ();_fec :=_fdeb ._gef ;_ebga :=_fec .PdfObject .(*_dbc .PdfObjectDictionary );_ebga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0033\u0044"));_ebga .SetIfNotNil ("\u0033\u0044\u0044",_fdeb .T3DD );_ebga .SetIfNotNil ("\u0033\u0044\u0056",_fdeb .T3DV );_ebga .SetIfNotNil ("\u0033\u0044\u0041",_fdeb .T3DA );_ebga .SetIfNotNil ("\u0033\u0044\u0049",_fdeb .T3DI );_ebga .SetIfNotNil ("\u0033\u0044\u0042",_fdeb .T3DB );return _fec ;};

// ToPdfObject implements interface PdfModel.
func (_geff *PdfAnnotationHighlight )ToPdfObject ()_dbc .PdfObject {_geff .PdfAnnotation .ToPdfObject ();_ebbf :=_geff ._gef ;_deg :=_ebbf .PdfObject .(*_dbc .PdfObjectDictionary );_geff .PdfAnnotationMarkup .appendToPdfDictionary (_deg );_deg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_deg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geff .QuadPoints );return _ebbf ;};

// ToPdfObject implements interface PdfModel.
func (_cbcd *PdfAnnotationTrapNet )ToPdfObject ()_dbc .PdfObject {_cbcd .PdfAnnotation .ToPdfObject ();_dcegd :=_cbcd ._gef ;_ecab :=_dcegd .PdfObject .(*_dbc .PdfObjectDictionary );_ecab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _dcegd ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_bdffc *PdfColorspaceDeviceN )GetNumComponents ()int {return _bdffc .ColorantNames .Len ()};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dbf :=NewPdfAnnotation ();_fde :=&PdfAnnotationWidget {};_fde .PdfAnnotation =_dbf ;_dbf .SetContext (_fde );return _fde ;};

// Encoder returns the font's text encoder.
func (_eegbbd pdfCIDFontType0 )Encoder ()_cg .TextEncoder {return _eegbbd ._bggg };func _aecca (_ccbgda *PdfPage ){_ageae :=_gc .GetLicenseKey ();if _ageae !=nil &&_ageae .IsLicensed (){return ;};_gfdc :=_dbc .PdfObjectName ("\u0055\u0046\u0031");if !_ccbgda .Resources .HasFontByName (_gfdc ){_ccbgda .Resources .SetFontByName (_gfdc ,DefaultFont ().ToPdfObject ());};var _ecead []string ;_ecead =append (_ecead ,"\u0071");_ecead =append (_ecead ,"\u0042\u0054");_ecead =append (_ecead ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_gfdc .String ()));_ecead =append (_ecead ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_ecead =append (_ecead ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_gdbce :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_ecead =append (_ecead ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gdbce ));_ecead =append (_ecead ,"\u0045\u0054");_ecead =append (_ecead ,"\u0051");_gacc :=_ab .Join (_ecead ,"\u000a");_ccbgda .AddContentStreamByString (_gacc );_ccbgda .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_agfa *PdfActionSound )ToPdfObject ()_dbc .PdfObject {_agfa .PdfAction .ToPdfObject ();_ceb :=_agfa ._ff ;_bcb :=_ceb .PdfObject .(*_dbc .PdfObjectDictionary );_bcb .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeSound )));_bcb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_agfa .Sound );_bcb .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_agfa .Volume );_bcb .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_agfa .Synchronous );_bcb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_agfa .Repeat );_bcb .SetIfNotNil ("\u004d\u0069\u0078",_agfa .Mix );return _ceb ;};func (_aee *PdfReader )newPdfAnnotationSoundFromDict (_cdec *_dbc .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bdd :=PdfAnnotationSound {};_eee ,_bac :=_aee .newPdfAnnotationMarkupFromDict (_cdec );if _bac !=nil {return nil ,_bac ;};_bdd .PdfAnnotationMarkup =_eee ;_bdd .Name =_cdec .Get ("\u004e\u0061\u006d\u0065");_bdd .Sound =_cdec .Get ("\u0053\u006f\u0075n\u0064");return &_bdd ,nil ;};func _aedd (_ffaa *_dbc .PdfObjectDictionary )(*PdfShadingType6 ,error ){_caebe :=PdfShadingType6 {};_adfgf :=_ffaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _adfgf ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_aegg ,_afbcff :=_adfgf .(*_dbc .PdfObjectInteger );if !_afbcff {_gge .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adfgf );return nil ,_dbc .ErrTypeError ;};_caebe .BitsPerCoordinate =_aegg ;_adfgf =_ffaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _adfgf ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_aegg ,_afbcff =_adfgf .(*_dbc .PdfObjectInteger );if !_afbcff {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_adfgf );return nil ,_dbc .ErrTypeError ;};_caebe .BitsPerComponent =_aegg ;_adfgf =_ffaa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _adfgf ==nil {_gge .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_aegg ,_afbcff =_adfgf .(*_dbc .PdfObjectInteger );if !_afbcff {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_adfgf );return nil ,_dbc .ErrTypeError ;};_caebe .BitsPerComponent =_aegg ;_adfgf =_ffaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _adfgf ==nil {_gge .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_febef ,_afbcff :=_adfgf .(*_dbc .PdfObjectArray );if !_afbcff {_gge .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adfgf );return nil ,_dbc .ErrTypeError ;};_caebe .Decode =_febef ;if _facd :=_ffaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_facd !=nil {_caebe .Function =[]PdfFunction {};if _defg ,_edbae :=_facd .(*_dbc .PdfObjectArray );_edbae {for _ ,_cagfac :=range _defg .Elements (){_fgbcf ,_fbce :=_edcfc (_cagfac );if _fbce !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbce );return nil ,_fbce ;};_caebe .Function =append (_caebe .Function ,_fgbcf );};}else {_abfg ,_eebeg :=_edcfc (_facd );if _eebeg !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eebeg );return nil ,_eebeg ;};_caebe .Function =append (_caebe .Function ,_abfg );};};return &_caebe ,nil ;};

// Initialize initializes the PdfSignature.
func (_dafgf *PdfSignature )Initialize ()error {if _dafgf .Handler ==nil {return _ge .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _dafgf .Handler .InitSignature (_dafgf );};

// ToPdfObject implements interface PdfModel.
func (_cged *PdfAnnotationMovie )ToPdfObject ()_dbc .PdfObject {_cged .PdfAnnotation .ToPdfObject ();_cedc :=_cged ._gef ;_baca :=_cedc .PdfObject .(*_dbc .PdfObjectDictionary );_baca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u004d\u006f\u0076i\u0065"));_baca .SetIfNotNil ("\u0054",_cged .T );_baca .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_cged .Movie );_baca .SetIfNotNil ("\u0041",_cged .A );return _cedc ;};func _cgbfc (_geea *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_geea }};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbbbg *PdfShadingType1 )ToPdfObject ()_dbc .PdfObject {_gbbbg .PdfShading .ToPdfObject ();_abfae ,_acfg :=_gbbbg .getShadingDict ();if _acfg !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gbbbg .Domain !=nil {_abfae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbbbg .Domain );};if _gbbbg .Matrix !=nil {_abfae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gbbbg .Matrix );};if _gbbbg .Function !=nil {if len (_gbbbg .Function )==1{_abfae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbbbg .Function [0].ToPdfObject ());}else {_defeb :=_dbc .MakeArray ();for _ ,_ddcbf :=range _gbbbg .Function {_defeb .Append (_ddcbf .ToPdfObject ());};_abfae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_defeb );};};return _gbbbg ._bdgfb ;};func (_efab *PdfAppender )updateObjectsDeep (_dgdd _dbc .PdfObject ,_acgd map[_dbc .PdfObject ]struct{}){if _acgd ==nil {_acgd =map[_dbc .PdfObject ]struct{}{};};if _ ,_bfcgfc :=_acgd [_dgdd ];_bfcgfc ||_dgdd ==nil {return ;};_acgd [_dgdd ]=struct{}{};_bgdg :=_dbc .ResolveReferencesDeep (_dgdd ,_efab ._caac );if _bgdg !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdg );};switch _edada :=_dgdd .(type ){case *_dbc .PdfIndirectObject :switch {case _edada .GetParser ()==_efab ._cdef ._efgcc :return ;case _edada .GetParser ()==_efab .Reader ._efgcc :_edaa ,_ :=_efab ._cdef .GetIndirectObjectByNumber (int (_edada .ObjectNumber ));_bba ,_aggf :=_edaa .(*_dbc .PdfIndirectObject );if _aggf &&_bba !=nil {if _bba .PdfObject !=_edada .PdfObject &&_bba .PdfObject .WriteString ()!=_edada .PdfObject .WriteString (){_efab .addNewObject (_dgdd );_efab ._cbecd [_dgdd ]=_edada .ObjectNumber ;};};default:_efab .addNewObject (_dgdd );};_efab .updateObjectsDeep (_edada .PdfObject ,_acgd );case *_dbc .PdfObjectArray :for _ ,_cacf :=range _edada .Elements (){_efab .updateObjectsDeep (_cacf ,_acgd );};case *_dbc .PdfObjectDictionary :for _ ,_bgba :=range _edada .Keys (){_efab .updateObjectsDeep (_edada .Get (_bgba ),_acgd );};case *_dbc .PdfObjectStreams :if _edada .GetParser ()!=_efab ._cdef ._efgcc {for _ ,_dbfd :=range _edada .Elements (){_efab .updateObjectsDeep (_dbfd ,_acgd );};};case *_dbc .PdfObjectStream :switch {case _edada .GetParser ()==_efab ._cdef ._efgcc :return ;case _edada .GetParser ()==_efab .Reader ._efgcc :if _aefe ,_dfec :=_efab ._cdef ._efgcc .LookupByReference (_edada .PdfObjectReference );_dfec ==nil {var _cbfc bool ;if _dddcc ,_fafb :=_dbc .GetStream (_aefe );_fafb &&_gd .Equal (_dddcc .Stream ,_edada .Stream ){_cbfc =true ;};if _cage ,_fda :=_dbc .GetDict (_aefe );_cbfc &&_fda {_cbfc =_cage .WriteString ()==_edada .PdfObjectDictionary .WriteString ();};if _cbfc {return ;};};if _edada .ObjectNumber !=0{_efab ._cbecd [_dgdd ]=_edada .ObjectNumber ;};default:if _ ,_eged :=_efab ._agag [_dgdd ];!_eged {_efab .addNewObject (_dgdd );};};_efab .updateObjectsDeep (_edada .PdfObjectDictionary ,_acgd );};};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_gcce :=NewPdfAnnotation ();_afae :=&PdfAnnotationCircle {};_afae .PdfAnnotation =_gcce ;_afae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcce .SetContext (_afae );return _afae ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_adfd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _adfd .UnderlyingCS .GetNumComponents ();};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_gee *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// Subtype returns the font's "Subtype" field.
func (_eedgd *PdfFont )Subtype ()string {_cgag :=_eedgd .baseFields ()._abdbb ;if _dafc ,_gbaa :=_eedgd ._ceef .(*pdfFontType0 );_gbaa {_cgag =_cgag +"\u003a"+_dafc .DescendantFont .Subtype ();};return _cgag ;};

// AddWatermarkImage adds a watermark to the page.
func (_dfbd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_dcbb ,_geaee :=_dfbd .GetMediaBox ();if _geaee !=nil {return _geaee ;};_dcege :=_dcbb .Urx -_dcbb .Llx ;_ccdbe :=_dcbb .Ury -_dcbb .Lly ;_gbcca :=float64 (*ximg .Width );_ffeb :=(_dcege -_gbcca )/2;if opt .FitToWidth {_gbcca =_dcege ;_ffeb =0;};_ccefc :=_ccdbe ;_beea :=float64 (0);if opt .PreserveAspectRatio {_ccefc =_gbcca *float64 (*ximg .Height )/float64 (*ximg .Width );_beea =(_ccdbe -_ccefc )/2;};if _dfbd .Resources ==nil {_dfbd .Resources =NewPdfPageResources ();};_gfcccf :=0;_dadac :=_dbc .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_gfcccf ));for _dfbd .Resources .HasXObjectByName (_dadac ){_gfcccf ++;_dadac =_dbc .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_gfcccf ));};_geaee =_dfbd .AddImageResource (_dadac ,ximg );if _geaee !=nil {return _geaee ;};_gfcccf =0;_ffded :=_dbc .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_gfcccf ));for _dfbd .HasExtGState (_ffded ){_gfcccf ++;_ffded =_dbc .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_gfcccf ));};_acbfa :=_dbc .MakeDict ();_acbfa .Set ("\u0042\u004d",_dbc .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_acbfa .Set ("\u0043\u0041",_dbc .MakeFloat (opt .Alpha ));_acbfa .Set ("\u0063\u0061",_dbc .MakeFloat (opt .Alpha ));_geaee =_dfbd .AddExtGState (_ffded ,_acbfa );if _geaee !=nil {return _geaee ;};_cgefd :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ffded ,_gbcca ,_ccefc ,_ffeb ,_beea ,_dadac );_dfbd .AddContentStreamByString (_cgefd );return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_acag *PdfColorspaceLab )ToPdfObject ()_dbc .PdfObject {_deeg :=_dbc .MakeArray ();_deeg .Append (_dbc .MakeName ("\u004c\u0061\u0062"));_efedf :=_dbc .MakeDict ();if _acag .WhitePoint !=nil {_gbfg :=_dbc .MakeArray (_dbc .MakeFloat (_acag .WhitePoint [0]),_dbc .MakeFloat (_acag .WhitePoint [1]),_dbc .MakeFloat (_acag .WhitePoint [2]));_efedf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gbfg );}else {_gge .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _acag .BlackPoint !=nil {_cgdd :=_dbc .MakeArray (_dbc .MakeFloat (_acag .BlackPoint [0]),_dbc .MakeFloat (_acag .BlackPoint [1]),_dbc .MakeFloat (_acag .BlackPoint [2]));_efedf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cgdd );};if _acag .Range !=nil {_aaaee :=_dbc .MakeArray (_dbc .MakeFloat (_acag .Range [0]),_dbc .MakeFloat (_acag .Range [1]),_dbc .MakeFloat (_acag .Range [2]),_dbc .MakeFloat (_acag .Range [3]));_efedf .Set ("\u0052\u0061\u006eg\u0065",_aaaee );};_deeg .Append (_efedf );if _acag ._beae !=nil {_acag ._beae .PdfObject =_deeg ;return _acag ._beae ;};return _deeg ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_edee *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_edee .updateObjectsDeep (dss .ToPdfObject (),nil );};_edee ._fca =dss ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_cgggf *PdfColorspaceLab )DecodeArray ()[]float64 {_afga :=[]float64 {0,100};if _cgggf .Range !=nil &&len (_cgggf .Range )==4{_afga =append (_afga ,_cgggf .Range ...);}else {_afga =append (_afga ,-100,100,-100,100);};return _afga ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ffdd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fccgc :=vals [0];if _fccgc < 0.0||_fccgc > 1.0{_gge .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _fccgc < 0.0{_fccgc =0.0;}else if _fccgc > 1.0{_fccgc =1.0;};return NewPdfColorDeviceGray (_fccgc ),nil ;};func (_ffg *PdfReader )newPdfAnnotationMovieFromDict (_bbfa *_dbc .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_fffa :=PdfAnnotationMovie {};_fffa .T =_bbfa .Get ("\u0054");_fffa .Movie =_bbfa .Get ("\u004d\u006f\u0076i\u0065");_fffa .A =_bbfa .Get ("\u0041");return &_fffa ,nil ;};func (_facc *DSS )generateHashMaps ()error {_afdf ,_ddcc :=_facc .generateHashMap (_facc .Certs );if _ddcc !=nil {return _ddcc ;};_gddbg ,_ddcc :=_facc .generateHashMap (_facc .OCSPs );if _ddcc !=nil {return _ddcc ;};_ebbde ,_ddcc :=_facc .generateHashMap (_facc .CRLs );if _ddcc !=nil {return _ddcc ;};_facc ._gbad =_afdf ;_facc ._aead =_gddbg ;_facc ._befd =_ebbde ;return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bed *PdfColorspaceDeviceCMYK )ToPdfObject ()_dbc .PdfObject {return _dbc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// IsCID returns true if the underlying font is CID.
func (_bbgg *PdfFont )IsCID ()bool {return _bbgg .baseFields ().isCIDFont ()};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_agegf *PdfReader )GetObjectNums ()[]int {return _agegf ._efgcc .GetObjectNums ()};

// Items returns all children outline items.
func (_gebdg *Outline )Items ()[]*OutlineItem {return _gebdg .Entries };func (_bdgcd *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fgaeb :=_bdgcd ._gadcb ;_fgaeb !=nil {return _fgaeb ;};return _bdgcd ._cbacf ;};

// ToPdfObject implements interface PdfModel.
func (_dde *PdfActionHide )ToPdfObject ()_dbc .PdfObject {_dde .PdfAction .ToPdfObject ();_cgcc :=_dde ._ff ;_gebf :=_cgcc .PdfObject .(*_dbc .PdfObjectDictionary );_gebf .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeHide )));_gebf .SetIfNotNil ("\u0054",_dde .T );_gebf .SetIfNotNil ("\u0048",_dde .H );return _cgcc ;};func (_afabb *PdfReader )buildPageList (_babg *_dbc .PdfIndirectObject ,_dggc *_dbc .PdfIndirectObject ,_dffef map[_dbc .PdfObject ]struct{})error {if _babg ==nil {return nil ;};if _ ,_efcfb :=_dffef [_babg ];_efcfb {_gge .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_babg .ObjectNumber );return nil ;};_dffef [_babg ]=struct{}{};_gfcgb ,_ccbf :=_babg .PdfObject .(*_dbc .PdfObjectDictionary );if !_ccbf {return _ge .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_efeae ,_ccbf :=(*_gfcgb ).Get ("\u0054\u0079\u0070\u0065").(*_dbc .PdfObjectName );if !_ccbf {if _gfcgb .Get ("\u004b\u0069\u0064\u0073")==nil {return _ge .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gge .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_efeae =_dbc .MakeName ("\u0050\u0061\u0067e\u0073");_gfcgb .Set ("\u0054\u0079\u0070\u0065",_efeae );};_gge .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_efeae ,_babg );if *_efeae =="\u0050\u0061\u0067\u0065"{_ffgae ,_cbdfc :=_afabb .newPdfPageFromDict (_gfcgb );if _cbdfc !=nil {return _cbdfc ;};_ffgae .setContainer (_babg );if _dggc !=nil {_gfcgb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dggc );};_afabb ._afege =append (_afabb ._afege ,_babg );_afabb .PageList =append (_afabb .PageList ,_ffgae );return nil ;};if *_efeae !="\u0050\u0061\u0067e\u0073"{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_efeae );return _ge .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _dggc !=nil {_gfcgb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dggc );};if !_afabb ._fcbf {_cgfgd :=_afabb .traverseObjectData (_babg );if _cgfgd !=nil {return _cgfgd ;};};_babdf ,_fcaad :=_afabb ._efgcc .Resolve (_gfcgb .Get ("\u004b\u0069\u0064\u0073"));if _fcaad !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fcaad ;};var _ebfgb *_dbc .PdfObjectArray ;_ebfgb ,_ccbf =_babdf .(*_dbc .PdfObjectArray );if !_ccbf {_gdaabb ,_ddgcg :=_babdf .(*_dbc .PdfIndirectObject );if !_ddgcg {return _ge .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebfgb ,_ccbf =_gdaabb .PdfObject .(*_dbc .PdfObjectArray );if !_ccbf {return _ge .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gge .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ebfgb );for _ddbe ,_ggge :=range _ebfgb .Elements (){_dcceaa ,_fgace :=_dbc .GetIndirect (_ggge );if !_fgace {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dcceaa );return _ge .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebfgb .Set (_ddbe ,_dcceaa );_fcaad =_afabb .buildPageList (_dcceaa ,_babg ,_dffef );if _fcaad !=nil {return _fcaad ;};};return nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gbbge *PdfPageResources )GenerateXObjectName ()_dbc .PdfObjectName {_edac :=1;for {_bdgfg :=_dbc .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_edac ));if !_gbbge .HasXObjectByName (*_bdgfg ){return *_bdgfg ;};_edac ++;};};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bbfgd *PdfWriter )AddPage (page *PdfPage )error {const _dgdeb ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_aecca (page );_abgd :=page .ToPdfObject ();_gge .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_gge .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_abgd );_egcfa ,_ebbcd :=_dbc .GetIndirect (_abgd );if !_ebbcd {return _ge .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_gge .Log .Trace ("\u0025\u0073",_egcfa );_gge .Log .Trace ("\u0025\u0073",_egcfa .PdfObject );_gcdge ,_ebbcd :=_dbc .GetDict (_egcfa .PdfObject );if !_ebbcd {return _ge .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_aefa ,_ebbcd :=_dbc .GetName (_gcdge .Get ("\u0054\u0079\u0070\u0065"));if !_ebbcd {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gcdge .Get ("\u0054\u0079\u0070\u0065"));};if _aefa .String ()!="\u0050\u0061\u0067\u0065"{return _ge .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dfbge :=[]_dbc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_fgbfg ,_fdbc :=_dbc .GetIndirect (_gcdge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gge .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gcdge .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fdbc );for _fdbc {_gge .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgbfg );_cfegb ,_gddgg :=_dbc .GetDict (_fgbfg .PdfObject );if !_gddgg {return _ge .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_eedab :=range _dfbge {_gge .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eedab );if _gcdge .Get (_eedab )!=nil {_gge .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fbfae :=_cfegb .Get (_eedab );_fbfae !=nil {_gge .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eedab );_gcdge .Set (_eedab ,_fbfae );};};_fgbfg ,_fdbc =_dbc .GetIndirect (_cfegb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gge .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cfegb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gge .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_gcdge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbfgd ._ggcdf );_egcfa .PdfObject =_gcdge ;_acegc ,_ebbcd :=_dbc .GetDict (_bbfgd ._ggcdf .PdfObject );if !_ebbcd {return _ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_abeaf ,_ebbcd :=_dbc .GetArray (_acegc .Get ("\u004b\u0069\u0064\u0073"));if !_ebbcd {return _ge .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_abeaf .Append (_egcfa );_bbfgd ._ccfgc [_gcdge ]=struct{}{};_cacba ,_ebbcd :=_dbc .GetInt (_acegc .Get ("\u0043\u006f\u0075n\u0074"));if !_ebbcd {return _ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_cacba =*_cacba +1;if page ._cfeea ==nil {_cfbb :=_gc .Track (_bbfgd ._gefbb ,_dgdeb );if _cfbb !=nil {return _cfbb ;};}else {_dccag :=_gc .Track (page ._cfeea ._bggcd ,_dgdeb );if _dccag !=nil {return _dccag ;};};_bbfgd .addObject (_egcfa );_gfaee :=_bbfgd .addObjects (_gcdge );if _gfaee !=nil {return _gfaee ;};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bacef *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_dbag :=_bee .NewReader (img .getBase ());_faaa :=_ggd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_adff :=_bee .NewWriter (_faaa );_cbddg :=_bc .Pow (2,float64 (img .BitsPerComponent ))-1;_bgga :=make ([]uint32 ,3);var (_egab error ;_bcf ,_fcgb ,_bbfb ,_egaf ,_gbbd ,_fgagg float64 ;);for {_egab =_dbag .ReadSamples (_bgga );if _egab ==_ec .EOF {break ;}else if _egab !=nil {return img ,_egab ;};_bcf =float64 (_bgga [0])/_cbddg ;_fcgb =float64 (_bgga [1])/_cbddg ;_bbfb =float64 (_bgga [2])/_cbddg ;_egaf =_bacef .Matrix [0]*_bc .Pow (_bcf ,_bacef .Gamma [0])+_bacef .Matrix [3]*_bc .Pow (_fcgb ,_bacef .Gamma [1])+_bacef .Matrix [6]*_bc .Pow (_bbfb ,_bacef .Gamma [2]);_gbbd =_bacef .Matrix [1]*_bc .Pow (_bcf ,_bacef .Gamma [0])+_bacef .Matrix [4]*_bc .Pow (_fcgb ,_bacef .Gamma [1])+_bacef .Matrix [7]*_bc .Pow (_bbfb ,_bacef .Gamma [2]);_fgagg =_bacef .Matrix [2]*_bc .Pow (_bcf ,_bacef .Gamma [0])+_bacef .Matrix [5]*_bc .Pow (_fcgb ,_bacef .Gamma [1])+_bacef .Matrix [8]*_bc .Pow (_bbfb ,_bacef .Gamma [2]);_bcf =3.240479*_egaf +-1.537150*_gbbd +-0.498535*_fgagg ;_fcgb =-0.969256*_egaf +1.875992*_gbbd +0.041556*_fgagg ;_bbfb =0.055648*_egaf +-0.204043*_gbbd +1.057311*_fgagg ;_bcf =_bc .Min (_bc .Max (_bcf ,0),1.0);_fcgb =_bc .Min (_bc .Max (_fcgb ,0),1.0);_bbfb =_bc .Min (_bc .Max (_bbfb ,0),1.0);_bgga [0]=uint32 (_bcf *_cbddg );_bgga [1]=uint32 (_fcgb *_cbddg );_bgga [2]=uint32 (_bbfb *_cbddg );if _egab =_adff .WriteSamples (_bgga );_egab !=nil {return img ,_egab ;};};return _dfddd (&_faaa ),nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_fgeb *PdfFunctionType3 )ToPdfObject ()_dbc .PdfObject {_aagce :=_dbc .MakeDict ();_aagce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dbc .MakeInteger (3));_caeda :=&_dbc .PdfObjectArray {};for _ ,_eefg :=range _fgeb .Domain {_caeda .Append (_dbc .MakeFloat (_eefg ));};_aagce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_caeda );if _fgeb .Range !=nil {_bcgfg :=&_dbc .PdfObjectArray {};for _ ,_cebc :=range _fgeb .Range {_bcgfg .Append (_dbc .MakeFloat (_cebc ));};_aagce .Set ("\u0052\u0061\u006eg\u0065",_bcgfg );};if _fgeb .Functions !=nil {_dabaa :=&_dbc .PdfObjectArray {};for _ ,_cdac :=range _fgeb .Functions {_dabaa .Append (_cdac .ToPdfObject ());};_aagce .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_dabaa );};if _fgeb .Bounds !=nil {_gfdbcd :=&_dbc .PdfObjectArray {};for _ ,_eccd :=range _fgeb .Bounds {_gfdbcd .Append (_dbc .MakeFloat (_eccd ));};_aagce .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gfdbcd );};if _fgeb .Encode !=nil {_fcag :=&_dbc .PdfObjectArray {};for _ ,_ccfag :=range _fgeb .Encode {_fcag .Append (_dbc .MakeFloat (_ccfag ));};_aagce .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_fcag );};if _fgeb ._fdge !=nil {_fgeb ._fdge .PdfObject =_aagce ;return _fgeb ._fdge ;};return _aagce ;};func _fbdfa ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _afgge };

// ToPdfObject implements interface PdfModel.
func (_cbd *PdfActionLaunch )ToPdfObject ()_dbc .PdfObject {_cbd .PdfAction .ToPdfObject ();_bbb :=_cbd ._ff ;_egf :=_bbb .PdfObject .(*_dbc .PdfObjectDictionary );_egf .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeLaunch )));if _cbd .F !=nil {_egf .Set ("\u0046",_cbd .F .ToPdfObject ());};_egf .SetIfNotNil ("\u0057\u0069\u006e",_cbd .Win );_egf .SetIfNotNil ("\u004d\u0061\u0063",_cbd .Mac );_egf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cbd .Unix );_egf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cbd .NewWindow );return _bbb ;};func (_ebbdb *pdfFontType0 )bytesToCharcodes (_fgacd []byte )([]_cg .CharCode ,bool ){if _ebbdb ._bfad ==nil {return nil ,false ;};_bffc ,_deabg :=_ebbdb ._bfad .BytesToCharcodes (_fgacd );if !_deabg {return nil ,false ;};_edfc :=make ([]_cg .CharCode ,len (_bffc ));for _ccecc ,_daace :=range _bffc {_edfc [_ccecc ]=_cg .CharCode (_daace );};return _edfc ,true ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_gbfa :=NewPdfAnnotation ();_cbb :=&PdfAnnotationPolyLine {};_cbb .PdfAnnotation =_gbfa ;_cbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbfa .SetContext (_cbb );return _cbb ;};func _cccb (_gbcd *_dbc .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dead :=&PdfFieldChoice {};_dead .Opt ,_ =_dbc .GetArray (_gbcd .Get ("\u004f\u0070\u0074"));_dead .TI ,_ =_dbc .GetInt (_gbcd .Get ("\u0054\u0049"));_dead .I ,_ =_dbc .GetArray (_gbcd .Get ("\u0049"));return _dead ,nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dff :=NewPdfAnnotation ();_bgf :=&PdfAnnotationStrikeOut {};_bgf .PdfAnnotation =_dff ;_bgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dff .SetContext (_bgf );return _bgf ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_efadf *PdfRectangle )Normalize (){if _efadf .Llx > _efadf .Urx {_efadf .Llx ,_efadf .Urx =_efadf .Urx ,_efadf .Llx ;};if _efadf .Lly > _efadf .Ury {_efadf .Lly ,_efadf .Ury =_efadf .Ury ,_efadf .Lly ;};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _dbc .PdfObject ;IC _dbc .PdfObject ;BE _dbc .PdfObject ;RD _dbc .PdfObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_abdab *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _abdab .fill (provider ,appGen );};

// ToPdfObject returns the PDF representation of the page resources.
func (_ggbfb *PdfPageResources )ToPdfObject ()_dbc .PdfObject {_dcdef :=_ggbfb ._gddga ;_dcdef .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggbfb .ExtGState );if _ggbfb ._agbga !=nil {_ggbfb .ColorSpace =_ggbfb ._agbga .ToPdfObject ();};_dcdef .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ggbfb .ColorSpace );_dcdef .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ggbfb .Pattern );_dcdef .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggbfb .Shading );_dcdef .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ggbfb .XObject );_dcdef .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ggbfb .Font );_dcdef .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ggbfb .ProcSet );_dcdef .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ggbfb .Properties );return _dcdef ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// HasExtGState checks whether a font is defined by the specified keyName.
func (_efdde *PdfPageResources )HasExtGState (keyName _dbc .PdfObjectName )bool {_ ,_ffgbb :=_efdde .GetFontByName (keyName );return _ffgbb ;};func _cfcag (_acfe _dbc .PdfObject )(map[_cg .CharCode ]float64 ,error ){if _acfe ==nil {return nil ,nil ;};_baaf ,_efceg :=_dbc .GetArray (_acfe );if !_efceg {return nil ,nil ;};_fccc :=map[_cg .CharCode ]float64 {};_fdac :=_baaf .Len ();for _bfeac :=0;_bfeac < _fdac -1;_bfeac ++{_cebdg :=_dbc .TraceToDirectObject (_baaf .Get (_bfeac ));_fecaa ,_dfed :=_dbc .GetIntVal (_cebdg );if !_dfed {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_bfeac ,_cebdg );};_bfeac ++;if _bfeac > _fdac -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baaf );};_cfcd :=_dbc .TraceToDirectObject (_baaf .Get (_bfeac ));switch _cfcd .(type ){case *_dbc .PdfObjectArray :_bcda ,_ :=_dbc .GetArray (_cfcd );if _dcbe ,_gadcc :=_bcda .ToFloat64Array ();_gadcc ==nil {for _acda :=0;_acda < len (_dcbe );_acda ++{_fccc [_cg .CharCode (_fecaa +_acda )]=_dcbe [_acda ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bfeac ,_cfcd );};case *_dbc .PdfObjectInteger :_bcegb ,_gcbb :=_dbc .GetIntVal (_cfcd );if !_gcbb {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bfeac ,_cfcd );};_bfeac ++;if _bfeac > _fdac -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_baaf );};_gefd :=_baaf .Get (_bfeac );_bcaab ,_gdaabc :=_dbc .GetNumberAsFloat (_gefd );if _gdaabc !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bfeac ,_gefd );};for _daaaf :=_fecaa ;_daaaf <=_bcegb ;_daaaf ++{_fccc [_cg .CharCode (_daaaf )]=_bcaab ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bfeac ,_cfcd );};};return _fccc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfAction )ToPdfObject ()_dbc .PdfObject {_cf :=_ea ._ff ;_dg :=_cf .PdfObject .(*_dbc .PdfObjectDictionary );_dg .Clear ();_dg .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_dg .SetIfNotNil ("\u0053",_ea .S );_dg .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ea .Next );return _cf ;};

// B returns the value of the B component of the color.
func (_feca *PdfColorCalRGB )B ()float64 {return _feca [1]};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_egce *Image )ToGoImage ()(_fe .Image ,error ){_gge .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dgde ,_fbdgg :=_ggd .NewImage (int (_egce .Width ),int (_egce .Height ),int (_egce .BitsPerComponent ),_egce .ColorComponents ,_egce .Data ,_egce ._gaaea ,_egce ._fgabe );if _fbdgg !=nil {return nil ,_fbdgg ;};return _dgde ,nil ;};func _gddde (_cggf *_dbc .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cfgagf :=&PdfTilingPattern {};_cbebea :=_cggf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _cbebea ==nil {_gge .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fefgf ,_dbbf :=_cbebea .(*_dbc .PdfObjectInteger );if !_dbbf {_gge .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cbebea );return nil ,_dbc .ErrTypeError ;};_cfgagf .PaintType =_fefgf ;_cbebea =_cggf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cbebea ==nil {_gge .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cegae ,_dbbf :=_cbebea .(*_dbc .PdfObjectInteger );if !_dbbf {_gge .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbebea );return nil ,_dbc .ErrTypeError ;};_cfgagf .TilingType =_cegae ;_cbebea =_cggf .Get ("\u0042\u0042\u006f\u0078");if _cbebea ==nil {_gge .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbebea =_dbc .TraceToDirectObject (_cbebea );_dddb ,_dbbf :=_cbebea .(*_dbc .PdfObjectArray );if !_dbbf {_gge .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbebea );return nil ,_dbc .ErrTypeError ;};_daaga ,_egaff :=NewPdfRectangle (*_dddb );if _egaff !=nil {_gge .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_egaff );return nil ,_egaff ;};_cfgagf .BBox =_daaga ;_cbebea =_cggf .Get ("\u0058\u0053\u0074e\u0070");if _cbebea ==nil {_gge .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dgaa ,_egaff :=_dbc .GetNumberAsFloat (_cbebea );if _egaff !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dgaa );return nil ,_egaff ;};_cfgagf .XStep =_dbc .MakeFloat (_dgaa );_cbebea =_cggf .Get ("\u0059\u0053\u0074e\u0070");if _cbebea ==nil {_gge .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_begfg ,_egaff :=_dbc .GetNumberAsFloat (_cbebea );if _egaff !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_begfg );return nil ,_egaff ;};_cfgagf .YStep =_dbc .MakeFloat (_begfg );_cbebea =_cggf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cbebea ==nil {_gge .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cggf ,_dbbf =_dbc .TraceToDirectObject (_cbebea ).(*_dbc .PdfObjectDictionary );if !_dbbf {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cbebea );};_afgg ,_egaff :=NewPdfPageResourcesFromDict (_cggf );if _egaff !=nil {return nil ,_egaff ;};_cfgagf .Resources =_afgg ;if _gcgc :=_cggf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gcgc !=nil {_gfeec ,_gfga :=_gcgc .(*_dbc .PdfObjectArray );if !_gfga {_gge .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcgc );return nil ,_dbc .ErrTypeError ;};_cfgagf .Matrix =_gfeec ;};return _cfgagf ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bbbef *PdfFont )GetCharMetrics (code _cg .CharCode )(CharMetrics ,bool ){var _dfbc _aca .CharMetrics ;switch _ggff :=_bbbef ._ceef .(type ){case *pdfFontSimple :if _fgaef ,_beed :=_ggff .GetCharMetrics (code );_beed {return _fgaef ,_beed ;};case *pdfFontType0 :if _geaf ,_adgd :=_ggff .GetCharMetrics (code );_adgd {return _geaf ,_adgd ;};case *pdfCIDFontType0 :if _fecd ,_gegfa :=_ggff .GetCharMetrics (code );_gegfa {return _fecd ,_gegfa ;};case *pdfCIDFontType2 :if _affee ,_cfad :=_ggff .GetCharMetrics (code );_cfad {return _affee ,_cfad ;};default:_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bbbef ._ceef );return _dfbc ,false ;};if _gabg ,_gaeb :=_bbbef .GetFontDescriptor ();_gaeb ==nil &&_gabg !=nil {return _aca .CharMetrics {Wx :_gabg ._edfdb },true ;};_gge .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bbbef );return _dfbc ,false ;};func (_agea *PdfReader )newPdfAnnotationWidgetFromDict (_baf *_dbc .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dabd :=PdfAnnotationWidget {};_dabd .H =_baf .Get ("\u0048");_dabd .MK =_baf .Get ("\u004d\u004b");_dabd .A =_baf .Get ("\u0041");_dabd .AA =_baf .Get ("\u0041\u0041");_dabd .BS =_baf .Get ("\u0042\u0053");_dabd .Parent =_baf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dabd ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dcda *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ccef ,_caff :=range _dcda ._gaaea {_dcda ._gaaea [_ccef ]=mapFunc (_caff );};};func (_gfafg *PdfReader )resolveReference (_bcbed *_dbc .PdfObjectReference )(_dbc .PdfObject ,bool ,error ){_cgbaa ,_ffgg :=_gfafg ._efgcc .ObjCache [int (_bcbed .ObjectNumber )];if !_ffgg {_gge .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bcbed );_fgdba ,_gcfecf :=_gfafg ._efgcc .LookupByReference (*_bcbed );if _gcfecf !=nil {return nil ,false ,_gcfecf ;};_gfafg ._efgcc .ObjCache [int (_bcbed .ObjectNumber )]=_fgdba ;return _fgdba ,false ,nil ;};return _cgbaa ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aec *PdfAnnotationStrikeOut )ToPdfObject ()_dbc .PdfObject {_aec .PdfAnnotation .ToPdfObject ();_cbec :=_aec ._gef ;_cgccg :=_cbec .PdfObject .(*_dbc .PdfObjectDictionary );_aec .PdfAnnotationMarkup .appendToPdfDictionary (_cgccg );_cgccg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_cgccg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aec .QuadPoints );return _cbec ;};func (_fcbb *PdfReader )newPdfActionGotoRFromDict (_adcg *_dbc .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fcda ,_ceg :=_cgg (_adcg .Get ("\u0046"));if _ceg !=nil {return nil ,_ceg ;};return &PdfActionGoToR {D :_adcg .Get ("\u0044"),NewWindow :_adcg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fcda },nil ;};

// ToInteger convert to an integer format.
func (_caed *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_geeb :=_bc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_geeb *_caed .C ()),uint32 (_geeb *_caed .M ()),uint32 (_geeb *_caed .Y ()),uint32 (_geeb *_caed .K ())};};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bacgd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// Items returns all children outline items.
func (_cgcba *OutlineItem )Items ()[]*OutlineItem {return _cgcba .Entries };func (_ebce *PdfFont )baseFields ()*fontCommon {if _ebce ._ceef ==nil {_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _ebce ._ceef .baseFields ();};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_gfeb *Image )Resample (targetBitsPerComponent int64 ){if _gfeb .BitsPerComponent ==targetBitsPerComponent {return ;};_fgbee :=_gfeb .GetSamples ();if targetBitsPerComponent < _gfeb .BitsPerComponent {_eadb :=_gfeb .BitsPerComponent -targetBitsPerComponent ;for _fdgd :=range _fgbee {_fgbee [_fdgd ]>>=uint (_eadb );};}else if targetBitsPerComponent > _gfeb .BitsPerComponent {_gbfgb :=targetBitsPerComponent -_gfeb .BitsPerComponent ;for _cfgf :=range _fgbee {_fgbee [_cfgf ]<<=uint (_gbfgb );};};_gfeb .BitsPerComponent =targetBitsPerComponent ;if _gfeb .BitsPerComponent < 8{_gfeb .resampleLowBits (_fgbee );return ;};_dabfa :=_ggd .BytesPerLine (int (_gfeb .Width ),int (_gfeb .BitsPerComponent ),_gfeb .ColorComponents );_eeefd :=make ([]byte ,_dabfa *int (_gfeb .Height ));var (_cefc ,_fgbfc ,_eadda ,_gcba int ;_faga uint32 ;);for _eadda =0;_eadda < int (_gfeb .Height );_eadda ++{_cefc =_eadda *_dabfa ;_fgbfc =(_eadda +1)*_dabfa -1;_ggegf :=_bee .ResampleUint32 (_fgbee [_cefc :_fgbfc ],int (targetBitsPerComponent ),8);for _gcba ,_faga =range _ggegf {_eeefd [_gcba +_cefc ]=byte (_faga );};};_gfeb .Data =_eeefd ;};

// ToPdfObject implements interface PdfModel.
func (_edgc *PdfAnnotationStamp )ToPdfObject ()_dbc .PdfObject {_edgc .PdfAnnotation .ToPdfObject ();_ddec :=_edgc ._gef ;_fade :=_ddec .PdfObject .(*_dbc .PdfObjectDictionary );_edgc .PdfAnnotationMarkup .appendToPdfDictionary (_fade );_fade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053\u0074\u0061m\u0070"));_fade .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edgc .Name );return _ddec ;};func _bgag (_aaaea string )(map[_cg .CharCode ]_cg .GlyphName ,error ){_fecac :=_ab .Split (_aaaea ,"\u000a");_dafcd :=make (map[_cg .CharCode ]_cg .GlyphName );for _ ,_ggdg :=range _fecac {_aegfd :=_ecaa .FindStringSubmatch (_ggdg );if _aegfd ==nil {continue ;};_gcfee ,_bcaga :=_aegfd [1],_aegfd [2];_fdaec ,_dbdee :=_gb .Atoi (_gcfee );if _dbdee !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ggdg );return nil ,_dbc .ErrTypeError ;};_dafcd [_cg .CharCode (_fdaec )]=_cg .GlyphName (_bcaga );};_gge .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dafcd );return _dafcd ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _f .Time ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_bbfadf =modifiedDate ;};

// Height returns the height of `rect`.
func (_gdfcc *PdfRectangle )Height ()float64 {return _bc .Abs (_gdfcc .Ury -_gdfcc .Lly )};func (_acdd *DSS )add (_dged *[]*_dbc .PdfObjectStream ,_febe map[string ]*_dbc .PdfObjectStream ,_aefg [][]byte )([]*_dbc .PdfObjectStream ,error ){_afbgfe :=make ([]*_dbc .PdfObjectStream ,0,len (_aefg ));for _ ,_dacg :=range _aefg {_eggb ,_beadf :=_fbfa (_dacg );if _beadf !=nil {return nil ,_beadf ;};_ccab ,_cbfba :=_febe [string (_eggb )];if !_cbfba {_ccab ,_beadf =_dbc .MakeStream (_dacg ,_dbc .NewRawEncoder ());if _beadf !=nil {return nil ,_beadf ;};_febe [string (_eggb )]=_ccab ;*_dged =append (*_dged ,_ccab );};_afbgfe =append (_afbgfe ,_ccab );};return _afbgfe ,nil ;};

// Encoder returns the font's text encoder.
func (_fbbc *pdfFontSimple )Encoder ()_cg .TextEncoder {if _fbbc ._cggaf !=nil {return _fbbc ._cggaf ;};if _fbbc ._gdbb !=nil {return _fbbc ._gdbb ;};_baccc ,_ :=_cg .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _baccc ;};func (_adgad *PdfWriter )updateObjectNumbers (){_gcbaf :=_adgad .ObjNumOffset ;_dbbbb :=0;for _ ,_eabed :=range _adgad ._cded {_bdbcf :=int64 (_dbbbb +1+_gcbaf );_aeafe :=true ;if _adgad ._edegf {if _gcbcd ,_abdce :=_adgad ._bdaf [_eabed ];_abdce {_bdbcf =_gcbcd ;_aeafe =false ;};};switch _cfadg :=_eabed .(type ){case *_dbc .PdfIndirectObject :_cfadg .ObjectNumber =_bdbcf ;_cfadg .GenerationNumber =0;case *_dbc .PdfObjectStream :_cfadg .ObjectNumber =_bdbcf ;_cfadg .GenerationNumber =0;case *_dbc .PdfObjectStreams :_cfadg .ObjectNumber =_bdbcf ;_cfadg .GenerationNumber =0;default:_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cfadg );continue ;};if _aeafe {_dbbbb ++;};};_gdgcc :=func (_gffbc _dbc .PdfObject )int64 {switch _ceefc :=_gffbc .(type ){case *_dbc .PdfIndirectObject :return _ceefc .ObjectNumber ;case *_dbc .PdfObjectStream :return _ceefc .ObjectNumber ;case *_dbc .PdfObjectStreams :return _ceefc .ObjectNumber ;};return 0;};_ag .SliceStable (_adgad ._cded ,func (_adfbd ,_egfdb int )bool {return _gdgcc (_adgad ._cded [_adfbd ])< _gdgcc (_adgad ._cded [_egfdb ])});};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cebf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcaa ,_gdfd :=_dbc .GetNumbersAsFloat (objects );if _gdfd !=nil {return nil ,_gdfd ;};return _cebf .ColorFromFloats (_gcaa );};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_dbdeg *PdfPattern )GetContext ()PdfModel {return _dbdeg ._dabbe };

// ColorToRGB converts gray -> rgb for a single color component.
func (_ggfg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gddb ,_aedg :=color .(*PdfColorDeviceGray );if !_aedg {_gge .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gddb ),float64 (*_gddb ),float64 (*_gddb )),nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _dbc .PdfObject ;};func (_fba *PdfReader )newPdfActionSoundFromDict (_gdd *_dbc .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gdd .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gdd .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gdd .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gdd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gdd .Get ("\u004d\u0069\u0078")},nil ;};

// Val returns the value of the color.
func (_feee *PdfColorCalGray )Val ()float64 {return float64 (*_feee )};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bd *PdfAction )GetContext ()PdfModel {if _bd ==nil {return nil ;};return _bd ._df ;};

// ToPdfObject implements interface PdfModel.
func (_bebd *PdfAnnotationText )ToPdfObject ()_dbc .PdfObject {_bebd .PdfAnnotation .ToPdfObject ();_egbg :=_bebd ._gef ;_gfdb :=_egbg .PdfObject .(*_dbc .PdfObjectDictionary );if _bebd .PdfAnnotationMarkup !=nil {_bebd .PdfAnnotationMarkup .appendToPdfDictionary (_gfdb );};_gfdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0054\u0065\u0078\u0074"));_gfdb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bebd .Open );_gfdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bebd .Name );_gfdb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bebd .State );_gfdb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_bebd .StateModel );return _egbg ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _dbc .PdfObject ;Q _dbc .PdfObject ;RC _dbc .PdfObject ;DS _dbc .PdfObject ;CL _dbc .PdfObject ;IT _dbc .PdfObject ;BE _dbc .PdfObject ;RD _dbc .PdfObject ;BS _dbc .PdfObject ;LE _dbc .PdfObject ;};func _dgeab ()_f .Time {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _bbfadf };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ggcfd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_efgbga *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _efgbga ._dfbfe ==nil {_efgbga ._dfbfe =_de .NewPSExecutor (_efgbga .Program );};var _gcdba []_de .PSObject ;for _ ,_bgff :=range xVec {_gcdba =append (_gcdba ,_de .MakeReal (_bgff ));};_eaff ,_fbcf :=_efgbga ._dfbfe .Execute (_gcdba );if _fbcf !=nil {return nil ,_fbcf ;};_efafgc ,_fbcf :=_de .PSObjectArrayToFloat64Array (_eaff );if _fbcf !=nil {return nil ,_fbcf ;};return _efafgc ,nil ;};

// String returns a human readable description of `fontfile`.
func (_gggf *fontFile )String ()string {_afff :="\u005b\u004e\u006f\u006e\u0065\u005d";if _gggf ._bgea !=nil {_afff =_gggf ._bgea .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_gggf ._bdfa ,_afff );};

// ToPdfObject implements interface PdfModel.
func (_agg *PdfActionURI )ToPdfObject ()_dbc .PdfObject {_agg .PdfAction .ToPdfObject ();_fbg :=_agg ._ff ;_bbc :=_fbg .PdfObject .(*_dbc .PdfObjectDictionary );_bbc .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeURI )));_bbc .SetIfNotNil ("\u0055\u0052\u0049",_agg .URI );_bbc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_agg .IsMap );return _fbg ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fdge *_dbc .PdfIndirectObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cgbbc *_dbc .PdfIndirectObject ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_dbc .PdfObjectString ;Q *_dbc .PdfObjectInteger ;DS *_dbc .PdfObjectString ;RV _dbc .PdfObject ;MaxLen *_dbc .PdfObjectInteger ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_egbeb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _dbc .PdfObjectName ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_egcfb :=appender .Reader .DSS ;if _egcfb ==nil {_egcfb =NewDSS ();};if _agefg :=_egcfb .generateHashMaps ();_agefg !=nil {return nil ,_agefg ;};return &LTV {CertClient :_db .NewCertClient (),OCSPClient :_db .NewOCSPClient (),CRLClient :_db .NewCRLClient (),SkipExisting :true ,_dddcb :appender ,_ecbd :_egcfb },nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_bcgff *PdfWriter )copyObject (_bceda _dbc .PdfObject ,_bgeba map[_dbc .PdfObject ]_dbc .PdfObject ,_gcfgbf map[_dbc .PdfObject ]struct{},_fbecd bool )_dbc .PdfObject {_aafaa :=!_bcgff ._edegf &&_gcfgbf !=nil ;if _cgbgff ,_gfdg :=_bgeba [_bceda ];_gfdg {if _aafaa &&!_fbecd {delete (_gcfgbf ,_bceda );};return _cgbgff ;};_cfbga :=_bceda ;switch _bfceb :=_bceda .(type ){case *_dbc .PdfObjectArray :_fffeb :=_dbc .MakeArray ();_cfbga =_fffeb ;_bgeba [_bceda ]=_cfbga ;for _ ,_aaeec :=range _bfceb .Elements (){_fffeb .Append (_bcgff .copyObject (_aaeec ,_bgeba ,_gcfgbf ,_fbecd ));};case *_dbc .PdfObjectStreams :_deedg :=&_dbc .PdfObjectStreams {PdfObjectReference :_bfceb .PdfObjectReference };_cfbga =_deedg ;_bgeba [_bceda ]=_cfbga ;for _ ,_bffa :=range _bfceb .Elements (){_deedg .Append (_bcgff .copyObject (_bffa ,_bgeba ,_gcfgbf ,_fbecd ));};case *_dbc .PdfObjectStream :_ffega :=&_dbc .PdfObjectStream {Stream :_bfceb .Stream ,PdfObjectReference :_bfceb .PdfObjectReference };_cfbga =_ffega ;_bgeba [_bceda ]=_cfbga ;_ffega .PdfObjectDictionary =_bcgff .copyObject (_bfceb .PdfObjectDictionary ,_bgeba ,_gcfgbf ,_fbecd ).(*_dbc .PdfObjectDictionary );case *_dbc .PdfObjectDictionary :var _cefcc bool ;if _aafaa &&!_fbecd {if _abgfe ,_ :=_dbc .GetNameVal (_bfceb .Get ("\u0054\u0079\u0070\u0065"));_abgfe =="\u0050\u0061\u0067\u0065"{_ ,_edag :=_bcgff ._ccfgc [_bfceb ];_fbecd =!_edag ;_cefcc =_fbecd ;};};_cccfd :=_dbc .MakeDict ();_cfbga =_cccfd ;_bgeba [_bceda ]=_cfbga ;for _ ,_gcceg :=range _bfceb .Keys (){_cccfd .Set (_gcceg ,_bcgff .copyObject (_bfceb .Get (_gcceg ),_bgeba ,_gcfgbf ,_fbecd ));};if _cefcc {_cfbga =_dbc .MakeNull ();_fbecd =false ;};case *_dbc .PdfIndirectObject :_ecadgf :=&_dbc .PdfIndirectObject {PdfObjectReference :_bfceb .PdfObjectReference };_cfbga =_ecadgf ;_bgeba [_bceda ]=_cfbga ;_ecadgf .PdfObject =_bcgff .copyObject (_bfceb .PdfObject ,_bgeba ,_gcfgbf ,_fbecd );case *_dbc .PdfObjectString :_bfaaee :=*_bfceb ;_cfbga =&_bfaaee ;_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectName :_acgde :=*_bfceb ;_cfbga =&_acgde ;_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectNull :_cfbga =_dbc .MakeNull ();_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectInteger :_cadgc :=*_bfceb ;_cfbga =&_cadgc ;_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectReference :_bffde :=*_bfceb ;_cfbga =&_bffde ;_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectFloat :_bedbcc :=*_bfceb ;_cfbga =&_bedbcc ;_bgeba [_bceda ]=_cfbga ;case *_dbc .PdfObjectBool :_cagea :=*_bfceb ;_cfbga =&_cagea ;_bgeba [_bceda ]=_cfbga ;case *pdfSignDictionary :_agcfg :=&pdfSignDictionary {PdfObjectDictionary :_dbc .MakeDict (),_bggea :_bfceb ._bggea ,_ecdabg :_bfceb ._ecdabg };_cfbga =_agcfg ;_bgeba [_bceda ]=_cfbga ;for _ ,_edgfc :=range _bfceb .Keys (){_agcfg .Set (_edgfc ,_bcgff .copyObject (_bfceb .Get (_edgfc ),_bgeba ,_gcfgbf ,_fbecd ));};default:_gge .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_bceda );};if _aafaa &&_fbecd {_gcfgbf [_bceda ]=struct{}{};};return _cfbga ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_eba :=NewPdfAction ();_feg :=&PdfActionGoTo3DView {};_feg .PdfAction =_eba ;_eba .SetContext (_feg );return _feg ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _dbc .PdfObject ;Movie _dbc .PdfObject ;A _dbc .PdfObject ;};func (_defef *PdfReader )loadStructure ()error {if _defef ._efgcc .GetCrypter ()!=nil &&!_defef ._efgcc .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_bdce :=_defef ._efgcc .GetTrailer ();if _bdce ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_egdfe ,_bbcge :=_bdce .Get ("\u0052\u006f\u006f\u0074").(*_dbc .PdfObjectReference );if !_bbcge {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bdce );};_aeaa ,_dbgcc :=_defef ._efgcc .LookupByReference (*_egdfe );if _dbgcc !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dbgcc );return _dbgcc ;};_cgbec ,_bbcge :=_aeaa .(*_dbc .PdfIndirectObject );if !_bbcge {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aeaa ,*_bdce );return _ge .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_agfcb ,_bbcge :=(*_cgbec ).PdfObject .(*_dbc .PdfObjectDictionary );if !_bbcge {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cgbec .PdfObject );return _ge .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gge .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_agfcb );_agbea ,_bbcge :=_agfcb .Get ("\u0050\u0061\u0067e\u0073").(*_dbc .PdfObjectReference );if !_bbcge {return _ge .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dgfda ,_dbgcc :=_defef ._efgcc .LookupByReference (*_agbea );if _dbgcc !=nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dbgcc ;};_cecaa ,_bbcge :=_dgfda .(*_dbc .PdfIndirectObject );if !_bbcge {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_gge .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_cecaa );return _ge .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ggdgd ,_bbcge :=_cecaa .PdfObject .(*_dbc .PdfObjectDictionary );if !_bbcge {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_cecaa );return _ge .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ecad ,_bbcge :=_dbc .GetInt (_ggdgd .Get ("\u0043\u006f\u0075n\u0074"));if !_bbcge {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _ge .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bbcge =_dbc .GetName (_ggdgd .Get ("\u0054\u0079\u0070\u0065"));!_bbcge {_gge .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_ggdgd .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0050\u0061\u0067e\u0073"));};_defef ._gcfb =_egdfe ;_defef ._gcaad =_agfcb ;_defef ._ggaee =_ggdgd ;_defef ._cabfa =_cecaa ;_defef ._edfbg =int (*_ecad );_defef ._afege =[]*_dbc .PdfIndirectObject {};_gedff :=map[_dbc .PdfObject ]struct{}{};_dbgcc =_defef .buildPageList (_cecaa ,nil ,_gedff );if _dbgcc !=nil {return _dbgcc ;};_gge .Log .Trace ("\u002d\u002d\u002d");_gge .Log .Trace ("\u0054\u004f\u0043");_gge .Log .Trace ("\u0050\u0061\u0067e\u0073");_gge .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_defef ._afege ),_defef ._afege );_defef ._ffca ,_dbgcc =_defef .loadOutlines ();if _dbgcc !=nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dbgcc );return _dbgcc ;};_defef .AcroForm ,_dbgcc =_defef .loadForms ();if _dbgcc !=nil {return _dbgcc ;};_defef .DSS ,_dbgcc =_defef .loadDSS ();if _dbgcc !=nil {return _dbgcc ;};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_feceg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_feceg .NumInputs {_gge .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_ge .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _feceg ._acgbgb ==nil {_ebdcc :=_feceg .processSamples ();if _ebdcc !=nil {return nil ,_ebdcc ;};};_eaee :=_feceg .Encode ;if _eaee ==nil {_eaee =[]float64 {};for _aeaee :=0;_aeaee < len (_feceg .Size );_aeaee ++{_eaee =append (_eaee ,0);_eaee =append (_eaee ,float64 (_feceg .Size [_aeaee ]-1));};};_dgdbb :=_feceg .Decode ;if _dgdbb ==nil {_dgdbb =_feceg .Range ;};_fceaf :=make ([]int ,len (x ));for _faccg :=0;_faccg < len (x );_faccg ++{_fcfdg :=x [_faccg ];_fcab :=_bc .Min (_bc .Max (_fcfdg ,_feceg .Domain [2*_faccg ]),_feceg .Domain [2*_faccg +1]);_fdgc :=_ggd .LinearInterpolate (_fcab ,_feceg .Domain [2*_faccg ],_feceg .Domain [2*_faccg +1],_eaee [2*_faccg ],_eaee [2*_faccg +1]);_cgceg :=_bc .Min (_bc .Max (_fdgc ,0),float64 (_feceg .Size [_faccg ]-1));_bagec :=int (_bc .Floor (_cgceg +0.5));if _bagec < 0{_bagec =0;}else if _bagec > _feceg .Size [_faccg ]{_bagec =_feceg .Size [_faccg ]-1;};_fceaf [_faccg ]=_bagec ;};_eaggb :=_fceaf [0];for _bdge :=1;_bdge < _feceg .NumInputs ;_bdge ++{_addcd :=_fceaf [_bdge ];for _ddfc :=0;_ddfc < _bdge ;_ddfc ++{_addcd *=_feceg .Size [_ddfc ];};_eaggb +=_addcd ;};_eaggb *=_feceg .NumOutputs ;var _bgbfa []float64 ;for _edefe :=0;_edefe < _feceg .NumOutputs ;_edefe ++{_eccgc :=_eaggb +_edefe ;if _eccgc >=len (_feceg ._acgbgb ){_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_deefa :=_feceg ._acgbgb [_eccgc ];_fccaf :=_ggd .LinearInterpolate (float64 (_deefa ),0,_bc .Pow (2,float64 (_feceg .BitsPerSample )),_dgdbb [2*_edefe ],_dgdbb [2*_edefe +1]);_fdcfa :=_bc .Min (_bc .Max (_fccaf ,_feceg .Range [2*_edefe ]),_feceg .Range [2*_edefe +1]);_bgbfa =append (_bgbfa ,_fdcfa );};return _bgbfa ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_gaeg *modelManager )Register (primitive _dbc .PdfObject ,model PdfModel ){_gaeg ._gdege [model ]=primitive ;_gaeg ._ecgfdb [primitive ]=model ;};func (_dfab *Image )samplesAddPadding (_geee []uint32 )[]uint32 {_acaf :=_ggd .BytesPerLine (int (_dfab .Width ),int (_dfab .BitsPerComponent ),_dfab .ColorComponents )*(8/int (_dfab .BitsPerComponent ));_ffbb :=_acaf *int (_dfab .Height );if len (_geee )==_ffbb {return _geee ;};_abea :=make ([]uint32 ,_ffbb );_cgdeed :=int (_dfab .Width )*_dfab .ColorComponents ;for _gaagee :=0;_gaagee < int (_dfab .Height );_gaagee ++{_dfegd :=_gaagee *int (_dfab .Width );_cddfe :=_gaagee *_acaf ;for _fgec :=0;_fgec < _cgdeed ;_fgec ++{_abea [_cddfe +_fgec ]=_geee [_dfegd +_fgec ];};};return _abea ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gffa *PdfField )SetContext (ctx PdfModel ){_gffa ._cgda =ctx };

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _dbc .PdfObject ;FontFamily _dbc .PdfObject ;FontStretch _dbc .PdfObject ;FontWeight _dbc .PdfObject ;Flags _dbc .PdfObject ;FontBBox _dbc .PdfObject ;ItalicAngle _dbc .PdfObject ;Ascent _dbc .PdfObject ;Descent _dbc .PdfObject ;Leading _dbc .PdfObject ;CapHeight _dbc .PdfObject ;XHeight _dbc .PdfObject ;StemV _dbc .PdfObject ;StemH _dbc .PdfObject ;AvgWidth _dbc .PdfObject ;MaxWidth _dbc .PdfObject ;MissingWidth _dbc .PdfObject ;FontFile _dbc .PdfObject ;FontFile2 _dbc .PdfObject ;FontFile3 _dbc .PdfObject ;CharSet _dbc .PdfObject ;_fcaaea int ;_edfdb float64 ;*fontFile ;_ggcad *_aca .TtfType ;

// Additional entries for CIDFonts
Style _dbc .PdfObject ;Lang _dbc .PdfObject ;FD _dbc .PdfObject ;CIDSet _dbc .PdfObject ;_fedde *_dbc .PdfIndirectObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_beec :=NewPdfAction ();_bae :=&PdfActionSubmitForm {};_bae .PdfAction =_beec ;_beec .SetContext (_bae );return _bae ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bgbdf *PdfField )GetContainingPdfObject ()_dbc .PdfObject {return _bgbdf ._befed };func (_fcge *PdfReader )newPdfAnnotationSquigglyFromDict (_adcgb *_dbc .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_ecgb :=PdfAnnotationSquiggly {};_fefe ,_aada :=_fcge .newPdfAnnotationMarkupFromDict (_adcgb );if _aada !=nil {return nil ,_aada ;};_ecgb .PdfAnnotationMarkup =_fefe ;_ecgb .QuadPoints =_adcgb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ecgb ,nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_dcbfe *LTV )EnableAll (extraCerts []*_gg .Certificate )error {_aaaeb :=_dcbfe ._dddcb ._cdef .AcroForm ;for _ ,_dbfbf :=range _aaaeb .AllFields (){_bfcfb ,_ :=_dbfbf .GetContext ().(*PdfFieldSignature );if _bfcfb ==nil {continue ;};_adgba :=_bfcfb .V ;if _cbgda :=_dcbfe .validateSig (_adgba );_cbgda !=nil {_gge .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cbgda );};if _dafcb :=_dcbfe .Enable (_adgba ,extraCerts );_dafcb !=nil {return _dafcb ;};};return nil ;};func (_cdcbed *PdfSignature )extractChainFromCert ()([]*_gg .Certificate ,error ){var _eece *_dbc .PdfObjectArray ;switch _efccc :=_cdcbed .Cert .(type ){case *_dbc .PdfObjectString :_eece =_dbc .MakeArray (_efccc );case *_dbc .PdfObjectArray :_eece =_efccc ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_efccc );};var _fgcaf _gd .Buffer ;for _ ,_cbdgb :=range _eece .Elements (){_cgfbf ,_bcdb :=_dbc .GetString (_cbdgb );if !_bcdb {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_cbdgb );};if _ ,_gfeed :=_fgcaf .Write (_cgfbf .Bytes ());_gfeed !=nil {return nil ,_gfeed ;};};return _gg .ParseCertificates (_fgcaf .Bytes ());};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fcca *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edde ,_eggae :=_dbc .GetNumbersAsFloat (objects );if _eggae !=nil {return nil ,_eggae ;};return _fcca .ColorFromFloats (_edde );};func (_bdgf fontCommon )isCIDFont ()bool {if _bdgf ._abdbb ==""{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdgf );};_bbbb :=false ;switch _bdgf ._abdbb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bbbb =true ;};_gge .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bbbb ,_bdgf );return _bbbb ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfgdf *XObjectForm )SetContentStream (content []byte ,encoder _dbc .StreamEncoder )error {_gbgff :=content ;if encoder ==nil {if _cfgdf .Filter !=nil {encoder =_cfgdf .Filter ;}else {encoder =_dbc .NewRawEncoder ();};};_ceeag ,_effaf :=encoder .EncodeBytes (_gbgff );if _effaf !=nil {return _effaf ;};_gbgff =_ceeag ;_cfgdf .Stream =_gbgff ;_cfgdf .Filter =encoder ;return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bbbe *PdfColorspaceCalGray )ToPdfObject ()_dbc .PdfObject {_aaee :=&_dbc .PdfObjectArray {};_aaee .Append (_dbc .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cdgf :=_dbc .MakeDict ();if _bbbe .WhitePoint !=nil {_cdgf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dbc .MakeArray (_dbc .MakeFloat (_bbbe .WhitePoint [0]),_dbc .MakeFloat (_bbbe .WhitePoint [1]),_dbc .MakeFloat (_bbbe .WhitePoint [2])));}else {_gge .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bbbe .BlackPoint !=nil {_cdgf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dbc .MakeArray (_dbc .MakeFloat (_bbbe .BlackPoint [0]),_dbc .MakeFloat (_bbbe .BlackPoint [1]),_dbc .MakeFloat (_bbbe .BlackPoint [2])));};_cdgf .Set ("\u0047\u0061\u006dm\u0061",_dbc .MakeFloat (_bbbe .Gamma ));_aaee .Append (_cdgf );if _bbbe ._dfg !=nil {_bbbe ._dfg .PdfObject =_aaee ;return _bbbe ._dfg ;};return _aaee ;};func (_effe *pdfCIDFontType2 )baseFields ()*fontCommon {return &_effe .fontCommon };

// ColorToRGB converts a CalGray color to an RGB color.
func (_bdgc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bead ,_efgb :=color .(*PdfColorCalGray );if !_efgb {_gge .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bead .Val ();X :=_bdgc .WhitePoint [0]*_bc .Pow (ANorm ,_bdgc .Gamma );Y :=_bdgc .WhitePoint [1]*_bc .Pow (ANorm ,_bdgc .Gamma );Z :=_bdgc .WhitePoint [2]*_bc .Pow (ANorm ,_bdgc .Gamma );_cbbe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_afee :=-0.969256*X +1.875992*Y +0.041556*Z ;_fcgf :=0.055648*X +-0.204043*Y +1.057311*Z ;_cbbe =_bc .Min (_bc .Max (_cbbe ,0),1.0);_afee =_bc .Min (_bc .Max (_afee ,0),1.0);_fcgf =_bc .Min (_bc .Max (_fcgf ,0),1.0);return NewPdfColorDeviceRGB (_cbbe ,_afee ,_fcgf ),nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dbc .PdfObject ;IC _dbc .PdfObject ;RO _dbc .PdfObject ;OverlayText _dbc .PdfObject ;Repeat _dbc .PdfObject ;DA _dbc .PdfObject ;Q _dbc .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acbg *PdfColorspaceDeviceGray )ToPdfObject ()_dbc .PdfObject {return _dbc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_fgbe *PdfFont )ToPdfObject ()_dbc .PdfObject {if _fgbe ._ceef ==nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _dbc .MakeNull ();};return _fgbe ._ceef .ToPdfObject ();};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_dbc .PdfObjectArray ;Matrix *_dbc .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cbagd *PdfAcroForm )ToPdfObject ()_dbc .PdfObject {_cgcb :=_cbagd ._abcd ;_bfced :=_cgcb .PdfObject .(*_dbc .PdfObjectDictionary );if _cbagd .Fields !=nil {_bffd :=_dbc .PdfObjectArray {};for _ ,_dbabe :=range *_cbagd .Fields {_dgfcf :=_dbabe .GetContext ();if _dgfcf !=nil {_bffd .Append (_dgfcf .ToPdfObject ());}else {_bffd .Append (_dbabe .ToPdfObject ());};};_bfced .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_bffd );};if _cbagd .NeedAppearances !=nil {_bfced .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cbagd .NeedAppearances );};if _cbagd .SigFlags !=nil {_bfced .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cbagd .SigFlags );};if _cbagd .CO !=nil {_bfced .Set ("\u0043\u004f",_cbagd .CO );};if _cbagd .DR !=nil {_bfced .Set ("\u0044\u0052",_cbagd .DR .ToPdfObject ());};if _cbagd .DA !=nil {_bfced .Set ("\u0044\u0041",_cbagd .DA );};if _cbagd .Q !=nil {_bfced .Set ("\u0051",_cbagd .Q );};if _cbagd .XFA !=nil {_bfced .Set ("\u0058\u0046\u0041",_cbagd .XFA );};return _cgcb ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_aadab *PdfPageResources )SetFontByName (keyName _dbc .PdfObjectName ,obj _dbc .PdfObject )error {if _aadab .Font ==nil {_aadab .Font =_dbc .MakeDict ();};_cfeca ,_bfbf :=_dbc .TraceToDirectObject (_aadab .Font ).(*_dbc .PdfObjectDictionary );if !_bfbf {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dbc .TraceToDirectObject (_aadab .Font ));return _dbc .ErrTypeError ;};_cfeca .Set (keyName ,obj );return nil ;};func _fbfa (_eaagf []byte )([]byte ,error ){_ebfgg :=_a .New ();if _ ,_dfegfe :=_ec .Copy (_ebfgg ,_gd .NewReader (_eaagf ));_dfegfe !=nil {return nil ,_dfegfe ;};return _ebfgg .Sum (nil ),nil ;};func (_dgfdb *pdfFontType0 )subsetRegistered ()error {_fbgae ,_aggge :=_dgfdb .DescendantFont ._ceef .(*pdfCIDFontType2 );if !_aggge {_gge .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_dgfdb .DescendantFont );return nil ;};if _fbgae ==nil {return nil ;};if _fbgae ._gadcb ==nil {_gge .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _dgfdb ._deec ==nil {_gge .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_cgfeb ,_aggge :=_dbc .GetStream (_fbgae ._gadcb .FontFile2 );if !_aggge {_gge .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _ge .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_egcb ,_ceca :=_dbc .DecodeStream (_cgfeb );if _ceca !=nil {_gge .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ceca );return _ceca ;};_cdgfd ,_ceca :=_gbd .Parse (_gd .NewReader (_egcb ));if _ceca !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cgfeb .Stream ));return _ceca ;};var _eggagd []rune ;var _gafcd *_gbd .Font ;switch _bfggf :=_dgfdb ._deec .(type ){case *_cg .TrueTypeFontEncoder :_eggagd =_bfggf .RegisteredRunes ();_gafcd ,_ceca =_cdgfd .SubsetKeepRunes (_eggagd );if _ceca !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceca );return _ceca ;};_bfggf .SubsetRegistered ();case *_cg .IdentityEncoder :_eggagd =_bfggf .RegisteredRunes ();_fgafb :=make ([]_gbd .GlyphIndex ,len (_eggagd ));for _efad ,_ccbgd :=range _eggagd {_fgafb [_efad ]=_gbd .GlyphIndex (_ccbgd );};_gafcd ,_ceca =_cdgfd .SubsetKeepIndices (_fgafb );if _ceca !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceca );return _ceca ;};case _cg .SimpleEncoder :_cebe :=_bfggf .Charcodes ();for _ ,_dbcbb :=range _cebe {_dddd ,_aeadb :=_bfggf .CharcodeToRune (_dbcbb );if !_aeadb {_gge .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_dbcbb );continue ;};_eggagd =append (_eggagd ,_dddd );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_dgfdb ._deec );};var _ggba _gd .Buffer ;_ceca =_gafcd .Write (&_ggba );if _ceca !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceca );return _ceca ;};if _dgfdb ._caga !=nil {_cacgg :=make (map[_ce .CharCode ]rune ,len (_eggagd ));for _ ,_gadeb :=range _eggagd {_gcef ,_ggbfe :=_dgfdb ._deec .RuneToCharcode (_gadeb );if !_ggbfe {continue ;};_cacgg [_ce .CharCode (_gcef )]=_gadeb ;};_dgfdb ._caga =_ce .NewToUnicodeCMap (_cacgg );};_cgfeb ,_ceca =_dbc .MakeStream (_ggba .Bytes (),_dbc .NewFlateEncoder ());if _ceca !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceca );return _ceca ;};_cgfeb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dbc .MakeInteger (int64 (_ggba .Len ())));if _gbba ,_cbeab :=_dbc .GetStream (_fbgae ._gadcb .FontFile2 );_cbeab {*_gbba =*_cgfeb ;}else {_fbgae ._gadcb .FontFile2 =_cgfeb ;};_aacc :=_cfbc ();if len (_dgfdb ._cebb )> 0{_dgfdb ._cebb =_fbgb (_dgfdb ._cebb ,_aacc );};if len (_fbgae ._cebb )> 0{_fbgae ._cebb =_fbgb (_fbgae ._cebb ,_aacc );};if len (_dgfdb ._afda )> 0{_dgfdb ._afda =_fbgb (_dgfdb ._afda ,_aacc );};if _fbgae ._gadcb !=nil {_gdbef ,_dgbba :=_dbc .GetName (_fbgae ._gadcb .FontName );if _dgbba &&len (_gdbef .String ())> 0{_ccce :=_fbgb (_gdbef .String (),_aacc );_fbgae ._gadcb .FontName =_dbc .MakeName (_ccce );};};return nil ;};func _facec (_ccbda *_dbc .PdfIndirectObject )(*PdfOutline ,error ){_acadfe ,_eadae :=_ccbda .PdfObject .(*_dbc .PdfObjectDictionary );if !_eadae {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cefa :=NewPdfOutline ();if _eabdg :=_acadfe .Get ("\u0054\u0079\u0070\u0065");_eabdg !=nil {_gdfcf ,_gedbdb :=_eabdg .(*_dbc .PdfObjectName );if _gedbdb {if *_gdfcf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gdfcf );};};};if _aedgf :=_acadfe .Get ("\u0043\u006f\u0075n\u0074");_aedgf !=nil {_caebf ,_dfff :=_dbc .GetNumberAsInt64 (_aedgf );if _dfff !=nil {return nil ,_dfff ;};_cefa .Count =&_caebf ;};return _cefa ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_dfa *PdfAnnotationLink )SetAction (action *PdfAction ){_dfa ._bge =action ;if action ==nil {_dfa .A =nil ;};};func _daaafc (_cafb _dbc .PdfObject )(*PdfFunctionType2 ,error ){_gdbca :=&PdfFunctionType2 {};var _gfdba *_dbc .PdfObjectDictionary ;if _bebdd ,_eeddea :=_cafb .(*_dbc .PdfIndirectObject );_eeddea {_bfeeb ,_abcda :=_bebdd .PdfObject .(*_dbc .PdfObjectDictionary );if !_abcda {return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdbca ._ggbcb =_bebdd ;_gfdba =_bfeeb ;}else if _gdfgb ,_agacb :=_cafb .(*_dbc .PdfObjectDictionary );_agacb {_gfdba =_gdfgb ;}else {return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gge .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gfdba .String ());_bfcec ,_gffeb :=_dbc .TraceToDirectObject (_gfdba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_dbc .PdfObjectArray );if !_gffeb {_gge .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ge .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bfcec .Len ()< 0||_bfcec .Len ()%2!=0{_gge .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ge .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gege ,_ebdf :=_bfcec .ToFloat64Array ();if _ebdf !=nil {return nil ,_ebdf ;};_gdbca .Domain =_gege ;_bfcec ,_gffeb =_dbc .TraceToDirectObject (_gfdba .Get ("\u0052\u0061\u006eg\u0065")).(*_dbc .PdfObjectArray );if _gffeb {if _bfcec .Len ()< 0||_bfcec .Len ()%2!=0{return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ddgba ,_bebe :=_bfcec .ToFloat64Array ();if _bebe !=nil {return nil ,_bebe ;};_gdbca .Range =_ddgba ;};_bfcec ,_gffeb =_dbc .TraceToDirectObject (_gfdba .Get ("\u0043\u0030")).(*_dbc .PdfObjectArray );if _gffeb {_egeddg ,_daeae :=_bfcec .ToFloat64Array ();if _daeae !=nil {return nil ,_daeae ;};_gdbca .C0 =_egeddg ;};_bfcec ,_gffeb =_dbc .TraceToDirectObject (_gfdba .Get ("\u0043\u0031")).(*_dbc .PdfObjectArray );if _gffeb {_agefa ,_edaec :=_bfcec .ToFloat64Array ();if _edaec !=nil {return nil ,_edaec ;};_gdbca .C1 =_agefa ;};if len (_gdbca .C0 )!=len (_gdbca .C1 ){_gge .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_dbc .ErrRangeError ;};N ,_ebdf :=_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_gfdba .Get ("\u004e")));if _ebdf !=nil {_gge .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gfdba .String ());return nil ,_ebdf ;};_gdbca .N =N ;return _gdbca ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bccbd *PdfPattern )GetContainingPdfObject ()_dbc .PdfObject {return _bccbd ._dfacd };

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _dbc .PdfObject ;};type fontFile struct{_bdfa string ;_gbdb string ;_bgea _cg .SimpleEncoder ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fed :=NewPdfAction ();_gba :=&PdfActionImportData {};_gba .PdfAction =_fed ;_fed .SetContext (_gba );return _gba ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_beeg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_aafe *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_bceade =producer };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bgcc :=&PdfAnnotation {};_bgcc ._gef =_dbc .MakeIndirectObject (_dbc .MakeDict ());return _bgcc ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bbfee *LTV )EnableByName (name string ,extraCerts []*_gg .Certificate )error {_bfabd :=_bbfee ._dddcb ._cdef .AcroForm ;for _ ,_bgbae :=range _bfabd .AllFields (){_ddad ,_ :=_bgbae .GetContext ().(*PdfFieldSignature );if _ddad ==nil {continue ;};if _dggbf :=_ddad .PartialName ();_dggbf !=name {continue ;};return _bbfee .Enable (_ddad .V ,extraCerts );};return nil ;};func (_geab *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_efafge *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dgab :=_efafge .actualFont ();if _dgab ==nil {_gge .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_efafge ._ceef );return _aca .CharMetrics {},false ;};if _gcbdb ,_fcff :=_dgab .GetRuneMetrics (r );_fcff {return _gcbdb ,true ;};if _cgdaa ,_dfda :=_efafge .GetFontDescriptor ();_dfda ==nil &&_cgdaa !=nil {return _aca .CharMetrics {Wx :_cgdaa ._edfdb },true ;};_gge .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efafge );return _aca .CharMetrics {},false ;};func _eeed (_daea *PdfField ,_fbgbf _dbc .PdfObject ){for _ ,_adge :=range _daea .Annotations {_adge .AS =_fbgbf ;_adge .ToPdfObject ();};};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_age :=NewPdfAction ();_ga :=&PdfActionLaunch {};_ga .PdfAction =_age ;_age .SetContext (_ga );return _ga ;};

// ToInteger convert to an integer format.
func (_ddb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_ggfgg :=_bc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ggfgg *_ddb .R ()),uint32 (_ggfgg *_ddb .G ()),uint32 (_ggfgg *_ddb .B ())};};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_aaef :=NewPdfAnnotation ();_gaff :=&PdfAnnotationSound {};_gaff .PdfAnnotation =_aaef ;_gaff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aaef .SetContext (_gaff );return _gaff ;};

// ReplacePage replaces the original page to a new page.
func (_dfc *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_afcf :=pageNum -1;for _cdfg :=range _dfc ._cgedd {if _cdfg ==_afcf {_aadd :=page .Duplicate ();_aecca (_aadd );_dfc ._cgedd [_cdfg ]=_aadd ;};};};

// SetName sets the `Name` field of the signature.
func (_fdbbe *PdfSignature )SetName (name string ){_fdbbe .Name =_dbc .MakeString (name )};func (_fagdg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// GetOptimizer returns current PDF optimizer.
func (_edgfa *PdfWriter )GetOptimizer ()Optimizer {return _edgfa ._dgba };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bdage *PdfPage )GetContainingPdfObject ()_dbc .PdfObject {return _bdage ._aaac };func _fedcf (_efcb *_dbc .PdfObjectDictionary ,_bffcb *fontCommon )(*pdfFontType0 ,error ){_cgbea ,_ggbc :=_dbc .GetArray (_efcb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_ggbc {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bffcb );return nil ,_dbc .ErrRangeError ;};if _cgbea .Len ()!=1{_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cgbea .Len ());return nil ,_dbc .ErrRangeError ;};_ageda ,_aeccb :=_gcdfd (_cgbea .Get (0),false );if _aeccb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_aeccb ,_bffcb );return nil ,_aeccb ;};_aecb :=_daeef (_bffcb );_aecb .DescendantFont =_ageda ;_ffaf ,_ggbc :=_dbc .GetNameVal (_efcb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ggbc {if _ffaf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ffaf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_aecb ._deec =_cg .NewIdentityTextEncoder (_ffaf );}else if _ce .IsPredefinedCMap (_ffaf ){_aecb ._bfad ,_aeccb =_ce .LoadPredefinedCMap (_ffaf );if _aeccb !=nil {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ffaf ,_aeccb );};}else {_gge .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ffaf );};};if _eaccd :=_ageda .baseFields ()._caga ;_eaccd !=nil {if _becg :=_eaccd .Name ();_becg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_becg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_becg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_becg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_aecb ._deec =_cg .NewCMapEncoder (_ffaf ,_aecb ._bfad ,_eaccd );};};return _aecb ,nil ;};func _fgag (_eefd *PdfPage )map[_dbc .PdfObjectName ]_dbc .PdfObject {_ccfd :=make (map[_dbc .PdfObjectName ]_dbc .PdfObject );if _eefd .Resources ==nil {return _ccfd ;};if _eefd .Resources .Font !=nil {if _ccd ,_beeb :=_dbc .GetDict (_eefd .Resources .Font );_beeb {for _ ,_fccd :=range _ccd .Keys (){_ccfd [_fccd ]=_ccd .Get (_fccd );};};};if _eefd .Resources .ExtGState !=nil {if _fbbf ,_dggb :=_dbc .GetDict (_eefd .Resources .ExtGState );_dggb {for _ ,_gffg :=range _fbbf .Keys (){_ccfd [_gffg ]=_fbbf .Get (_gffg );};};};if _eefd .Resources .XObject !=nil {if _fgaf ,_ddgf :=_dbc .GetDict (_eefd .Resources .XObject );_ddgf {for _ ,_adgb :=range _fgaf .Keys (){_ccfd [_adgb ]=_fgaf .Get (_adgb );};};};if _eefd .Resources .Pattern !=nil {if _adcfe ,_gffe :=_dbc .GetDict (_eefd .Resources .Pattern );_gffe {for _ ,_fbge :=range _adcfe .Keys (){_ccfd [_fbge ]=_adcfe .Get (_fbge );};};};if _eefd .Resources .Shading !=nil {if _egga ,_bbda :=_dbc .GetDict (_eefd .Resources .Shading );_bbda {for _ ,_bffb :=range _egga .Keys (){_ccfd [_bffb ]=_egga .Get (_bffb );};};};if _eefd .Resources .ProcSet !=nil {if _cac ,_cacd :=_dbc .GetDict (_eefd .Resources .ProcSet );_cacd {for _ ,_fbag :=range _cac .Keys (){_ccfd [_fbag ]=_cac .Get (_fbag );};};};if _eefd .Resources .Properties !=nil {if _ccde ,_bacaf :=_dbc .GetDict (_eefd .Resources .Properties );_bacaf {for _ ,_cafe :=range _ccde .Keys (){_ccfd [_cafe ]=_ccde .Get (_cafe );};};};return _ccfd ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _dbc .PdfObject ;Name _dbc .PdfObject ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ebbbc *PdfPage )GetPageAsIndirectObject ()*_dbc .PdfIndirectObject {return _ebbbc ._aaac };

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dabbe PdfModel ;_dfacd _dbc .PdfObject ;};

// MergePageWith appends page content to source Pdf file page content.
func (_fcdc *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fbfe :=pageNum -1;var _aeca *PdfPage ;for _fgc ,_acbaa :=range _fcdc ._cgedd {if _fgc ==_fbfe {_aeca =_acbaa ;};};if _aeca ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _aeca ._aaac !=nil &&_aeca ._aaac .GetParser ()==_fcdc ._cdef ._efgcc {_aeca =_aeca .Duplicate ();_fcdc ._cgedd [_fbfe ]=_aeca ;};page =page .Duplicate ();_aecca (page );_edge :=_fgag (_aeca );_bbbdg :=_fgag (page );_edfd :=make (map[_dbc .PdfObjectName ]_dbc .PdfObjectName );for _caae :=range _bbbdg {if _ ,_bbag :=_edge [_caae ];_bbag {for _ebdb :=1;true ;_ebdb ++{_dgbb :=_dbc .PdfObjectName (string (_caae )+_gb .Itoa (_ebdb ));if _ ,_abed :=_edge [_dgbb ];!_abed {_edfd [_caae ]=_dgbb ;break ;};};};};_bgbd ,_efed :=page .GetContentStreams ();if _efed !=nil {return _efed ;};_cef ,_efed :=_aeca .GetContentStreams ();if _efed !=nil {return _efed ;};for _eegd ,_cddc :=range _bgbd {for _cgdc ,_bacc :=range _edfd {_cddc =_ab .Replace (_cddc ,"\u002f"+string (_cgdc ),"\u002f"+string (_bacc ),-1);};_bgbd [_eegd ]=_cddc ;};_cef =append (_cef ,_bgbd ...);if _dae :=_aeca .SetContentStreams (_cef ,_dbc .NewFlateEncoder ());_dae !=nil {return _dae ;};_aeca ._cffa =append (_aeca ._cffa ,page ._cffa ...);if _aeca .Resources ==nil {_aeca .Resources =NewPdfPageResources ();};if page .Resources !=nil {_aeca .Resources .Font =_fcdc .mergeResources (_aeca .Resources .Font ,page .Resources .Font ,_edfd );_aeca .Resources .XObject =_fcdc .mergeResources (_aeca .Resources .XObject ,page .Resources .XObject ,_edfd );_aeca .Resources .Properties =_fcdc .mergeResources (_aeca .Resources .Properties ,page .Resources .Properties ,_edfd );if _aeca .Resources .ProcSet ==nil {_aeca .Resources .ProcSet =page .Resources .ProcSet ;};_aeca .Resources .Shading =_fcdc .mergeResources (_aeca .Resources .Shading ,page .Resources .Shading ,_edfd );_aeca .Resources .ExtGState =_fcdc .mergeResources (_aeca .Resources .ExtGState ,page .Resources .ExtGState ,_edfd );};_dcf ,_efed :=_aeca .GetMediaBox ();if _efed !=nil {return _efed ;};_gage ,_efed :=page .GetMediaBox ();if _efed !=nil {return _efed ;};var _cdgd bool ;if _dcf .Llx > _gage .Llx {_dcf .Llx =_gage .Llx ;_cdgd =true ;};if _dcf .Lly > _gage .Lly {_dcf .Lly =_gage .Lly ;_cdgd =true ;};if _dcf .Urx < _gage .Urx {_dcf .Urx =_gage .Urx ;_cdgd =true ;};if _dcf .Ury < _gage .Ury {_dcf .Ury =_gage .Ury ;_cdgd =true ;};if _cdgd {_aeca .MediaBox =_dcf ;};return nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_dbc .PdfObjectBool ;SigFlags *_dbc .PdfObjectInteger ;CO *_dbc .PdfObjectArray ;DR *PdfPageResources ;DA *_dbc .PdfObjectString ;Q *_dbc .PdfObjectInteger ;XFA _dbc .PdfObject ;_abcd *_dbc .PdfIndirectObject ;};var _bffcd =_fc .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffcbd *PdfShadingType5 )ToPdfObject ()_dbc .PdfObject {_ffcbd .PdfShading .ToPdfObject ();_ecffb ,_bfgga :=_ffcbd .getShadingDict ();if _bfgga !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ffcbd .BitsPerCoordinate !=nil {_ecffb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffcbd .BitsPerCoordinate );};if _ffcbd .BitsPerComponent !=nil {_ecffb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffcbd .BitsPerComponent );};if _ffcbd .VerticesPerRow !=nil {_ecffb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ffcbd .VerticesPerRow );};if _ffcbd .Decode !=nil {_ecffb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffcbd .Decode );};if _ffcbd .Function !=nil {if len (_ffcbd .Function )==1{_ecffb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffcbd .Function [0].ToPdfObject ());}else {_gebfa :=_dbc .MakeArray ();for _ ,_efgeg :=range _ffcbd .Function {_gebfa .Append (_efgeg .ToPdfObject ());};_ecffb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gebfa );};};return _ffcbd ._bdgfb ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_geed *PdfWriter )SetPageLabels (pageLabels _dbc .PdfObject )error {if pageLabels ==nil {return nil ;};_gge .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_geed ._eddef .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _geed .addObjects (pageLabels );};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _dbc .PdfObject ;Popup *PdfAnnotationPopup ;CA _dbc .PdfObject ;RC _dbc .PdfObject ;CreationDate _dbc .PdfObject ;IRT _dbc .PdfObject ;Subj _dbc .PdfObject ;RT _dbc .PdfObject ;IT _dbc .PdfObject ;ExData _dbc .PdfObject ;};

// C returns the value of the cyan component of the color.
func (_eedfa *PdfColorDeviceCMYK )C ()float64 {return _eedfa [0]};var (CourierName =_aca .CourierName ;CourierBoldName =_aca .CourierBoldName ;CourierObliqueName =_aca .CourierObliqueName ;CourierBoldObliqueName =_aca .CourierBoldObliqueName ;HelveticaName =_aca .HelveticaName ;HelveticaBoldName =_aca .HelveticaBoldName ;HelveticaObliqueName =_aca .HelveticaObliqueName ;HelveticaBoldObliqueName =_aca .HelveticaBoldObliqueName ;SymbolName =_aca .SymbolName ;ZapfDingbatsName =_aca .ZapfDingbatsName ;TimesRomanName =_aca .TimesRomanName ;TimesBoldName =_aca .TimesBoldName ;TimesItalicName =_aca .TimesItalicName ;TimesBoldItalicName =_aca .TimesBoldItalicName ;);

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aeaae []byte )(_dcebf int ,_dcgea error );};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_acbdf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_fccae :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dadcf ,_cbefb :=_acbdf .GetNumPages ();if _cbefb !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbefb );return nil ,_cbefb ;};for _ecggf :=1;_ecggf <=_dadcf ;_ecggf ++{_gcfbb ,_dfecd :=_acbdf .GetPage (_ecggf );if _dfecd !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfecd );return nil ,_dfecd ;};if opts .PageCallback !=nil {opts .PageCallback (_ecggf ,_gcfbb );};_dfecd =_fccae .AddPage (_gcfbb );if _dfecd !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfecd );return nil ,_dfecd ;};};_fccae ._ccaec =_acbdf .PdfVersion ().Major ;_fccae ._adaa =_acbdf .PdfVersion ().Minor ;if !opts .SkipInfo {_aeac ,_afdba :=_acbdf .GetPdfInfo ();if _afdba !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afdba );}else {_fccae ._fffe .PdfObject =_aeac .ToPdfObject ();};};if !opts .SkipAcroForm {_dbcbbd :=_fccae .SetForms (_acbdf .AcroForm );if _dbcbbd !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbcbbd );return nil ,_dbcbbd ;};};if !opts .SkipOutlines {_fccae .AddOutlineTree (_acbdf .GetOutlineTree ());};if !opts .SkipOCProperties {_beecc ,_cbgc :=_acbdf .GetOCProperties ();if _cbgc !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbgc );}else {_cbgc =_fccae .SetOCProperties (_beecc );if _cbgc !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbgc );};};};if !opts .SkipPageLabels {_bbbfe ,_afdg :=_acbdf .GetPageLabels ();if _afdg !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afdg );}else {_afdg =_fccae .SetPageLabels (_bbbfe );if _afdg !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afdg );};};};if !opts .SkipNamedDests {_ddefe ,_acgce :=_acbdf .GetNamedDestinations ();if _acgce !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acgce );}else {_acgce =_fccae .SetNamedDestinations (_ddefe );if _acgce !=nil {_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acgce );};};};return &_fccae ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_dbc .PdfObjectArray ;Domain *_dbc .PdfObjectArray ;Function []PdfFunction ;Extend *_dbc .PdfObjectArray ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_dbc .PdfIndirectObject )*PdfOutlineItem {_bgdgg :=PdfOutlineItem {};_bgdgg ._cadfc =&_bgdgg ;_bgdgg .Title =_dbc .MakeString (title );_efgc :=_dbc .MakeArray ();_efgc .Append (page );_efgc .Append (_dbc .MakeName ("\u0046\u0069\u0074"));_bgdgg .Dest =_efgc ;return &_bgdgg ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gecag *PdfReader )GetNamedDestinations ()(_dbc .PdfObject ,error ){_ffda :=_dbc .ResolveReference (_gecag ._gcaad .Get ("\u004e\u0061\u006de\u0073"));if _ffda ==nil {return nil ,nil ;};if !_gecag ._fcbf {_eceef :=_gecag .traverseObjectData (_ffda );if _eceef !=nil {return nil ,_eceef ;};};return _ffda ,nil ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ddbc *PdfWriter )SetOptimizer (optimizer Optimizer ){_ddbc ._dgba =optimizer };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_dbc .PdfObjectArray ;ExtGState _dbc .PdfObject ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _dbc .PdfObject ;Name _dbc .PdfObject ;};func _dbcf (_beadb *_dbc .PdfObjectDictionary )*VRI {_fegd ,_ :=_dbc .GetString (_beadb .Get ("\u0054\u0055"));_gdgd ,_ :=_dbc .GetString (_beadb .Get ("\u0054\u0053"));return &VRI {Cert :_gcdfdg (_beadb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_gcdfdg (_beadb .Get ("\u004f\u0043\u0053\u0050")),CRL :_gcdfdg (_beadb .Get ("\u0043\u0052\u004c")),TU :_fegd ,TS :_gdgd };};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dagc :=&PdfOutline {_bbcgc :_dbc .MakeIndirectObject (_dbc .MakeDict ())};_dagc ._cadfc =_dagc ;return _dagc ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eeaa :=NewPdfAnnotation ();_bgg :=&PdfAnnotationPolygon {};_bgg .PdfAnnotation =_eeaa ;_bgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeaa .SetContext (_bgg );return _bgg ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_eccce *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _eccce ._dabbe .(*PdfShadingPattern );};

// ToPdfObject implements interface PdfModel.
func (_gdcg *PdfAnnotationCircle )ToPdfObject ()_dbc .PdfObject {_gdcg .PdfAnnotation .ToPdfObject ();_dgga :=_gdcg ._gef ;_fga :=_dgga .PdfObject .(*_dbc .PdfObjectDictionary );_gdcg .PdfAnnotationMarkup .appendToPdfDictionary (_fga );_fga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_fga .SetIfNotNil ("\u0042\u0053",_gdcg .BS );_fga .SetIfNotNil ("\u0049\u0043",_gdcg .IC );_fga .SetIfNotNil ("\u0042\u0045",_gdcg .BE );_fga .SetIfNotNil ("\u0052\u0044",_gdcg .RD );return _dgga ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _dbc .PdfObject ;PreserveRB _dbc .PdfObject ;};

// GetPage returns the PdfPage model for the specified page number.
func (_gbgg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gbgg ._efgcc .GetCrypter ()!=nil &&!_gbgg ._efgcc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_gbgg ._afege )< pageNumber {return nil ,_ge .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_cegdd :=pageNumber -1;if _cegdd < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gcbec :=_gbgg .PageList [_cegdd ];return _gcbec ,nil ;};func (_caf *PdfReader )newPdfActionGoTo3DViewFromDict (_bbcb *_dbc .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bbcb .Get ("\u0054\u0041"),V :_bbcb .Get ("\u0056")},nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_dfd *PdfReader )newPdfAnnotationRichMediaFromDict (_cab *_dbc .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_cgdf :=&PdfAnnotationRichMedia {};_cgdf .RichMediaSettings =_cab .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_cgdf .RichMediaContent =_cab .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _cgdf ,nil ;};func (_cgge *PdfReader )newPdfAnnotationMarkupFromDict (_ecbe *_dbc .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_bbbd :=&PdfAnnotationMarkup {};if _gdcb :=_ecbe .Get ("\u0054");_gdcb !=nil {_bbbd .T =_gdcb ;};if _adbg :=_ecbe .Get ("\u0050\u006f\u0070u\u0070");_adbg !=nil {_eefc ,_cfef :=_adbg .(*_dbc .PdfIndirectObject );if !_cfef {if _ ,_fgfe :=_adbg .(*_dbc .PdfObjectNull );!_fgfe {return nil ,_ge .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_cecg ,_ecgf :=_cgge .newPdfAnnotationFromIndirectObject (_eefc );if _ecgf !=nil {return nil ,_ecgf ;};if _cecg !=nil {_ecff ,_cagc :=_cecg ._fgf .(*PdfAnnotationPopup );if !_cagc {return nil ,_ge .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_bbbd .Popup =_ecff ;};};};if _gbbe :=_ecbe .Get ("\u0043\u0041");_gbbe !=nil {_bbbd .CA =_gbbe ;};if _fbfd :=_ecbe .Get ("\u0052\u0043");_fbfd !=nil {_bbbd .RC =_fbfd ;};if _dca :=_ecbe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_dca !=nil {_bbbd .CreationDate =_dca ;};if _daaf :=_ecbe .Get ("\u0049\u0052\u0054");_daaf !=nil {_bbbd .IRT =_daaf ;};if _ead :=_ecbe .Get ("\u0053\u0075\u0062\u006a");_ead !=nil {_bbbd .Subj =_ead ;};if _bbee :=_ecbe .Get ("\u0052\u0054");_bbee !=nil {_bbbd .RT =_bbee ;};if _dgf :=_ecbe .Get ("\u0049\u0054");_dgf !=nil {_bbbd .IT =_dgf ;};if _cae :=_ecbe .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cae !=nil {_bbbd .ExData =_cae ;};return _bbbd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_edecg *Outline )ToPdfObject ()_dbc .PdfObject {return _edecg .ToPdfOutline ().ToPdfObject ()};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cdbd pdfFontSimple )GetCharMetrics (code _cg .CharCode )(_aca .CharMetrics ,bool ){if _ffbg ,_gcde :=_cdbd ._dbcdc [code ];_gcde {return _aca .CharMetrics {Wx :_ffbg },true ;};if _aca .IsStdFont (_aca .StdFontName (_cdbd ._cebb )){return _aca .CharMetrics {Wx :250},true ;};return _aca .CharMetrics {},false ;};

// AddFont adds a font dictionary to the Font resources.
func (_aacae *PdfPage )AddFont (name _dbc .PdfObjectName ,font _dbc .PdfObject )error {if _aacae .Resources ==nil {_aacae .Resources =NewPdfPageResources ();};if _aacae .Resources .Font ==nil {_aacae .Resources .Font =_dbc .MakeDict ();};_gbadc ,_ecbac :=_dbc .TraceToDirectObject (_aacae .Resources .Font ).(*_dbc .PdfObjectDictionary );if !_ecbac {_gge .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_dbc .TraceToDirectObject (_aacae .Resources .Font ));return _ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbadc .Set (name ,font );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgbe *PdfAnnotationPrinterMark )ToPdfObject ()_dbc .PdfObject {_bgbe .PdfAnnotation .ToPdfObject ();_dag :=_bgbe ._gef ;_gfdbc :=_dag .PdfObject .(*_dbc .PdfObjectDictionary );_gfdbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_gfdbc .SetIfNotNil ("\u004d\u004e",_bgbe .MN );return _dag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cabf *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func _ggda (_fecee *_dbc .PdfObjectDictionary )(*PdfShadingType1 ,error ){_adgcbc :=PdfShadingType1 {};if _bcca :=_fecee .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bcca !=nil {_bcca =_dbc .TraceToDirectObject (_bcca );_dafga ,_eade :=_bcca .(*_dbc .PdfObjectArray );if !_eade {_gge .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcca );return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adgcbc .Domain =_dafga ;};if _ebfd :=_fecee .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebfd !=nil {_ebfd =_dbc .TraceToDirectObject (_ebfd );_fecce ,_dgbcg :=_ebfd .(*_dbc .PdfObjectArray );if !_dgbcg {_gge .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebfd );return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adgcbc .Matrix =_fecce ;};_bbagab :=_fecee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbagab ==nil {_gge .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_adgcbc .Function =[]PdfFunction {};if _fdagc ,_acbee :=_bbagab .(*_dbc .PdfObjectArray );_acbee {for _ ,_ebada :=range _fdagc .Elements (){_eebeb ,_beafb :=_edcfc (_ebada );if _beafb !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beafb );return nil ,_beafb ;};_adgcbc .Function =append (_adgcbc .Function ,_eebeb );};}else {_addd ,_cdcf :=_edcfc (_bbagab );if _cdcf !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdcf );return nil ,_cdcf ;};_adgcbc .Function =append (_adgcbc .Function ,_addd );};return &_adgcbc ,nil ;};func (_fbd *PdfReader )newPdfActionSetOCGStateFromDict (_bfb *_dbc .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bfb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bfb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};func (_ebaed *LTV )enable (_egecg ,_ccggf []*_gg .Certificate ,_abacd string )error {_afdaa ,_dgeba ,_efcce :=_ebaed .buildCertChain (_egecg ,_ccggf );if _efcce !=nil {return _efcce ;};_bdacd ,_efcce :=_ebaed .getCerts (_afdaa );if _efcce !=nil {return _efcce ;};_edfada ,_efcce :=_ebaed .getOCSPs (_afdaa ,_dgeba );if _efcce !=nil {return _efcce ;};_afce ,_efcce :=_ebaed .getCRLs (_afdaa );if _efcce !=nil {return _efcce ;};_dfacb :=_ebaed ._ecbd ;_abbb ,_efcce :=_dfacb .addCerts (_bdacd );if _efcce !=nil {return _efcce ;};_cbfe ,_efcce :=_dfacb .addOCSPs (_edfada );if _efcce !=nil {return _efcce ;};_aceg ,_efcce :=_dfacb .addCRLs (_afce );if _efcce !=nil {return _efcce ;};if _abacd !=""{_dfacb .VRI [_abacd ]=&VRI {Cert :_abbb ,OCSP :_cbfe ,CRL :_aceg };};_ebaed ._dddcb .SetDSS (_dfacb );return nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fgca *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_beee *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dbfe []*PdfFieldSignature ;for _ ,_ddfgfd :=range _beee .AllFields (){switch _dfbga :=_ddfgfd .GetContext ().(type ){case *PdfFieldSignature :_gcdde :=_dfbga ;_dbfe =append (_dbfe ,_gcdde );};};return _dbfe ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cbcf *PdfPageResourcesColorspaces )Set (key _dbc .PdfObjectName ,val PdfColorspace ){if _ ,_eadde :=_cbcf .Colorspaces [string (key )];!_eadde {_cbcf .Names =append (_cbcf .Names ,string (key ));};_cbcf .Colorspaces [string (key )]=val ;};

// ToPdfObject implements interface PdfModel.
func (_adc *PdfActionSubmitForm )ToPdfObject ()_dbc .PdfObject {_adc .PdfAction .ToPdfObject ();_af :=_adc ._ff ;_gde :=_af .PdfObject .(*_dbc .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeSubmitForm )));if _adc .F !=nil {_gde .Set ("\u0046",_adc .F .ToPdfObject ());};_gde .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_adc .Fields );_gde .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_adc .Flags );return _af ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gacb :=&PdfPageResourcesColorspaces {};_gacb .Names =[]string {};_gacb .Colorspaces =map[string ]PdfColorspace {};_gacb ._cgbbc =&_dbc .PdfIndirectObject {};return _gacb ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _dbc .PdfObject ;IsMap _dbc .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbdbb *PdfColorspaceSpecialPattern )ToPdfObject ()_dbc .PdfObject {if _dbdbb .UnderlyingCS ==nil {return _dbc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dga :=_dbc .MakeArray (_dbc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dga .Append (_dbdbb .UnderlyingCS .ToPdfObject ());if _dbdbb ._gaga !=nil {_dbdbb ._gaga .PdfObject =_dga ;return _dbdbb ._gaga ;};return _dga ;};var _aagdc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cgfb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gfdbff *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_dbc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eabbe ,_egef :=_dbc .GetNumbersAsFloat (objects );if _egef !=nil {return nil ,_egef ;};return _gfdbff .ColorFromFloats (_eabbe );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_gdaa *PdfColorspaceDeviceN )ToPdfObject ()_dbc .PdfObject {_abae :=_dbc .MakeArray (_dbc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_abae .Append (_gdaa .ColorantNames );_abae .Append (_gdaa .AlternateSpace .ToPdfObject ());_abae .Append (_gdaa .TintTransform .ToPdfObject ());if _gdaa .Attributes !=nil {_abae .Append (_gdaa .Attributes .ToPdfObject ());};if _gdaa ._gcbe !=nil {_gdaa ._gcbe .PdfObject =_abae ;return _gdaa ._gcbe ;};return _abae ;};func _fgbad (_caab *_dbc .PdfObjectDictionary )(*PdfShadingType4 ,error ){_agee :=PdfShadingType4 {};_ggceb :=_caab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggceb ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_adgef ,_agce :=_ggceb .(*_dbc .PdfObjectInteger );if !_agce {_gge .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggceb );return nil ,_dbc .ErrTypeError ;};_agee .BitsPerCoordinate =_adgef ;_ggceb =_caab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggceb ==nil {_gge .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_adgef ,_agce =_ggceb .(*_dbc .PdfObjectInteger );if !_agce {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggceb );return nil ,_dbc .ErrTypeError ;};_agee .BitsPerComponent =_adgef ;_ggceb =_caab .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggceb ==nil {_gge .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_adgef ,_agce =_ggceb .(*_dbc .PdfObjectInteger );if !_agce {_gge .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggceb );return nil ,_dbc .ErrTypeError ;};_agee .BitsPerComponent =_adgef ;_ggceb =_caab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggceb ==nil {_gge .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ebgcf ,_agce :=_ggceb .(*_dbc .PdfObjectArray );if !_agce {_gge .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggceb );return nil ,_dbc .ErrTypeError ;};_agee .Decode =_ebgcf ;_ggceb =_caab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggceb ==nil {_gge .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_agee .Function =[]PdfFunction {};if _afad ,_dcdc :=_ggceb .(*_dbc .PdfObjectArray );_dcdc {for _ ,_bfedff :=range _afad .Elements (){_gcgac ,_aaad :=_edcfc (_bfedff );if _aaad !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaad );return nil ,_aaad ;};_agee .Function =append (_agee .Function ,_gcgac );};}else {_fbfcd ,_gecd :=_edcfc (_ggceb );if _gecd !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gecd );return nil ,_gecd ;};_agee .Function =append (_agee .Function ,_fbfcd );};return &_agee ,nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cfe :=NewPdfAnnotation ();_cca :=&PdfAnnotationCaret {};_cca .PdfAnnotation =_cfe ;_cca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfe .SetContext (_cca );return _cca ;};func (_gfae *PdfReader )loadDSS ()(*DSS ,error ){if _gfae ._efgcc .GetCrypter ()!=nil &&!_gfae ._efgcc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_eecce :=_gfae ._gcaad .Get ("\u0044\u0053\u0053");if _eecce ==nil {return nil ,nil ;};_bbbc ,_ :=_dbc .GetIndirect (_eecce );_eecce =_dbc .TraceToDirectObject (_eecce );switch _gbfbg :=_eecce .(type ){case *_dbc .PdfObjectNull :return nil ,nil ;case *_dbc .PdfObjectDictionary :return _gafag (_bbbc ,_gbfbg );};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_eecce );};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_beae *_dbc .PdfIndirectObject ;};func (_gebe *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bgb *_dbc .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aab :=PdfAnnotationFileAttachment {};_adbc ,_gag :=_gebe .newPdfAnnotationMarkupFromDict (_bgb );if _gag !=nil {return nil ,_gag ;};_aab .PdfAnnotationMarkup =_adbc ;_aab .FS =_bgb .Get ("\u0046\u0053");_aab .Name =_bgb .Get ("\u004e\u0061\u006d\u0065");return &_aab ,nil ;};func _gcdfd (_edaeec _dbc .PdfObject ,_adaf bool )(*PdfFont ,error ){_bggd ,_eeeb ,_cefdc :=_bceg (_edaeec );if _cefdc !=nil {if _cefdc ==ErrType3FontNotSupported ||_cefdc ==ErrType1CFontNotSupported {_egbaa ,_gaaecb :=_fcfc (_bggd ,_eeeb ,nil );if _gaaecb !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eeeb ,_gaaecb );return nil ,_cefdc ;};return &PdfFont {_ceef :_egbaa },_cefdc ;};return nil ,_cefdc ;};_badb :=&PdfFont {};switch _eeeb ._abdbb {case "\u0054\u0079\u0070e\u0030":if !_adaf {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeeb );return nil ,_ge .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ebae ,_efbc :=_fedcf (_bggd ,_eeeb );if _efbc !=nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eeeb ,_efbc );return nil ,_efbc ;};_badb ._ceef =_ebae ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _cgaf *pdfFontSimple ;_eagf ,_affe :=_aca .NewStdFontByName (_aca .StdFontName (_eeeb ._cebb ));if _affe {_ffdf :=_defb (_eagf );_badb ._ceef =&_ffdf ;_ccfa :=_dbc .TraceToDirectObject (_ffdf .ToPdfObject ());_eegcg ,_cbebgf ,_baga :=_bceg (_ccfa );if _baga !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eeeb ,_ffdf );return nil ,_baga ;};for _ ,_cffg :=range _bggd .Keys (){_eegcg .Set (_cffg ,_bggd .Get (_cffg ));};_cgaf ,_baga =_fcfc (_eegcg ,_cbebgf ,_ffdf ._gdbb );if _baga !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eeeb ,_ffdf );return nil ,_baga ;};_cgaf ._dbcdc =_ffdf ._dbcdc ;_cgaf ._bacea =_ffdf ._bacea ;}else {_cgaf ,_cefdc =_fcfc (_bggd ,_eeeb ,nil );if _cefdc !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eeeb ,_cefdc );return nil ,_cefdc ;};};_cefdc =_cgaf .addEncoding ();if _cefdc !=nil {return nil ,_cefdc ;};if _affe {_cgaf .updateStandard14Font ();};if _affe &&_cgaf ._cggaf ==nil &&_cgaf ._gdbb ==nil {_gge .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cgaf );_gge .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_eagf );};if len (_cgaf ._dbcdc )==0{_gge .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_cgaf );};_badb ._ceef =_cgaf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_gbgc ,_cadefc :=_ecdab (_bggd ,_eeeb );if _cadefc !=nil {_gge .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cadefc );return nil ,_cadefc ;};_badb ._ceef =_gbgc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cdecdd ,_dbbaa :=_fcfbg (_bggd ,_eeeb );if _dbbaa !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eeeb ,_dbbaa );return nil ,_dbbaa ;};_badb ._ceef =_cdecdd ;default:_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_eeeb );return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eeeb );};return _badb ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cbbec *PdfPage )GetContentStreamObjs ()[]_dbc .PdfObject {if _cbbec .Contents ==nil {return nil ;};_deaa :=_dbc .TraceToDirectObject (_cbbec .Contents );if _gddc ,_effg :=_deaa .(*_dbc .PdfObjectArray );_effg {return _gddc .Elements ();};return []_dbc .PdfObject {_deaa };};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ccagcc *PdfPageResources )HasFontByName (keyName _dbc .PdfObjectName )bool {_ ,_dccbc :=_ccagcc .GetFontByName (keyName );return _dccbc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cfadf :=PdfPage {};_cfadf ._dbagc =_dbc .MakeDict ();_cfadf .Resources =NewPdfPageResources ();_cdbag :=_dbc .PdfIndirectObject {};_cdbag .PdfObject =_cfadf ._dbagc ;_cfadf ._aaac =&_cdbag ;return &_cfadf ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_geb :=NewPdfAction ();_bda :=&PdfActionURI {};_bda .PdfAction =_geb ;_geb .SetContext (_bda );return _bda ;};func (_cgb *PdfReader )newPdfAnnotationStampFromDict (_gae *_dbc .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fdb :=PdfAnnotationStamp {};_cgcg ,_gce :=_cgb .newPdfAnnotationMarkupFromDict (_gae );if _gce !=nil {return nil ,_gce ;};_fdb .PdfAnnotationMarkup =_cgcg ;_fdb .Name =_gae .Get ("\u004e\u0061\u006d\u0065");return &_fdb ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ccff *PdfAnnotation )ToPdfObject ()_dbc .PdfObject {_fbda :=_ccff ._gef ;_bdfc :=_fbda .PdfObject .(*_dbc .PdfObjectDictionary );_bdfc .Clear ();_bdfc .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0041\u006e\u006eo\u0074"));_bdfc .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ccff .Rect );_bdfc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ccff .Contents );_bdfc .SetIfNotNil ("\u0050",_ccff .P );_bdfc .SetIfNotNil ("\u004e\u004d",_ccff .NM );_bdfc .SetIfNotNil ("\u004d",_ccff .M );_bdfc .SetIfNotNil ("\u0046",_ccff .F );_bdfc .SetIfNotNil ("\u0041\u0050",_ccff .AP );_bdfc .SetIfNotNil ("\u0041\u0053",_ccff .AS );_bdfc .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ccff .Border );_bdfc .SetIfNotNil ("\u0043",_ccff .C );_bdfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ccff .StructParent );_bdfc .SetIfNotNil ("\u004f\u0043",_ccff .OC );return _fbda ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_caaa pdfCIDFontType0 )GetRuneMetrics (r rune )(_aca .CharMetrics ,bool ){return _aca .CharMetrics {Wx :_caaa ._efcbd },true ;};

// Add appends an outline item as a child of the current outline item.
func (_fggb *OutlineItem )Add (item *OutlineItem ){_fggb .Entries =append (_fggb .Entries ,item )};

// AddCustomInfo adds a custom info into document info dictionary.
func (_gaabb *PdfInfo )AddCustomInfo (name string ,value string )error {if _gaabb ._fbfca ==nil {_gaabb ._fbfca =_dbc .MakeDict ();};if _ ,_fbccf :=_gddbc [name ];_fbccf {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );};_gaabb ._fbfca .SetIfNotNil (*_dbc .MakeName (name ),_dbc .MakeString (value ));return nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_agbeaa *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gceea []*PdfOutlineTreeNode ;var _egfa []string ;var _acafff func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_acafff =func (_eebbe *PdfOutlineTreeNode ,_ffgbd *[]*PdfOutlineTreeNode ,_dgcf *[]string ,_feag int ){if _eebbe ==nil {return ;};if _eebbe ._cadfc ==nil {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gdfb ,_cbbb :=_eebbe ._cadfc .(*PdfOutlineItem );if _cbbb {*_ffgbd =append (*_ffgbd ,&_gdfb .PdfOutlineTreeNode );_cfcegb :=_ab .Repeat ("\u0020",_feag *2)+_gdfb .Title .Decoded ();*_dgcf =append (*_dgcf ,_cfcegb );};if _eebbe .First !=nil {_dfadf :=_ab .Repeat ("\u0020",_feag *2)+"\u002b";*_dgcf =append (*_dgcf ,_dfadf );_acafff (_eebbe .First ,_ffgbd ,_dgcf ,_feag +1);};if _cbbb &&_gdfb .Next !=nil {_acafff (_gdfb .Next ,_ffgbd ,_dgcf ,_feag );};};_acafff (_agbeaa ._ffca ,&_gceea ,&_egfa ,0);return _gceea ,_egfa ,nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_fecedd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fecedd ._afeeg =outlineTree ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _dbc .PdfObject ;Flags _dbc .PdfObject ;};func _cabbb (_gdbcc _dbc .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_aeeb :=NewPdfColorspaceSpecialSeparation ();if _bfef ,_gbce :=_gdbcc .(*_dbc .PdfIndirectObject );_gbce {_aeeb ._eegb =_bfef ;};_gdbcc =_dbc .TraceToDirectObject (_gdbcc );_efgbg ,_fbcc :=_gdbcc .(*_dbc .PdfObjectArray );if !_fbcc {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _efgbg .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gdbcc =_efgbg .Get (0);_bbfe ,_fbcc :=_gdbcc .(*_dbc .PdfObjectName );if !_fbcc {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_bbfe !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_gdbcc =_efgbg .Get (1);_bbfe ,_fbcc =_gdbcc .(*_dbc .PdfObjectName );if !_fbcc {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_aeeb .ColorantName =_bbfe ;_gdbcc =_efgbg .Get (2);_ecgg ,_debd :=NewPdfColorspaceFromPdfObject (_gdbcc );if _debd !=nil {return nil ,_debd ;};_aeeb .AlternateSpace =_ecgg ;_bbefc ,_debd :=_edcfc (_efgbg .Get (3));if _debd !=nil {return nil ,_debd ;};_aeeb .TintTransform =_bbefc ;return _aeeb ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_acgf *PdfPageResources )GetContainingPdfObject ()_dbc .PdfObject {return _acgf ._gddga };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bdgcg *PdfPageResources )GetXObjectFormByName (keyName _dbc .PdfObjectName )(*XObjectForm ,error ){_gebdc ,_dafbg :=_bdgcg .GetXObjectByName (keyName );if _gebdc ==nil {return nil ,nil ;};if _dafbg !=XObjectTypeForm {return nil ,_ge .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_bgdbd ,_bcacf :=NewXObjectFormFromStream (_gebdc );if _bcacf !=nil {return nil ,_bcacf ;};return _bgdbd ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_daa :=NewPdfAnnotation ();_bfcg :=&PdfAnnotationPrinterMark {};_bfcg .PdfAnnotation =_daa ;_daa .SetContext (_bfcg );return _bfcg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdbee *PdfShadingType4 )ToPdfObject ()_dbc .PdfObject {_cdbee .PdfShading .ToPdfObject ();_dfged ,_aabg :=_cdbee .getShadingDict ();if _aabg !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cdbee .BitsPerCoordinate !=nil {_dfged .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cdbee .BitsPerCoordinate );};if _cdbee .BitsPerComponent !=nil {_dfged .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdbee .BitsPerComponent );};if _cdbee .BitsPerFlag !=nil {_dfged .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cdbee .BitsPerFlag );};if _cdbee .Decode !=nil {_dfged .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdbee .Decode );};if _cdbee .Function !=nil {if len (_cdbee .Function )==1{_dfged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdbee .Function [0].ToPdfObject ());}else {_cfcde :=_dbc .MakeArray ();for _ ,_daadd :=range _cdbee .Function {_cfcde .Append (_daadd .ToPdfObject ());};_dfged .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfcde );};};return _cdbee ._bdgfb ;};func (_gadebc *PdfReader )newPdfPageFromDict (_edecgc *_dbc .PdfObjectDictionary )(*PdfPage ,error ){_dffge :=NewPdfPage ();_dffge ._dbagc =_edecgc ;_gaebd :=*_edecgc ;_gfaf ,_gcfge :=_gaebd .Get ("\u0054\u0079\u0070\u0065").(*_dbc .PdfObjectName );if !_gcfge {return nil ,_ge .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gfaf !="\u0050\u0061\u0067\u0065"{return nil ,_ge .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fcgc :=_gaebd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fcgc !=nil {_dffge .Parent =_fcgc ;};if _ebcee :=_gaebd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ebcee !=nil {_efgce ,_cfba :=_dbc .GetString (_ebcee );if !_cfba {return nil ,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_gfad ,_cegcf :=NewPdfDate (_efgce .Str ());if _cegcf !=nil {return nil ,_cegcf ;};_dffge .LastModified =&_gfad ;};if _cadg :=_gaebd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cadg !=nil &&!_dbc .IsNullObject (_cadg ){_efbab ,_aafg :=_dbc .GetDict (_cadg );if !_aafg {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cadg );};var _bebae error ;_dffge .Resources ,_bebae =NewPdfPageResourcesFromDict (_efbab );if _bebae !=nil {return nil ,_bebae ;};}else {_fbeaa ,_bddccg :=_dffge .getParentResources ();if _bddccg !=nil {return nil ,_bddccg ;};if _fbeaa ==nil {_fbeaa =NewPdfPageResources ();};_dffge .Resources =_fbeaa ;};if _gbbf :=_gaebd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gbbf !=nil {_afafd ,_edade :=_dbc .GetArray (_gbbf );if !_edade {return nil ,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cegg error ;_dffge .MediaBox ,_cegg =NewPdfRectangle (*_afafd );if _cegg !=nil {return nil ,_cegg ;};};if _babdgb :=_gaebd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_babdgb !=nil {_faafb ,_dgad :=_dbc .GetArray (_babdgb );if !_dgad {return nil ,_ge .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _ccebg error ;_dffge .CropBox ,_ccebg =NewPdfRectangle (*_faafb );if _ccebg !=nil {return nil ,_ccebg ;};};if _gbcgb :=_gaebd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gbcgb !=nil {_fcac ,_bbcbd :=_dbc .GetArray (_gbcgb );if !_bbcbd {return nil ,_ge .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _daaaa error ;_dffge .BleedBox ,_daaaa =NewPdfRectangle (*_fcac );if _daaaa !=nil {return nil ,_daaaa ;};};if _gccg :=_gaebd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gccg !=nil {_ceed ,_bbae :=_dbc .GetArray (_gccg );if !_bbae {return nil ,_ge .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _fbde error ;_dffge .TrimBox ,_fbde =NewPdfRectangle (*_ceed );if _fbde !=nil {return nil ,_fbde ;};};if _befee :=_gaebd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_befee !=nil {_ddef ,_cffb :=_dbc .GetArray (_befee );if !_cffb {return nil ,_ge .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gdgdg error ;_dffge .ArtBox ,_gdgdg =NewPdfRectangle (*_ddef );if _gdgdg !=nil {return nil ,_gdgdg ;};};if _cgcf :=_gaebd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_cgcf !=nil {_dffge .BoxColorInfo =_cgcf ;};if _bafcb :=_gaebd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bafcb !=nil {_dffge .Contents =_bafcb ;};if _ccdd :=_gaebd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ccdd !=nil {_bcdf ,_cedca :=_dbc .GetInt (_ccdd );if !_cedca {return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_fbafbb :=int64 (*_bcdf );_dffge .Rotate =&_fbafbb ;};if _dgcg :=_gaebd .Get ("\u0047\u0072\u006fu\u0070");_dgcg !=nil {_dffge .Group =_dgcg ;};if _cdaf :=_gaebd .Get ("\u0054\u0068\u0075m\u0062");_cdaf !=nil {_dffge .Thumb =_cdaf ;};if _begcf :=_gaebd .Get ("\u0042");_begcf !=nil {_dffge .B =_begcf ;};if _bdcae :=_gaebd .Get ("\u0044\u0075\u0072");_bdcae !=nil {_dffge .Dur =_bdcae ;};if _gccbgc :=_gaebd .Get ("\u0054\u0072\u0061n\u0073");_gccbgc !=nil {_dffge .Trans =_gccbgc ;};if _adgde :=_gaebd .Get ("\u0041\u0041");_adgde !=nil {_dffge .AA =_adgde ;};if _gaafc :=_gaebd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gaafc !=nil {_dffge .Metadata =_gaafc ;};if _ddbg :=_gaebd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ddbg !=nil {_dffge .PieceInfo =_ddbg ;};if _begab :=_gaebd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_begab !=nil {_dffge .StructParents =_begab ;};if _ggegfc :=_gaebd .Get ("\u0049\u0044");_ggegfc !=nil {_dffge .ID =_ggegfc ;};if _gedfef :=_gaebd .Get ("\u0050\u005a");_gedfef !=nil {_dffge .PZ =_gedfef ;};if _bcaceg :=_gaebd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_bcaceg !=nil {_dffge .SeparationInfo =_bcaceg ;};if _bdeca :=_gaebd .Get ("\u0054\u0061\u0062\u0073");_bdeca !=nil {_dffge .Tabs =_bdeca ;};if _abded :=_gaebd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_abded !=nil {_dffge .TemplateInstantiated =_abded ;};if _bgac :=_gaebd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bgac !=nil {_dffge .PresSteps =_bgac ;};if _cfeg :=_gaebd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_cfeg !=nil {_dffge .UserUnit =_cfeg ;};if _geeeg :=_gaebd .Get ("\u0056\u0050");_geeeg !=nil {_dffge .VP =_geeeg ;};if _cfeee :=_gaebd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_cfeee !=nil {_dffge .Annots =_cfeee ;};_dffge ._cfeea =_gadebc ;return _dffge ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _dbc .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_dbc .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_gdceg ,_bgeaa :=encoder .EncodeBytes (img .Data );if _bgeaa !=nil {_gge .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bgeaa );return nil ,_bgeaa ;};_bbegd :=NewXObjectImage ();_fgdgec :=img .Width ;_eeabe :=img .Height ;_bbegd .Width =&_fgdgec ;_bbegd .Height =&_eeabe ;_beffe :=img .BitsPerComponent ;_bbegd .BitsPerComponent =&_beffe ;_bbegd .Filter =encoder ;_bbegd .Stream =_gdceg ;if cs ==nil {if img .ColorComponents ==1{_bbegd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bbegd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bbegd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ge .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bbegd .ColorSpace =cs ;};if len (img ._gaaea )!=0{_dfbdb :=NewXObjectImage ();_dfbdb .Filter =encoder ;_dgbfa ,_ccgeb :=encoder .EncodeBytes (img ._gaaea );if _ccgeb !=nil {_gge .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ccgeb );return nil ,_ccgeb ;};_dfbdb .Stream =_dgbfa ;_dfbdb .BitsPerComponent =_bbegd .BitsPerComponent ;_dfbdb .Width =&img .Width ;_dfbdb .Height =&img .Height ;_dfbdb .ColorSpace =NewPdfColorspaceDeviceGray ();_bbegd .SMask =_dfbdb .ToPdfObject ();}else {_bbegd .SMask =xobjIn .SMask ;_bbegd .ImageMask =xobjIn .ImageMask ;if _bbegd .ColorSpace .GetNumComponents ()==1{_fdfde (_bbegd );};};return _bbegd ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gcbee *PdfOutlineTreeNode )GetContainingPdfObject ()_dbc .PdfObject {return _gcbee .GetContext ().GetContainingPdfObject ();};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_cgabg *PdfOutlineTreeNode )ToPdfObject ()_dbc .PdfObject {return _cgabg .GetContext ().ToPdfObject ();};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dedfb *PdfOutlineItem )ToPdfObject ()_dbc .PdfObject {_gcfd :=_dedfb ._fdcde ;_aabb :=_gcfd .PdfObject .(*_dbc .PdfObjectDictionary );_aabb .Set ("\u0054\u0069\u0074l\u0065",_dedfb .Title );if _dedfb .A !=nil {_aabb .Set ("\u0041",_dedfb .A );};if _bacca :=_aabb .Get ("\u0053\u0045");_bacca !=nil {_aabb .Remove ("\u0053\u0045");};if _dedfb .C !=nil {_aabb .Set ("\u0043",_dedfb .C );};if _dedfb .Dest !=nil {_aabb .Set ("\u0044\u0065\u0073\u0074",_dedfb .Dest );};if _dedfb .F !=nil {_aabb .Set ("\u0046",_dedfb .F );};if _dedfb .Count !=nil {_aabb .Set ("\u0043\u006f\u0075n\u0074",_dbc .MakeInteger (*_dedfb .Count ));};if _dedfb .Next !=nil {_aabb .Set ("\u004e\u0065\u0078\u0074",_dedfb .Next .ToPdfObject ());};if _dedfb .First !=nil {_aabb .Set ("\u0046\u0069\u0072s\u0074",_dedfb .First .ToPdfObject ());};if _dedfb .Prev !=nil {_aabb .Set ("\u0050\u0072\u0065\u0076",_dedfb .Prev .GetContext ().GetContainingPdfObject ());};if _dedfb .Last !=nil {_aabb .Set ("\u004c\u0061\u0073\u0074",_dedfb .Last .GetContext ().GetContainingPdfObject ());};if _dedfb .Parent !=nil {_aabb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dedfb .Parent .GetContext ().GetContainingPdfObject ());};return _gcfd ;};func _dcfga (_eaaa string )(string ,error ){var _baffe _gd .Buffer ;_baffe .WriteString (_eaaa );_adfge :=make ([]byte ,8+16);_gfdf :=_f .Now ().UTC ().UnixNano ();_d .BigEndian .PutUint64 (_adfge ,uint64 (_gfdf ));_ ,_bgcaa :=_ee .Read (_adfge [8:]);if _bgcaa !=nil {return "",_bgcaa ;};_baffe .WriteString (_c .EncodeToString (_adfge ));return _baffe .String (),nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cadb :=NewPdfAnnotation ();_acad :=&PdfAnnotationMovie {};_acad .PdfAnnotation =_cadb ;_cadb .SetContext (_acad );return _acad ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gbdaga *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdccc ,_afab :=color .(*PdfColorDeviceRGB );if !_afab {_gge .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cdccc ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_efea *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _efea .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cgda PdfModel ;_befed *_dbc .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_dbc .PdfObjectName ;T *_dbc .PdfObjectString ;TU *_dbc .PdfObjectString ;TM *_dbc .PdfObjectString ;Ff *_dbc .PdfObjectInteger ;V _dbc .PdfObject ;DV _dbc .PdfObject ;AA _dbc .PdfObject ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dcbc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dcbc .MediaBox !=nil {return _dcbc .MediaBox ,nil ;};_acfef :=_dcbc .Parent ;for _acfef !=nil {_egbbg ,_eaabf :=_dbc .GetDict (_acfef );if !_eaabf {return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _bafag :=_egbbg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bafag !=nil {_fgebg ,_fbfdf :=_dbc .GetArray (_bafag );if !_fbfdf {return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_ecafe ,_gbfe :=NewPdfRectangle (*_fgebg );if _gbfe !=nil {return nil ,_gbfe ;};return _ecafe ,nil ;};_acfef =_egbbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ge .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};func (_dcdf *PdfReader )newPdfAnnotationLineFromDict (_geba *_dbc .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_fbbd :=PdfAnnotationLine {};_eacb ,_ebcg :=_dcdf .newPdfAnnotationMarkupFromDict (_geba );if _ebcg !=nil {return nil ,_ebcg ;};_fbbd .PdfAnnotationMarkup =_eacb ;_fbbd .L =_geba .Get ("\u004c");_fbbd .BS =_geba .Get ("\u0042\u0053");_fbbd .LE =_geba .Get ("\u004c\u0045");_fbbd .IC =_geba .Get ("\u0049\u0043");_fbbd .LL =_geba .Get ("\u004c\u004c");_fbbd .LLE =_geba .Get ("\u004c\u004c\u0045");_fbbd .Cap =_geba .Get ("\u0043\u0061\u0070");_fbbd .IT =_geba .Get ("\u0049\u0054");_fbbd .LLO =_geba .Get ("\u004c\u004c\u004f");_fbbd .CP =_geba .Get ("\u0043\u0050");_fbbd .Measure =_geba .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_fbbd .CO =_geba .Get ("\u0043\u004f");return &_fbbd ,nil ;};func (_ecfe *PdfWriter )seekByName (_dggef _dbc .PdfObject ,_aecbe []string ,_daced string )([]_dbc .PdfObject ,error ){_gge .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_dggef );var _gdaagb []_dbc .PdfObject ;if _dfbb ,_cefbf :=_dggef .(*_dbc .PdfIndirectObject );_cefbf {return _ecfe .seekByName (_dfbb .PdfObject ,_aecbe ,_daced );};if _daade ,_dfgfe :=_dggef .(*_dbc .PdfObjectStream );_dfgfe {return _ecfe .seekByName (_daade .PdfObjectDictionary ,_aecbe ,_daced );};if _cgdgc ,_fcfbd :=_dggef .(*_dbc .PdfObjectDictionary );_fcfbd {_gge .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_afdbaa :=range _cgdgc .Keys (){_cebba :=_cgdgc .Get (_afdbaa );if string (_afdbaa )==_daced {_gdaagb =append (_gdaagb ,_cebba );};for _ ,_dgbbb :=range _aecbe {if string (_afdbaa )==_dgbbb {_gge .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dgbbb );_dafbc ,_dfceb :=_ecfe .seekByName (_cebba ,_aecbe ,_daced );if _dfceb !=nil {return _gdaagb ,_dfceb ;};_gdaagb =append (_gdaagb ,_dafbc ...);break ;};};};return _gdaagb ,nil ;};return _gdaagb ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_acgab *PdfAcroForm )GetContainingPdfObject ()_dbc .PdfObject {return _acgab ._abcd };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gaaae :map[_dbc .PdfObject ]struct{}{},_dcga :_cdab (),_efgcc :_dbc .NewParserFromString (txt )};};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_efaac ,_aafcd :=_eg .Open (filePath );if _aafcd !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aafcd );return nil ,_aafcd ;};defer _efaac .Close ();return NewPdfFontFromTTF (_efaac );};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_gcffg =subject };

// GetBorderWidth returns the border style's width.
func (_ebbfb *PdfBorderStyle )GetBorderWidth ()float64 {if _ebbfb .W ==nil {return 1;};return *_ebbfb .W ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dggdd *PdfOutline )GetContainingPdfObject ()_dbc .PdfObject {return _dggdd ._bbcgc };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _dbc .PdfObject ;Mac _dbc .PdfObject ;Unix _dbc .PdfObject ;NewWindow _dbc .PdfObject ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ggcae :=PdfColorLab {l ,a ,b };return &_ggcae };func (_gagee *DSS )addCRLs (_cgac [][]byte )([]*_dbc .PdfObjectStream ,error ){return _gagee .add (&_gagee .CRLs ,_gagee ._befd ,_cgac );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gegg *PdfOutlineItem )GetContainingPdfObject ()_dbc .PdfObject {return _gegg ._fdcde };

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_ddabc =title };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gabf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbfb ,_dbgb :=color .(*PdfColorCalRGB );if !_dbgb {_gge .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfdd :=_dbfb .A ();_eegcf :=_dbfb .B ();_cbdbb :=_dbfb .C ();X :=_gabf .Matrix [0]*_bc .Pow (_dfdd ,_gabf .Gamma [0])+_gabf .Matrix [3]*_bc .Pow (_eegcf ,_gabf .Gamma [1])+_gabf .Matrix [6]*_bc .Pow (_cbdbb ,_gabf .Gamma [2]);Y :=_gabf .Matrix [1]*_bc .Pow (_dfdd ,_gabf .Gamma [0])+_gabf .Matrix [4]*_bc .Pow (_eegcf ,_gabf .Gamma [1])+_gabf .Matrix [7]*_bc .Pow (_cbdbb ,_gabf .Gamma [2]);Z :=_gabf .Matrix [2]*_bc .Pow (_dfdd ,_gabf .Gamma [0])+_gabf .Matrix [5]*_bc .Pow (_eegcf ,_gabf .Gamma [1])+_gabf .Matrix [8]*_bc .Pow (_cbdbb ,_gabf .Gamma [2]);_eafg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bcc :=-0.969256*X +1.875992*Y +0.041556*Z ;_dbba :=0.055648*X +-0.204043*Y +1.057311*Z ;_eafg =_bc .Min (_bc .Max (_eafg ,0),1.0);_bcc =_bc .Min (_bc .Max (_bcc ,0),1.0);_dbba =_bc .Min (_bc .Max (_dbba ,0),1.0);return NewPdfColorDeviceRGB (_eafg ,_bcc ,_dbba ),nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ccggfe *PdfReader )GetOCProperties ()(_dbc .PdfObject ,error ){_cggef :=_ccggfe ._gcaad ;_cafce :=_cggef .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cafce =_dbc .ResolveReference (_cafce );if !_ccggfe ._fcbf {_gbebd :=_ccggfe .traverseObjectData (_cafce );if _gbebd !=nil {return nil ,_gbebd ;};};return _cafce ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cda *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cda .AlternateSpace ==nil {return nil ,_ge .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _cda .AlternateSpace .ColorToRGB (color );};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_deac *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ebgaf []*PdfField ;_badea :=map[*_dbc .PdfIndirectObject ]struct{}{};for _ ,_dacda :=range _deac .PageList {_bbeb ,_fbdbe :=_dacda .GetAnnotations ();if _fbdbe !=nil {return _fbdbe ;};for _ ,_agece :=range _bbeb {var _beaeg *PdfField ;switch _fcbeda :=_agece .GetContext ().(type ){case *PdfAnnotationWidget :if _fcbeda ._agbg !=nil {_beaeg =_fcbeda ._agbg ;break ;};if _ggead ,_adcd :=_dbc .GetIndirect (_fcbeda .Parent );_adcd {_beaeg ,_fbdbe =_deac .newPdfFieldFromIndirectObject (_ggead ,nil );if _fbdbe ==nil {break ;};_gge .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ggead ,_fbdbe );};if _fcbeda ._gef !=nil {_beaeg ,_fbdbe =_deac .newPdfFieldFromIndirectObject (_fcbeda ._gef ,nil );if _fbdbe ==nil {break ;};_gge .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fcbeda ._gef ,_fbdbe );};};if _beaeg ==nil {continue ;};if _ ,_cafg :=_badea [_beaeg ._befed ];_cafg {continue ;};_badea [_beaeg ._befed ]=struct{}{};_ebgaf =append (_ebgaf ,_beaeg );};};if len (_ebgaf )==0{return nil ;};if _deac .AcroForm ==nil {_deac .AcroForm =NewPdfAcroForm ();};_deac .AcroForm .Fields =&_ebgaf ;return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eccf *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gge .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adgac :=[]float64 {0.0};if _eccf .C0 !=nil {_adgac =_eccf .C0 ;};_bgedg :=[]float64 {1.0};if _eccf .C1 !=nil {_bgedg =_eccf .C1 ;};var _dcgg []float64 ;for _bcafd :=0;_bcafd < len (_adgac );_bcafd ++{_gbbg :=_adgac [_bcafd ]+_bc .Pow (x [0],_eccf .N )*(_bgedg [_bcafd ]-_adgac [_bcafd ]);_dcgg =append (_dcgg ,_gbbg );};return _dcgg ,nil ;};

// String returns a string describing the font descriptor.
func (_ecaf *PdfFontDescriptor )String ()string {var _cadee []string ;if _ecaf .FontName !=nil {_cadee =append (_cadee ,_ecaf .FontName .String ());};if _ecaf .FontFamily !=nil {_cadee =append (_cadee ,_ecaf .FontFamily .String ());};if _ecaf .fontFile !=nil {_cadee =append (_cadee ,_ecaf .fontFile .String ());};if _ecaf ._ggcad !=nil {_cadee =append (_cadee ,_ecaf ._ggcad .String ());};_cadee =append (_cadee ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ecaf .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ab .Join (_cadee ,"\u002c\u0020"));};func (_gfdbaf *PdfReader )traverseObjectData (_ebebcc _dbc .PdfObject )error {return _dbc .ResolveReferencesDeep (_ebebcc ,_gfdbaf ._gaaae );};func _bgde ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();if len (_acaeg )> 0{return _acaeg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func _faaaf (_dafb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fgede ,_fbdd :=_dbc .GetDict (_dafb .AP );if !_fbdd {return nil ,nil ,_ge .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _fgede ==nil {return nil ,nil ,nil ;};_cgab ,_fbdd :=_dbc .GetArray (_dafb .Rect );if !_fbdd ||_cgab .Len ()!=4{return nil ,nil ,_ge .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gcgge ,_cbged :=NewPdfRectangle (*_cgab );if _cbged !=nil {return nil ,nil ,_cbged ;};_gcfg :=_dbc .TraceToDirectObject (_fgede .Get ("\u004e"));switch _ecac :=_gcfg .(type ){case *_dbc .PdfObjectStream :_edgf :=_ecac ;_eafcg ,_dgdga :=NewXObjectFormFromStream (_edgf );return _eafcg ,_gcgge ,_dgdga ;case *_dbc .PdfObjectDictionary :_gddf :=_ecac ;_cfgc ,_gagb :=_dbc .GetName (_dafb .AS );if !_gagb {return nil ,nil ,nil ;};if _gddf .Get (*_cfgc )==nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_ecgbe ,_gagb :=_dbc .GetStream (_gddf .Get (*_cfgc ));if !_gagb {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cfgc );return nil ,nil ,_ge .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_afbf ,_efgfb :=NewXObjectFormFromStream (_ecgbe );return _afbf ,_gcgge ,_efgfb ;};_gge .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_gcfg );return nil ,nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_dfge *LTV )getCRLs (_dbbbf []*_gg .Certificate )([][]byte ,error ){_gaaef :=make ([][]byte ,0,len (_dbbbf ));for _ ,_adbca :=range _dbbbf {for _ ,_dcebg :=range _adbca .CRLDistributionPoints {if _dfge .CertClient .IsCA (_adbca ){continue ;};_eeagf ,_ebcf :=_dfge .CRLClient .MakeRequest (_dcebg ,_adbca );if _ebcf !=nil {_gge .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ebcf );continue ;};_gaaef =append (_gaaef ,_eeagf );};};return _gaaef ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gfgbg *PdfColorCalGray )GetNumComponents ()int {return 1};

// GetContentStream returns the pattern cell's content stream
func (_aegec *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ddab ,_ ,_cfdcc :=_aegec .GetContentStreamWithEncoder ();return _ddab ,_cfdcc ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _dbc .PdfObject ;Volume _dbc .PdfObject ;Synchronous _dbc .PdfObject ;Repeat _dbc .PdfObject ;Mix _dbc .PdfObject ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dbc .PdfObject ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_aegf :=NewPdfAnnotation ();_cgfg :=&PdfAnnotationSquiggly {};_cgfg .PdfAnnotation =_aegf ;_cgfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aegf .SetContext (_cgfg );return _cgfg ;};

// ToPdfObject implements interface PdfModel.
func (_daca *PdfAnnotationPolygon )ToPdfObject ()_dbc .PdfObject {_daca .PdfAnnotation .ToPdfObject ();_aef :=_daca ._gef ;_ggag :=_aef .PdfObject .(*_dbc .PdfObjectDictionary );_daca .PdfAnnotationMarkup .appendToPdfDictionary (_ggag );_ggag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_ggag .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_daca .Vertices );_ggag .SetIfNotNil ("\u004c\u0045",_daca .LE );_ggag .SetIfNotNil ("\u0042\u0053",_daca .BS );_ggag .SetIfNotNil ("\u0049\u0043",_daca .IC );_ggag .SetIfNotNil ("\u0042\u0045",_daca .BE );_ggag .SetIfNotNil ("\u0049\u0054",_daca .IT );_ggag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_daca .Measure );return _aef ;};func _abffg ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _gcffg };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bgefc *PdfPageResources )GetFontByName (keyName _dbc .PdfObjectName )(_dbc .PdfObject ,bool ){if _bgefc .Font ==nil {return nil ,false ;};_ccefd ,_ddcg :=_dbc .TraceToDirectObject (_bgefc .Font ).(*_dbc .PdfObjectDictionary );if !_ddcg {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dbc .TraceToDirectObject (_bgefc .Font ));return nil ,false ;};if _cfdfd :=_ccefd .Get (keyName );_cfdfd !=nil {return _cfdfd ,true ;};return nil ,false ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dbc .PdfObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gffdc *PdfReader )GetPageLabels ()(_dbc .PdfObject ,error ){_cgeda :=_dbc .ResolveReference (_gffdc ._gcaad .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cgeda ==nil {return nil ,nil ;};if !_gffdc ._fcbf {_eaef :=_gffdc .traverseObjectData (_cgeda );if _eaef !=nil {return nil ,_eaef ;};};return _cgeda ,nil ;};func (_efebe *XObjectImage )getParamsDict ()*_dbc .PdfObjectDictionary {_bfaac :=_dbc .MakeDict ();_bfaac .Set ("\u0057\u0069\u0064t\u0068",_dbc .MakeInteger (*_efebe .Width ));_bfaac .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_dbc .MakeInteger (*_efebe .Height ));_bfaac .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_dbc .MakeInteger (int64 (_efebe .ColorSpace .GetNumComponents ())));_bfaac .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbc .MakeInteger (*_efebe .BitsPerComponent ));return _bfaac ;};func (_dedg *PdfReader )newPdfActionMovieFromDict (_cbc *_dbc .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cbc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cbc .Get ("\u0054"),Operation :_cbc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fagac *OutlineItem )Insert (index uint ,item *OutlineItem ){_acegb :=uint (len (_fagac .Entries ));if index > _acegb {index =_acegb ;};_fagac .Entries =append (_fagac .Entries [:index ],append ([]*OutlineItem {item },_fagac .Entries [index :]...)...);};

// SetShadingByName sets a shading resource specified by keyName.
func (_dbdef *PdfPageResources )SetShadingByName (keyName _dbc .PdfObjectName ,shadingObj _dbc .PdfObject )error {if _dbdef .Shading ==nil {_dbdef .Shading =_dbc .MakeDict ();};_geeaa ,_aedfe :=_dbdef .Shading .(*_dbc .PdfObjectDictionary );if !_aedfe {return _dbc .ErrTypeError ;};_geeaa .Set (keyName ,shadingObj );return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_dbc .PdfObjectArray ;TI *_dbc .PdfObjectInteger ;I *_dbc .PdfObjectArray ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cdfd *BorderStyle )GetPdfName ()string {switch *_cdfd {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// ToPdfObject returns a stream object.
func (_cabcb *XObjectForm )ToPdfObject ()_dbc .PdfObject {_fdaegg :=_cabcb ._bacgb ;_egbga :=_fdaegg .PdfObjectDictionary ;if _cabcb .Filter !=nil {_egbga =_cabcb .Filter .MakeStreamDict ();_fdaegg .PdfObjectDictionary =_egbga ;};_egbga .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_egbga .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u006f\u0072\u006d"));_egbga .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cabcb .FormType );_egbga .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cabcb .BBox );_egbga .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cabcb .Matrix );if _cabcb .Resources !=nil {_egbga .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cabcb .Resources .ToPdfObject ());};_egbga .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cabcb .Group );_egbga .SetIfNotNil ("\u0052\u0065\u0066",_cabcb .Ref );_egbga .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cabcb .MetaData );_egbga .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cabcb .PieceInfo );_egbga .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cabcb .LastModified );_egbga .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cabcb .StructParent );_egbga .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cabcb .StructParents );_egbga .SetIfNotNil ("\u004f\u0050\u0049",_cabcb .OPI );_egbga .SetIfNotNil ("\u004f\u0043",_cabcb .OC );_egbga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cabcb .Name );_egbga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_cabcb .Stream ))));_fdaegg .Stream =_cabcb .Stream ;return _fdaegg ;};func (_cgeg *PdfWriter )addObject (_bcgdd _dbc .PdfObject )bool {_acfac :=_cgeg .hasObject (_bcgdd );if !_acfac {_cbbcf :=_dbc .ResolveReferencesDeep (_bcgdd ,_cgeg ._acdgca );if _cbbcf !=nil {_gge .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cbbcf );};_cgeg ._cded =append (_cgeg ._cded ,_bcgdd );_cgeg ._ebdbb [_bcgdd ]=struct{}{};return true ;};return false ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_fbbfd *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bebc :=_fbbfd .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bebc )> 0;_bgbdc :=_dbc .NewFlateEncoder ();_ccggfg :=_dbc .MakeArray ();if wrapContents {_gbeg ,_fggcb :=_dbc .MakeStream ([]byte ("\u0071\u000a"),_bgbdc );if _fggcb !=nil {return _fggcb ;};_ccggfg .Append (_gbeg );};_ccggfg .Append (_bebc ...);if wrapContents {_gbec ,_bbgfb :=_dbc .MakeStream ([]byte ("\u000a\u0051\u000a"),_bgbdc );if _bbgfb !=nil {return _bbgfb ;};_ccggfg .Append (_gbec );};_ddbfd ,_adfb :=_dbc .MakeStream (cs ,_bgbdc );if _adfb !=nil {return _adfb ;};_ccggfg .Append (_ddbfd );_fbbfd .Contents =_ccggfg ;return nil ;};func _deae (_eggc []*_dbc .PdfObjectStream )*_dbc .PdfObjectArray {if len (_eggc )==0{return nil ;};_abbeg :=make ([]_dbc .PdfObject ,0,len (_eggc ));for _ ,_dfgfc :=range _eggc {_abbeg =append (_abbeg ,_dfgfc );};return _dbc .MakeArray (_abbeg ...);};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_eef :=NewPdfAnnotation ();_ebd :=&PdfAnnotationProjection {};_ebd .PdfAnnotation =_eef ;_ebd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eef .SetContext (_ebd );return _ebd ;};func _cgg (_gccb _dbc .PdfObject )(*PdfFilespec ,error ){if _gccb ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_gccb );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _dbc .PdfObject ;_dabc []byte ;_ccfb *_dbc .PdfIndirectObject ;};func (_edbab *Image )resampleLowBits (_fedb []uint32 ){_baae :=_ggd .BytesPerLine (int (_edbab .Width ),int (_edbab .BitsPerComponent ),_edbab .ColorComponents );_ddcff :=make ([]byte ,_edbab .ColorComponents *_baae *int (_edbab .Height ));_edgd :=int (_edbab .BitsPerComponent )*_edbab .ColorComponents *int (_edbab .Width );_cfff :=uint8 (8);var (_aacb ,_fdaeg int ;_cgbdc uint32 ;);for _gefe :=0;_gefe < int (_edbab .Height );_gefe ++{_fdaeg =_gefe *_baae ;for _gbbdd :=0;_gbbdd < _edgd ;_gbbdd ++{_cgbdc =_fedb [_aacb ];_cfff -=uint8 (_edbab .BitsPerComponent );_ddcff [_fdaeg ]|=byte (_cgbdc )<<_cfff ;if _cfff ==0{_cfff =8;_fdaeg ++;};_aacb ++;};};_edbab .Data =_ddcff ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _dbc .PdfObject ;H _dbc .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cgedae *PdfPageResources )SetXObjectByName (keyName _dbc .PdfObjectName ,stream *_dbc .PdfObjectStream )error {if _cgedae .XObject ==nil {_cgedae .XObject =_dbc .MakeDict ();};_dcgab :=_dbc .TraceToDirectObject (_cgedae .XObject );_gffc ,_ffebg :=_dcgab .(*_dbc .PdfObjectDictionary );if !_ffebg {_gge .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cgedae .XObject ,_dcgab );return _ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gffc .Set (keyName ,stream );return nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_dbc .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_eegb *_dbc .PdfIndirectObject ;};func (_ceebg *PdfWriter )writeString (_gefgd string ){if _ceebg ._ecafa !=nil {return ;};_gbffb ,_egbfa :=_ceebg ._ecedd .WriteString (_gefgd );_ceebg ._fgafa +=int64 (_gbffb );_ceebg ._ecafa =_egbfa ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gfbaf *PdfFieldText )ToPdfObject ()_dbc .PdfObject {_gfbaf .PdfField .ToPdfObject ();_ceffb :=_gfbaf ._befed ;_efafg :=_ceffb .PdfObject .(*_dbc .PdfObjectDictionary );_efafg .Set ("\u0046\u0054",_dbc .MakeName ("\u0054\u0078"));if _gfbaf .DA !=nil {_efafg .Set ("\u0044\u0041",_gfbaf .DA );};if _gfbaf .Q !=nil {_efafg .Set ("\u0051",_gfbaf .Q );};if _gfbaf .DS !=nil {_efafg .Set ("\u0044\u0053",_gfbaf .DS );};if _gfbaf .RV !=nil {_efafg .Set ("\u0052\u0056",_gfbaf .RV );};if _gfbaf .MaxLen !=nil {_efafg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gfbaf .MaxLen );};return _ceffb ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_efgbge FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_efgbge .Mask ()&^fl .Mask ())};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cfge *PdfShadingType6 )ToPdfObject ()_dbc .PdfObject {_cfge .PdfShading .ToPdfObject ();_gcdc ,_dcagb :=_cfge .getShadingDict ();if _dcagb !=nil {_gge .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cfge .BitsPerCoordinate !=nil {_gcdc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cfge .BitsPerCoordinate );};if _cfge .BitsPerComponent !=nil {_gcdc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cfge .BitsPerComponent );};if _cfge .BitsPerFlag !=nil {_gcdc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cfge .BitsPerFlag );};if _cfge .Decode !=nil {_gcdc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cfge .Decode );};if _cfge .Function !=nil {if len (_cfge .Function )==1{_gcdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfge .Function [0].ToPdfObject ());}else {_bffdd :=_dbc .MakeArray ();for _ ,_bfabe :=range _cfge .Function {_bffdd .Append (_bfabe .ToPdfObject ());};_gcdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bffdd );};};return _cfge ._bdgfb ;};func _egfdf ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();return _gegcc };

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bbbg :=&PdfAppender {_acba :reader ._egge ,Reader :reader ,_dgb :reader ._efgcc ,_caac :reader ._gaaae };_efaa ,_bcge :=_bbbg ._acba .Seek (0,_ec .SeekEnd );if _bcge !=nil {return nil ,_bcge ;};_bbbg ._cfa =_efaa ;if _ ,_bcge =_bbbg ._acba .Seek (0,_ec .SeekStart );_bcge !=nil {return nil ,_bcge ;};_bbbg ._cdef ,_bcge =NewPdfReader (_bbbg ._acba );if _bcge !=nil {return nil ,_bcge ;};for _ ,_ddgd :=range _bbbg .Reader .GetObjectNums (){if _bbbg ._ccbg < _ddgd {_bbbg ._ccbg =_ddgd ;};};_bbbg ._bfcgf =_bbbg ._dgb .GetXrefTable ();_bbbg ._ggdf =_bbbg ._dgb .GetXrefOffset ();_bbbg ._cgedd =append (_bbbg ._cgedd ,_bbbg ._cdef .PageList ...);_bbbg ._agag =make (map[_dbc .PdfObject ]struct{});_bbbg ._cbecd =make (map[_dbc .PdfObject ]int64 );_bbbg ._begf =make (map[_dbc .PdfObject ]struct{});_bbbg ._fece =_bbbg ._cdef .AcroForm ;_bbbg ._fca =_bbbg ._cdef .DSS ;return _bbbg ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fadda *PdfSignature )GetContainingPdfObject ()_dbc .PdfObject {return _fadda ._cedf };

// DecodeArray returns the component range values for the Separation colorspace.
func (_ecba *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_cgfe *PdfReader )newPdfAnnotationStrikeOut (_fad *_dbc .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_abgg :=PdfAnnotationStrikeOut {};_cfbd ,_bde :=_cgfe .newPdfAnnotationMarkupFromDict (_fad );if _bde !=nil {return nil ,_bde ;};_abgg .PdfAnnotationMarkup =_cfbd ;_abgg .QuadPoints =_fad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abgg ,nil ;};

// PdfVersion returns version of the PDF file.
func (_ecgac *PdfReader )PdfVersion ()_dbc .Version {return _ecgac ._efgcc .PdfVersion ()};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _dbc .PdfObject ;ColorSpace _dbc .PdfObject ;Pattern _dbc .PdfObject ;Shading _dbc .PdfObject ;XObject _dbc .PdfObject ;Font _dbc .PdfObject ;ProcSet _dbc .PdfObject ;Properties _dbc .PdfObject ;_gddga *_dbc .PdfObjectDictionary ;_agbga *PdfPageResourcesColorspaces ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_aad :=NewPdfAnnotation ();_gded :=&PdfAnnotationRichMedia {};_gded .PdfAnnotation =_aad ;_aad .SetContext (_gded );return _gded ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gfcg *PdfFieldButton )IsPush ()bool {return _gfcg .GetType ()==ButtonTypePush };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_dbc .PdfObjectString ;Author *_dbc .PdfObjectString ;Subject *_dbc .PdfObjectString ;Keywords *_dbc .PdfObjectString ;Creator *_dbc .PdfObjectString ;Producer *_dbc .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_dbc .PdfObjectName ;_fbfca *_dbc .PdfObjectDictionary ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bbcgc *_dbc .PdfIndirectObject ;};func (_aggbd *PdfSignature )extractChainFromPKCS7 ()([]*_gg .Certificate ,error ){_fbdfb ,_caaaa :=_egg .Parse (_aggbd .Contents .Bytes ());if _caaaa !=nil {return nil ,_caaaa ;};return _fbdfb .Certificates ,nil ;};func (_gecb *PdfReader )newPdfAnnotationFromIndirectObject (_cbdd *_dbc .PdfIndirectObject )(*PdfAnnotation ,error ){_bfd ,_cbae :=_cbdd .PdfObject .(*_dbc .PdfObjectDictionary );if !_cbae {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_gecb ._dcga .GetModelFromPrimitive (_bfd );model !=nil {_gfb ,_eeg :=model .(*PdfAnnotation );if !_eeg {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _gfb ,nil ;};_cadf :=&PdfAnnotation {};_cadf ._gef =_cbdd ;_gecb ._dcga .Register (_bfd ,_cadf );if _afc :=_bfd .Get ("\u0054\u0079\u0070\u0065");_afc !=nil {_aged ,_fccg :=_afc .(*_dbc .PdfObjectName );if !_fccg {_gge .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afc );}else {if *_aged !="\u0041\u006e\u006eo\u0074"{_gge .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_aged );};};};if _ggbf :=_bfd .Get ("\u0052\u0065\u0063\u0074");_ggbf !=nil {_cadf .Rect =_ggbf ;};if _gega :=_bfd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gega !=nil {_cadf .Contents =_gega ;};if _ggea :=_bfd .Get ("\u0050");_ggea !=nil {_cadf .P =_ggea ;};if _ada :=_bfd .Get ("\u004e\u004d");_ada !=nil {_cadf .NM =_ada ;};if _ecbg :=_bfd .Get ("\u004d");_ecbg !=nil {_cadf .M =_ecbg ;};if _cde :=_bfd .Get ("\u0046");_cde !=nil {_cadf .F =_cde ;};if _gfag :=_bfd .Get ("\u0041\u0050");_gfag !=nil {_cadf .AP =_gfag ;};if _ggf :=_bfd .Get ("\u0041\u0053");_ggf !=nil {_cadf .AS =_ggf ;};if _dgdf :=_bfd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_dgdf !=nil {_cadf .Border =_dgdf ;};if _ced :=_bfd .Get ("\u0043");_ced !=nil {_cadf .C =_ced ;};if _dgg :=_bfd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dgg !=nil {_cadf .StructParent =_dgg ;};if _cggc :=_bfd .Get ("\u004f\u0043");_cggc !=nil {_cadf .OC =_cggc ;};_bcba :=_bfd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bcba ==nil {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_cadf ._fgf =nil ;return _cadf ,nil ;};_cdcg ,_gaae :=_bcba .(*_dbc .PdfObjectName );if !_gaae {_gge .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bcba );return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bcba );};switch *_cdcg {case "\u0054\u0065\u0078\u0074":_dge ,_dbd :=_gecb .newPdfAnnotationTextFromDict (_bfd );if _dbd !=nil {return nil ,_dbd ;};_dge .PdfAnnotation =_cadf ;_cadf ._fgf =_dge ;return _cadf ,nil ;case "\u004c\u0069\u006e\u006b":_dafa ,_fdf :=_gecb .newPdfAnnotationLinkFromDict (_bfd );if _fdf !=nil {return nil ,_fdf ;};_dafa .PdfAnnotation =_cadf ;_cadf ._fgf =_dafa ;return _cadf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_effb ,_dab :=_gecb .newPdfAnnotationFreeTextFromDict (_bfd );if _dab !=nil {return nil ,_dab ;};_effb .PdfAnnotation =_cadf ;_cadf ._fgf =_effb ;return _cadf ,nil ;case "\u004c\u0069\u006e\u0065":_gdeb ,_cbdb :=_gecb .newPdfAnnotationLineFromDict (_bfd );if _cbdb !=nil {return nil ,_cbdb ;};_gdeb .PdfAnnotation =_cadf ;_cadf ._fgf =_gdeb ;_gge .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cadf ,_cadf );_gge .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gdeb ,_gdeb );_gge .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gdeb .PdfAnnotationMarkup ,_gdeb .PdfAnnotationMarkup );return _cadf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_acge ,_efc :=_gecb .newPdfAnnotationSquareFromDict (_bfd );if _efc !=nil {return nil ,_efc ;};_acge .PdfAnnotation =_cadf ;_cadf ._fgf =_acge ;return _cadf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_aaa ,_bcbf :=_gecb .newPdfAnnotationCircleFromDict (_bfd );if _bcbf !=nil {return nil ,_bcbf ;};_aaa .PdfAnnotation =_cadf ;_cadf ._fgf =_aaa ;return _cadf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_acga ,_ccg :=_gecb .newPdfAnnotationPolygonFromDict (_bfd );if _ccg !=nil {return nil ,_ccg ;};_acga .PdfAnnotation =_cadf ;_cadf ._fgf =_acga ;return _cadf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bdff ,_ccf :=_gecb .newPdfAnnotationPolyLineFromDict (_bfd );if _ccf !=nil {return nil ,_ccf ;};_bdff .PdfAnnotation =_cadf ;_cadf ._fgf =_bdff ;return _cadf ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_eec ,_dafg :=_gecb .newPdfAnnotationHighlightFromDict (_bfd );if _dafg !=nil {return nil ,_dafg ;};_eec .PdfAnnotation =_cadf ;_cadf ._fgf =_eec ;return _cadf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_cfb ,_aga :=_gecb .newPdfAnnotationUnderlineFromDict (_bfd );if _aga !=nil {return nil ,_aga ;};_cfb .PdfAnnotation =_cadf ;_cadf ._fgf =_cfb ;return _cadf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bdfd ,_gdfc :=_gecb .newPdfAnnotationSquigglyFromDict (_bfd );if _gdfc !=nil {return nil ,_gdfc ;};_bdfd .PdfAnnotation =_cadf ;_cadf ._fgf =_bdfd ;return _cadf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_deff ,_fcfe :=_gecb .newPdfAnnotationStrikeOut (_bfd );if _fcfe !=nil {return nil ,_fcfe ;};_deff .PdfAnnotation =_cadf ;_cadf ._fgf =_deff ;return _cadf ,nil ;case "\u0043\u0061\u0072e\u0074":_abgc ,_cade :=_gecb .newPdfAnnotationCaretFromDict (_bfd );if _cade !=nil {return nil ,_cade ;};_abgc .PdfAnnotation =_cadf ;_cadf ._fgf =_abgc ;return _cadf ,nil ;case "\u0053\u0074\u0061m\u0070":_bbdc ,_bfec :=_gecb .newPdfAnnotationStampFromDict (_bfd );if _bfec !=nil {return nil ,_bfec ;};_bbdc .PdfAnnotation =_cadf ;_cadf ._fgf =_bbdc ;return _cadf ,nil ;case "\u0049\u006e\u006b":_dcge ,_gfd :=_gecb .newPdfAnnotationInkFromDict (_bfd );if _gfd !=nil {return nil ,_gfd ;};_dcge .PdfAnnotation =_cadf ;_cadf ._fgf =_dcge ;return _cadf ,nil ;case "\u0050\u006f\u0070u\u0070":_fbc ,_gbda :=_gecb .newPdfAnnotationPopupFromDict (_bfd );if _gbda !=nil {return nil ,_gbda ;};_fbc .PdfAnnotation =_cadf ;_cadf ._fgf =_fbc ;return _cadf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cdb ,_bgfd :=_gecb .newPdfAnnotationFileAttachmentFromDict (_bfd );if _bgfd !=nil {return nil ,_bgfd ;};_cdb .PdfAnnotation =_cadf ;_cadf ._fgf =_cdb ;return _cadf ,nil ;case "\u0053\u006f\u0075n\u0064":_ddaf ,_bbdb :=_gecb .newPdfAnnotationSoundFromDict (_bfd );if _bbdb !=nil {return nil ,_bbdb ;};_ddaf .PdfAnnotation =_cadf ;_cadf ._fgf =_ddaf ;return _cadf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fgg ,_gad :=_gecb .newPdfAnnotationRichMediaFromDict (_bfd );if _gad !=nil {return nil ,_gad ;};_fgg .PdfAnnotation =_cadf ;_cadf ._fgf =_fgg ;return _cadf ,nil ;case "\u004d\u006f\u0076i\u0065":_ecee ,_egd :=_gecb .newPdfAnnotationMovieFromDict (_bfd );if _egd !=nil {return nil ,_egd ;};_ecee .PdfAnnotation =_cadf ;_cadf ._fgf =_ecee ;return _cadf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bfbe ,_gedg :=_gecb .newPdfAnnotationScreenFromDict (_bfd );if _gedg !=nil {return nil ,_gedg ;};_bfbe .PdfAnnotation =_cadf ;_cadf ._fgf =_bfbe ;return _cadf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fbbg ,_abb :=_gecb .newPdfAnnotationWidgetFromDict (_bfd );if _abb !=nil {return nil ,_abb ;};_fbbg .PdfAnnotation =_cadf ;_cadf ._fgf =_fbbg ;return _cadf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_eaa ,_agbd :=_gecb .newPdfAnnotationPrinterMarkFromDict (_bfd );if _agbd !=nil {return nil ,_agbd ;};_eaa .PdfAnnotation =_cadf ;_cadf ._fgf =_eaa ;return _cadf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cead ,_gcf :=_gecb .newPdfAnnotationTrapNetFromDict (_bfd );if _gcf !=nil {return nil ,_gcf ;};_cead .PdfAnnotation =_cadf ;_cadf ._fgf =_cead ;return _cadf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bff ,_fdfc :=_gecb .newPdfAnnotationWatermarkFromDict (_bfd );if _fdfc !=nil {return nil ,_fdfc ;};_bff .PdfAnnotation =_cadf ;_cadf ._fgf =_bff ;return _cadf ,nil ;case "\u0033\u0044":_ebc ,_eedd :=_gecb .newPdfAnnotation3DFromDict (_bfd );if _eedd !=nil {return nil ,_eedd ;};_ebc .PdfAnnotation =_cadf ;_cadf ._fgf =_ebc ;return _cadf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cecc ,_ede :=_gecb .newPdfAnnotationProjectionFromDict (_bfd );if _ede !=nil {return nil ,_ede ;};_cecc .PdfAnnotation =_cadf ;_cadf ._fgf =_cecc ;return _cadf ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_ebdc ,_dceg :=_gecb .newPdfAnnotationRedactFromDict (_bfd );if _dceg !=nil {return nil ,_dceg ;};_ebdc .PdfAnnotation =_cadf ;_cadf ._fgf =_ebdc ;return _cadf ,nil ;};_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cdcg );return nil ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_begd *PdfColorspaceICCBased )ToPdfObject ()_dbc .PdfObject {_fbad :=&_dbc .PdfObjectArray {};_fbad .Append (_dbc .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _befa *_dbc .PdfObjectStream ;if _begd ._acea !=nil {_befa =_begd ._acea ;}else {_befa =&_dbc .PdfObjectStream {};};_fcdg :=_dbc .MakeDict ();_fcdg .Set ("\u004e",_dbc .MakeInteger (int64 (_begd .N )));if _begd .Alternate !=nil {_fcdg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_begd .Alternate .ToPdfObject ());};if _begd .Metadata !=nil {_fcdg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_begd .Metadata );};if _begd .Range !=nil {var _fcfa []_dbc .PdfObject ;for _ ,_dad :=range _begd .Range {_fcfa =append (_fcfa ,_dbc .MakeFloat (_dad ));};_fcdg .Set ("\u0052\u0061\u006eg\u0065",_dbc .MakeArray (_fcfa ...));};_fcdg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_begd .Data ))));_befa .Stream =_begd .Data ;_befa .PdfObjectDictionary =_fcdg ;_fbad .Append (_befa );if _begd ._ggcaf !=nil {_begd ._ggcaf .PdfObject =_fbad ;return _begd ._ggcaf ;};return _fbad ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_feebb *PdfPageResources )GetPatternByName (keyName _dbc .PdfObjectName )(*PdfPattern ,bool ){if _feebb .Pattern ==nil {return nil ,false ;};_aagac ,_bcdg :=_dbc .TraceToDirectObject (_feebb .Pattern ).(*_dbc .PdfObjectDictionary );if !_bcdg {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_feebb .Pattern );return nil ,false ;};if _cfaac :=_aagac .Get (keyName );_cfaac !=nil {_aafba ,_fccag :=_aecd (_cfaac );if _fccag !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_fccag );return nil ,false ;};return _aafba ,true ;};return nil ,false ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_cbff FieldFlag )Mask ()uint32 {return uint32 (_cbff )};func (_eeb *PdfReader )newPdfActionURIFromDict (_acac *_dbc .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_acac .Get ("\u0055\u0052\u0049"),IsMap :_acac .Get ("\u0049\u0073\u004da\u0070")},nil ;};var (_ccfbf _b .Mutex ;_gegcc ="";_feddb _f .Time ;_acaeg ="";_afgge ="";_bbfadf _f .Time ;_bceade ="";_gcffg ="";_ddabc ="";);

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gddbcb :=PdfDate {};_bcead :=_bffcd .FindAllStringSubmatch (dateStr ,1);if len (_bcead )< 1{return _gddbcb ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_bcead [0])!=10{return _gddbcb ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_gddbcb ._dagd ,_ =_gb .ParseInt (_bcead [0][1],10,32);_gddbcb ._fedfe ,_ =_gb .ParseInt (_bcead [0][2],10,32);_gddbcb ._aeed ,_ =_gb .ParseInt (_bcead [0][3],10,32);_gddbcb ._adbde ,_ =_gb .ParseInt (_bcead [0][4],10,32);_gddbcb ._eced ,_ =_gb .ParseInt (_bcead [0][5],10,32);_gddbcb ._ggcb ,_ =_gb .ParseInt (_bcead [0][6],10,32);if len (_bcead [0][7])> 0{_gddbcb ._efddc =_bcead [0][7][0];}else {_gddbcb ._efddc ='+';};if len (_bcead [0][8])> 0{_gddbcb ._ebbca ,_ =_gb .ParseInt (_bcead [0][8],10,32);}else {_gddbcb ._ebbca =0;};if len (_bcead [0][9])> 0{_gddbcb ._cffca ,_ =_gb .ParseInt (_bcead [0][9],10,32);}else {_gddbcb ._cffca =0;};return _gddbcb ,nil ;};func _cfbc ()string {_bafcf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _egedd _gd .Buffer ;for _aaca :=0;_aaca < 6;_aaca ++{_egedd .WriteRune (rune (_bafcf [_be .Intn (len (_bafcf ))]));};return _egedd .String ();};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_adcbe *Image )ConvertToBinary ()error {if _adcbe .ColorComponents ==1&&_adcbe .BitsPerComponent ==1{return nil ;};_faaf ,_gagbe :=_adcbe .ToGoImage ();if _gagbe !=nil {return _gagbe ;};_gbaee ,_gagbe :=_ggd .MonochromeConverter .Convert (_faaf );if _gagbe !=nil {return _gagbe ;};_adcbe .BitsPerComponent =1;_adcbe .ColorComponents =1;_adcbe .Data =_gbaee .Base ().Data ;return nil ;};func _gbcgbe (_afca *_dbc .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gdbga :=PdfShadingType2 {};_gcggff :=_afca .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gcggff ==nil {_gge .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_cegcfd ,_cbecg :=_gcggff .(*_dbc .PdfObjectArray );if !_cbecg {_gge .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcggff );return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _cegcfd .Len ()!=4{_gge .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cegcfd .Len ());return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_gdbga .Coords =_cegcfd ;if _ccgaa :=_afca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ccgaa !=nil {_ccgaa =_dbc .TraceToDirectObject (_ccgaa );_ccebf ,_ggdd :=_ccgaa .(*_dbc .PdfObjectArray );if !_ggdd {_gge .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccgaa );return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdbga .Domain =_ccebf ;};_gcggff =_afca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gcggff ==nil {_gge .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_gdbga .Function =[]PdfFunction {};if _fdfb ,_dcgd :=_gcggff .(*_dbc .PdfObjectArray );_dcgd {for _ ,_gbefc :=range _fdfb .Elements (){_ggffe ,_caec :=_edcfc (_gbefc );if _caec !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caec );return nil ,_caec ;};_gdbga .Function =append (_gdbga .Function ,_ggffe );};}else {_efbbc ,_ceafd :=_edcfc (_gcggff );if _ceafd !=nil {_gge .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ceafd );return nil ,_ceafd ;};_gdbga .Function =append (_gdbga .Function ,_efbbc );};if _fefee :=_afca .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fefee !=nil {_fefee =_dbc .TraceToDirectObject (_fefee );_gdffe ,_dabg :=_fefee .(*_dbc .PdfObjectArray );if !_dabg {_gge .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fefee );return nil ,_dbc .ErrTypeError ;};if _gdffe .Len ()!=2{_gge .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gdffe .Len ());return nil ,ErrInvalidAttribute ;};_gdbga .Extend =_gdffe ;};return &_gdbga ,nil ;};func (_bdcf *PdfReader )newPdfAnnotationLinkFromDict (_ggfe *_dbc .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bcaa :=PdfAnnotationLink {};_bcaa .A =_ggfe .Get ("\u0041");_bcaa .Dest =_ggfe .Get ("\u0044\u0065\u0073\u0074");_bcaa .H =_ggfe .Get ("\u0048");_bcaa .PA =_ggfe .Get ("\u0050\u0041");_bcaa .QuadPoints =_ggfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bcaa .BS =_ggfe .Get ("\u0042\u0053");return &_bcaa ,nil ;};func _dfddd (_fbbgc *_ggd .ImageBase )(_gggb Image ){_gggb .Width =int64 (_fbbgc .Width );_gggb .Height =int64 (_fbbgc .Height );_gggb .BitsPerComponent =int64 (_fbbgc .BitsPerComponent );_gggb .ColorComponents =_fbbgc .ColorComponents ;_gggb .Data =_fbbgc .Data ;_gggb ._fgabe =_fbbgc .Decode ;_gggb ._gaaea =_fbbgc .Alpha ;return _gggb ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ggeae *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_deef ,_dfbf :=color .(*PdfColorDeviceCMYK );if !_dfbf {_gge .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgegd :=_deef .C ();_fcef :=_deef .M ();_aeff :=_deef .Y ();_ebab :=_deef .K ();_bgegd =_bgegd *(1-_ebab )+_ebab ;_fcef =_fcef *(1-_ebab )+_ebab ;_aeff =_aeff *(1-_ebab )+_ebab ;_eafd :=1-_bgegd ;_aaddc :=1-_fcef ;_bfag :=1-_aeff ;return NewPdfColorDeviceRGB (_eafd ,_aaddc ,_bfag ),nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns the PDF representation of the function.
func (_begaaa *PdfFunctionType4 )ToPdfObject ()_dbc .PdfObject {_fcgff :=_begaaa ._dcdffg ;if _fcgff ==nil {_begaaa ._dcdffg =&_dbc .PdfObjectStream {};_fcgff =_begaaa ._dcdffg ;};_efba :=_dbc .MakeDict ();_efba .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_dbc .MakeInteger (4));_fgbff :=&_dbc .PdfObjectArray {};for _ ,_fagcd :=range _begaaa .Domain {_fgbff .Append (_dbc .MakeFloat (_fagcd ));};_efba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgbff );_dgfeb :=&_dbc .PdfObjectArray {};for _ ,_eeea :=range _begaaa .Range {_dgfeb .Append (_dbc .MakeFloat (_eeea ));};_efba .Set ("\u0052\u0061\u006eg\u0065",_dgfeb );if _begaaa ._fbea ==nil &&_begaaa .Program !=nil {_begaaa ._fbea =[]byte (_begaaa .Program .String ());};_efba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dbc .MakeInteger (int64 (len (_begaaa ._fbea ))));_fcgff .Stream =_begaaa ._fbea ;_fcgff .PdfObjectDictionary =_efba ;return _fcgff ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fgaa :=PdfColorDeviceRGB {r ,g ,b };return &_fgaa ;};func (_cbe *PdfReader )newPdfAnnotation3DFromDict (_bfac *_dbc .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gdff :=PdfAnnotation3D {};_gdff .T3DD =_bfac .Get ("\u0033\u0044\u0044");_gdff .T3DV =_bfac .Get ("\u0033\u0044\u0056");_gdff .T3DA =_bfac .Get ("\u0033\u0044\u0041");_gdff .T3DI =_bfac .Get ("\u0033\u0044\u0049");_gdff .T3DB =_bfac .Get ("\u0033\u0044\u0042");return &_gdff ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_facgg *PdfFontDescriptor )ToPdfObject ()_dbc .PdfObject {_dbad :=_dbc .MakeDict ();if _facgg ._fedde ==nil {_facgg ._fedde =&_dbc .PdfIndirectObject {};};_facgg ._fedde .PdfObject =_dbad ;_dbad .Set ("\u0054\u0079\u0070\u0065",_dbc .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _facgg .FontName !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_facgg .FontName );};if _facgg .FontFamily !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_facgg .FontFamily );};if _facgg .FontStretch !=nil {_dbad .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_facgg .FontStretch );};if _facgg .FontWeight !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_facgg .FontWeight );};if _facgg .Flags !=nil {_dbad .Set ("\u0046\u006c\u0061g\u0073",_facgg .Flags );};if _facgg .FontBBox !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_facgg .FontBBox );};if _facgg .ItalicAngle !=nil {_dbad .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_facgg .ItalicAngle );};if _facgg .Ascent !=nil {_dbad .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_facgg .Ascent );};if _facgg .Descent !=nil {_dbad .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_facgg .Descent );};if _facgg .Leading !=nil {_dbad .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_facgg .Leading );};if _facgg .CapHeight !=nil {_dbad .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_facgg .CapHeight );};if _facgg .XHeight !=nil {_dbad .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_facgg .XHeight );};if _facgg .StemV !=nil {_dbad .Set ("\u0053\u0074\u0065m\u0056",_facgg .StemV );};if _facgg .StemH !=nil {_dbad .Set ("\u0053\u0074\u0065m\u0048",_facgg .StemH );};if _facgg .AvgWidth !=nil {_dbad .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_facgg .AvgWidth );};if _facgg .MaxWidth !=nil {_dbad .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_facgg .MaxWidth );};if _facgg .MissingWidth !=nil {_dbad .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_facgg .MissingWidth );};if _facgg .FontFile !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_facgg .FontFile );};if _facgg .FontFile2 !=nil {_dbad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_facgg .FontFile2 );};if _facgg .FontFile3 !=nil {_dbad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_facgg .FontFile3 );};if _facgg .CharSet !=nil {_dbad .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_facgg .CharSet );};if _facgg .Style !=nil {_dbad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_facgg .FontName );};if _facgg .Lang !=nil {_dbad .Set ("\u004c\u0061\u006e\u0067",_facgg .Lang );};if _facgg .FD !=nil {_dbad .Set ("\u0046\u0044",_facgg .FD );};if _facgg .CIDSet !=nil {_dbad .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_facgg .CIDSet );};return _facgg ._fedde ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _dbc .PdfObject ;V _dbc .PdfObject ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_dbc .PdfObjectInteger ;BitsPerComponent *_dbc .PdfObjectInteger ;BitsPerFlag *_dbc .PdfObjectInteger ;Decode *_dbc .PdfObjectArray ;Function []PdfFunction ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ebebc pdfFontType0 )GetRuneMetrics (r rune )(_aca .CharMetrics ,bool ){if _ebebc .DescendantFont ==nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ebebc );return _aca .CharMetrics {},false ;};return _ebebc .DescendantFont .GetRuneMetrics (r );};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_acaeg =creator };func (_fbafb *LTV )buildCertChain (_ceceg ,_cbcdc []*_gg .Certificate )([]*_gg .Certificate ,map[string ]*_gg .Certificate ,error ){_afgf :=map[string ]*_gg .Certificate {};for _ ,_gdcga :=range _ceceg {_afgf [_gdcga .Subject .CommonName ]=_gdcga ;};_fdee :=_ceceg ;for _ ,_fcbedf :=range _cbcdc {_bbfad :=_fcbedf .Subject .CommonName ;if _ ,_dddg :=_afgf [_bbfad ];_dddg {continue ;};_afgf [_bbfad ]=_fcbedf ;_fdee =append (_fdee ,_fcbedf );};if len (_fdee )==0{return nil ,nil ,ErrSignNoCertificates ;};var _cdegb error ;for _ebfge :=_fdee [0];_ebfge !=nil &&!_fbafb .CertClient .IsCA (_ebfge );{_cbce ,_bgbeg :=_afgf [_ebfge .Issuer .CommonName ];if !_bgbeg {if _cbce ,_cdegb =_fbafb .CertClient .GetIssuer (_ebfge );_cdegb !=nil {_gge .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_cdegb );break ;};_afgf [_ebfge .Issuer .CommonName ]=_cbce ;_fdee =append (_fdee ,_cbce );};_ebfge =_cbce ;};return _fdee ,_afgf ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_agcd []_dbc .PdfObject )([]_dbc .PdfObject ,error );};func _fdfde (_fgaaf *XObjectImage )error {if _fgaaf .SMask ==nil {return nil ;};_dgcgg ,_dgege :=_fgaaf .SMask .(*_dbc .PdfObjectStream );if !_dgege {_gge .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _dbc .ErrTypeError ;};_cgbc :=_dgcgg .PdfObjectDictionary ;_fcbbe :=_cgbc .Get ("\u004d\u0061\u0074t\u0065");if _fcbbe ==nil {return nil ;};_adebf ,_eefbc :=_dbac (_fcbbe .(*_dbc .PdfObjectArray ));if _eefbc !=nil {return _eefbc ;};_bbegae :=_dbc .MakeArrayFromFloats ([]float64 {_adebf });_cgbc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bbegae );return nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eabe *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aecaf :=vals [0];if _aecaf < 0.0||_aecaf > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_degf :=vals [1];if _degf < 0.0||_degf > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acdc :=vals [2];if _acdc < 0.0||_acdc > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedf :=vals [3];if _dedf < 0.0||_dedf > 1.0{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edeg :=NewPdfColorDeviceCMYK (_aecaf ,_degf ,_acdc ,_dedf );return _edeg ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dee :=NewPdfAnnotation ();_cdg :=&PdfAnnotationScreen {};_cdg .PdfAnnotation =_dee ;_dee .SetContext (_cdg );return _cdg ;};

// ToPdfObject implements interface PdfModel.
func (_cgc *PdfActionMovie )ToPdfObject ()_dbc .PdfObject {_cgc .PdfAction .ToPdfObject ();_gaa :=_cgc ._ff ;_bcbd :=_gaa .PdfObject .(*_dbc .PdfObjectDictionary );_bcbd .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeMovie )));_bcbd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_cgc .Annotation );_bcbd .SetIfNotNil ("\u0054",_cgc .T );_bcbd .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_cgc .Operation );return _gaa ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_adbe *PdfReader )GetOutlines ()(*Outline ,error ){if _adbe ==nil {return nil ,_ge .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_geffef :=_adbe .GetOutlineTree ();if _geffef ==nil {return nil ,_ge .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _ffcg func (_fcfaga *PdfOutlineTreeNode ,_afaga *[]*OutlineItem );_ffcg =func (_efdcd *PdfOutlineTreeNode ,_cfbfa *[]*OutlineItem ){if _efdcd ==nil {return ;};if _efdcd ._cadfc ==nil {_gge .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _gcec *OutlineItem ;if _adfdf ,_dddca :=_efdcd ._cadfc .(*PdfOutlineItem );_dddca {_ebdce :=_adfdf .Dest ;if (_ebdce ==nil ||_dbc .IsNullObject (_ebdce ))&&_adfdf .A !=nil {if _adbee ,_eecfa :=_dbc .GetDict (_adfdf .A );_eecfa {_ebdce ,_ =_dbc .GetArray (_adbee .Get ("\u0044"));};};var _gegca OutlineDest ;if _ebdce !=nil &&!_dbc .IsNullObject (_ebdce ){if _dgfcd ,_fabdg :=_bffdg (_ebdce ,_adbe );_fabdg ==nil {_gegca =*_dgfcd ;}else {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_ebdce ,_fabdg );};};_gcec =NewOutlineItem (_adfdf .Title .Decoded (),_gegca );*_cfbfa =append (*_cfbfa ,_gcec );if _adfdf .Next !=nil {_ffcg (_adfdf .Next ,_cfbfa );};};if _efdcd .First !=nil {if _gcec !=nil {_cfbfa =&_gcec .Entries ;};_ffcg (_efdcd .First ,_cfbfa );};};_ggdgf :=NewOutline ();_ffcg (_geffef ,&_ggdgf .Entries );return _ggdgf ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_fgbd *PdfReader )newPdfAnnotationCaretFromDict (_gbdag *_dbc .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_agbdb :=PdfAnnotationCaret {};_edg ,_gfba :=_fgbd .newPdfAnnotationMarkupFromDict (_gbdag );if _gfba !=nil {return nil ,_gfba ;};_agbdb .PdfAnnotationMarkup =_edg ;_agbdb .RD =_gbdag .Get ("\u0052\u0044");_agbdb .Sy =_gbdag .Get ("\u0053\u0079");return &_agbdb ,nil ;};

// Y returns the value of the yellow component of the color.
func (_efec *PdfColorDeviceCMYK )Y ()float64 {return _efec [2]};func (_fdecgc *PdfWriter )addObjects (_cdcdg _dbc .PdfObject )error {_gge .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _cbcaa ,_bbac :=_cdcdg .(*_dbc .PdfIndirectObject );_bbac {_gge .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gge .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cdcdg ,_cbcaa );_gge .Log .Trace ("\u002d\u0020\u0025\u0073",_cbcaa .PdfObject );if _fdecgc .addObject (_cbcaa ){_aeec :=_fdecgc .addObjects (_cbcaa .PdfObject );if _aeec !=nil {return _aeec ;};};return nil ;};if _eggad ,_ccbbg :=_cdcdg .(*_dbc .PdfObjectStream );_ccbbg {_gge .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gge .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cdcdg ,_cdcdg );if _fdecgc .addObject (_eggad ){_fagde :=_fdecgc .addObjects (_eggad .PdfObjectDictionary );if _fagde !=nil {return _fagde ;};};return nil ;};if _gcefe ,_ddceg :=_cdcdg .(*_dbc .PdfObjectDictionary );_ddceg {_gge .Log .Trace ("\u0044\u0069\u0063\u0074");_gge .Log .Trace ("\u002d\u0020\u0025\u0073",_cdcdg );for _ ,_ebbcf :=range _gcefe .Keys (){_dgee :=_gcefe .Get (_ebbcf );if _dfdf ,_bfceg :=_dgee .(*_dbc .PdfObjectReference );_bfceg {_dgee =_dfdf .Resolve ();_gcefe .Set (_ebbcf ,_dgee );};if _ebbcf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _deecd :=_fdecgc .addObjects (_dgee );_deecd !=nil {return _deecd ;};}else {if _ ,_fbeff :=_dgee .(*_dbc .PdfObjectNull );_fbeff {continue ;};if _cbbgf :=_fdecgc .hasObject (_dgee );!_cbbgf {_gge .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_dgee ,_dgee ,_dgee );_fdecgc ._aeeg [_dgee ]=append (_fdecgc ._aeeg [_dgee ],_gcefe );};};};return nil ;};if _gcece ,_cfbdd :=_cdcdg .(*_dbc .PdfObjectArray );_cfbdd {_gge .Log .Trace ("\u0041\u0072\u0072a\u0079");_gge .Log .Trace ("\u002d\u0020\u0025\u0073",_cdcdg );if _gcece ==nil {return _ge .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _ccbad ,_cgfbb :=range _gcece .Elements (){if _ecegb ,_febfe :=_cgfbb .(*_dbc .PdfObjectReference );_febfe {_cgfbb =_ecegb .Resolve ();_gcece .Set (_ccbad ,_cgfbb );};if _efeb :=_fdecgc .addObjects (_cgfbb );_efeb !=nil {return _efeb ;};};return nil ;};if _ ,_geefc :=_cdcdg .(*_dbc .PdfObjectReference );_geefc {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cdcdg );return _ge .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cagb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_dbc .PdfObject {_agda :=_dbc .MakeDict ();if _cagb .Subtype !=nil {_agda .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cagb .Subtype );};_agda .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cagb .Colorants );_agda .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cagb .Process );_agda .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cagb .MixingHints );if _cagb ._dded !=nil {_cagb ._dded .PdfObject =_agda ;return _cagb ._dded ;};return _agda ;};func _gcca (_addg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_addg }};

// IsColored specifies if the pattern is colored.
func (_egfbe *PdfTilingPattern )IsColored ()bool {if _egfbe .PaintType !=nil &&*_egfbe .PaintType ==1{return true ;};return false ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fb .Permissions ;Algorithm EncryptionAlgorithm ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _dbc .PdfObjectArray )(*PdfRectangle ,error ){_bbcfd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _geegc error ;_bbcfd .Llx ,_geegc =_dbc .GetNumberAsFloat (arr .Get (0));if _geegc !=nil {return nil ,_geegc ;};_bbcfd .Lly ,_geegc =_dbc .GetNumberAsFloat (arr .Get (1));if _geegc !=nil {return nil ,_geegc ;};_bbcfd .Urx ,_geegc =_dbc .GetNumberAsFloat (arr .Get (2));if _geegc !=nil {return nil ,_geegc ;};_bbcfd .Ury ,_geegc =_dbc .GetNumberAsFloat (arr .Get (3));if _geegc !=nil {return nil ,_geegc ;};return &_bbcfd ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_fge :=NewPdfAnnotation ();_ceab :=&PdfAnnotationUnderline {};_ceab .PdfAnnotation =_fge ;_ceab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fge .SetContext (_ceab );return _ceab ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_geg :=NewPdfAction ();_bfa :=&PdfActionNamed {};_bfa .PdfAction =_geg ;_geg .SetContext (_bfa );return _bfa ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cbaaf *PdfPageResources )GetXObjectByName (keyName _dbc .PdfObjectName )(*_dbc .PdfObjectStream ,XObjectType ){if _cbaaf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_feddg ,_bcadfe :=_dbc .TraceToDirectObject (_cbaaf .XObject ).(*_dbc .PdfObjectDictionary );if !_bcadfe {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbc .TraceToDirectObject (_cbaaf .XObject ));return nil ,XObjectTypeUndefined ;};if _aeaea :=_feddg .Get (keyName );_aeaea !=nil {_baecd ,_dcfg :=_dbc .GetStream (_aeaea );if !_dcfg {_gge .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_aeaea );return nil ,XObjectTypeUndefined ;};_daabf :=_baecd .PdfObjectDictionary ;_aaede ,_dcfg :=_dbc .TraceToDirectObject (_daabf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_dbc .PdfObjectName );if !_dcfg {_gge .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_daabf .String ());return nil ,XObjectTypeUndefined ;};if *_aaede =="\u0049\u006d\u0061g\u0065"{return _baecd ,XObjectTypeImage ;}else if *_aaede =="\u0046\u006f\u0072\u006d"{return _baecd ,XObjectTypeForm ;}else if *_aaede =="\u0050\u0053"{return _baecd ,XObjectTypePS ;}else {_gge .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_aaede );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_bcgfc :=&PdfPageResources {};_bcgfc ._gddga =_dbc .MakeDict ();return _bcgfc ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_egea *PdfPageResources )HasXObjectByName (keyName _dbc .PdfObjectName )bool {_fdea ,_ :=_egea .GetXObjectByName (keyName );return _fdea !=nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_aabe *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gge .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gge .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_gge .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gge .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_fagfa ,_feeb :=_ggd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaaea ,img ._fgabe );if _feeb !=nil {return Image {},_feeb ;};_cabb ,_feeb :=_ggd .NRGBAConverter .Convert (_fagfa );if _feeb !=nil {return Image {},_feeb ;};return _dfddd (_cabb .Base ()),nil ;};func _bfddf (_eebf *_dbc .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dfabg :=&PdfShadingPattern {};_caba :=_eebf .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _caba ==nil {_gge .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ebea ,_bbfbf :=_deaag (_caba );if _bbfbf !=nil {_gge .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bbfbf );return nil ,_bbfbf ;};_dfabg .Shading =_ebea ;if _bgabg :=_eebf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bgabg !=nil {_gdcc ,_bcae :=_bgabg .(*_dbc .PdfObjectArray );if !_bcae {_gge .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgabg );return nil ,_dbc .ErrTypeError ;};_dfabg .Matrix =_gdcc ;};if _cfdac :=_eebf .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cfdac !=nil {_dfabg .ExtGState =_cfdac ;};return _dfabg ,nil ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cedf *_dbc .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_dbc .PdfObjectName ;Filter *_dbc .PdfObjectName ;SubFilter *_dbc .PdfObjectName ;Contents *_dbc .PdfObjectString ;Cert _dbc .PdfObject ;ByteRange *_dbc .PdfObjectArray ;Reference *_dbc .PdfObjectArray ;Changes *_dbc .PdfObjectArray ;Name *_dbc .PdfObjectString ;M *_dbc .PdfObjectString ;Location *_dbc .PdfObjectString ;Reason *_dbc .PdfObjectString ;ContactInfo *_dbc .PdfObjectString ;R *_dbc .PdfObjectInteger ;V *_dbc .PdfObjectInteger ;PropBuild *_dbc .PdfObjectDictionary ;PropAuthTime *_dbc .PdfObjectInteger ;PropAuthType *_dbc .PdfObjectName ;};func _edgg (_abcf _dbc .PdfObject )(*PdfColorspaceCalGray ,error ){_fdc :=NewPdfColorspaceCalGray ();if _deed ,_gaag :=_abcf .(*_dbc .PdfIndirectObject );_gaag {_fdc ._dfg =_deed ;};_abcf =_dbc .TraceToDirectObject (_abcf );_edbfd ,_fgae :=_abcf .(*_dbc .PdfObjectArray );if !_fgae {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _edbfd .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_abcf =_dbc .TraceToDirectObject (_edbfd .Get (0));_fbbeb ,_fgae :=_abcf .(*_dbc .PdfObjectName );if !_fgae {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fbbeb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_abcf =_dbc .TraceToDirectObject (_edbfd .Get (1));_deb ,_fgae :=_abcf .(*_dbc .PdfObjectDictionary );if !_fgae {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_abcf =_deb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_abcf =_dbc .TraceToDirectObject (_abcf );_daec ,_fgae :=_abcf .(*_dbc .PdfObjectArray );if !_fgae {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _daec .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gggc ,_cfgb :=_daec .GetAsFloat64Slice ();if _cfgb !=nil {return nil ,_cfgb ;};_fdc .WhitePoint =_gggc ;_abcf =_deb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _abcf !=nil {_abcf =_dbc .TraceToDirectObject (_abcf );_ffffg ,_bbgee :=_abcf .(*_dbc .PdfObjectArray );if !_bbgee {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ffffg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bfcge ,_eedde :=_ffffg .GetAsFloat64Slice ();if _eedde !=nil {return nil ,_eedde ;};_fdc .BlackPoint =_bfcge ;};_abcf =_deb .Get ("\u0047\u0061\u006dm\u0061");if _abcf !=nil {_abcf =_dbc .TraceToDirectObject (_abcf );_efde ,_fbfea :=_dbc .GetNumberAsFloat (_abcf );if _fbfea !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fdc .Gamma =_efde ;};return _fdc ,nil ;};var _ _dbc .PdfObject =&pdfSignDictionary {};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _dbc .PdfObject )(*PdfFont ,error ){return _gcdfd (fontObj ,true )};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_gedfd *_dbc .PdfObjectDictionary ;_gbfc *_dbc .PdfIndirectObject ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_fccda *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_fccda .ToPdfOutline ().PdfOutlineTreeNode ;};func _gdaf (_gaabbf []rune ,_dfgf map[rune ]int ,_egfgb map[rune ]_aca .GID )*_dbc .PdfObjectArray {_ccced :=&_dbc .PdfObjectArray {};for _dadd :=0;_dadd < len (_gaabbf );{_beaa :=_dfgf [_gaabbf [_dadd ]];_dada :=_dadd ;for _cfccf :=_dadd +1;_cfccf < len (_gaabbf );_cfccf ++{_gdafb :=_dfgf [_gaabbf [_cfccf ]];if _beaa ==_gdafb {_dada =_cfccf ;}else {break ;};};_ccgc :=_egfgb [_gaabbf [_dadd ]];_dgbd :=_egfgb [_gaabbf [_dada ]];_ccced .Append (_dbc .MakeInteger (int64 (_ccgc )));_ccced .Append (_dbc .MakeInteger (int64 (_dgbd )));_ccced .Append (_dbc .MakeInteger (int64 (_beaa )));_dadd =_dada +1;};return _ccced ;};

// ToPdfObject implements interface PdfModel.
func (_ffce *PdfAnnotationProjection )ToPdfObject ()_dbc .PdfObject {_ffce .PdfAnnotation .ToPdfObject ();_ecc :=_ffce ._gef ;_bgge :=_ecc .PdfObject .(*_dbc .PdfObjectDictionary );_ffce .PdfAnnotationMarkup .appendToPdfDictionary (_bgge );return _ecc ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cddca _ec .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cbacfa _fe .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gecc _fe .Image )(*Image ,error );

// Compress an image.
Compress (_bcgc *Image ,_aecea int64 )(*Image ,error );};func _aecd (_edbbe _dbc .PdfObject )(*PdfPattern ,error ){_ffbbg :=&PdfPattern {};var _geac *_dbc .PdfObjectDictionary ;if _ggaa ,_gfgbgb :=_dbc .GetIndirect (_edbbe );_gfgbgb {_ffbbg ._dfacd =_ggaa ;_faddfd ,_ggbg :=_ggaa .PdfObject .(*_dbc .PdfObjectDictionary );if !_ggbg {_gge .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_ggaa .PdfObject );return nil ,_dbc .ErrTypeError ;};_geac =_faddfd ;}else if _cafbd ,_bbaeg :=_dbc .GetStream (_edbbe );_bbaeg {_ffbbg ._dfacd =_cafbd ;_geac =_cafbd .PdfObjectDictionary ;}else {_gge .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_edbbe );return nil ,_dbc .ErrTypeError ;};_cfede :=_geac .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cfede ==nil {_gge .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fabg ,_abgff :=_cfede .(*_dbc .PdfObjectInteger );if !_abgff {_gge .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cfede );return nil ,_dbc .ErrTypeError ;};if *_fabg !=1&&*_fabg !=2{_gge .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fabg );return nil ,_dbc .ErrRangeError ;};_ffbbg .PatternType =int64 (*_fabg );switch *_fabg {case 1:_fcgcc ,_beedcc :=_gddde (_geac );if _beedcc !=nil {return nil ,_beedcc ;};_fcgcc .PdfPattern =_ffbbg ;_ffbbg ._dabbe =_fcgcc ;return _ffbbg ,nil ;case 2:_gefcf ,_cgabc :=_bfddf (_geac );if _cgabc !=nil {return nil ,_cgabc ;};_gefcf .PdfPattern =_ffbbg ;_ffbbg ._dabbe =_gefcf ;return _ffbbg ,nil ;};return nil ,_ge .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cfdeb *PdfPageResources )HasColorspaceByName (keyName _dbc .PdfObjectName )bool {_fecda ,_adfgd :=_cfdeb .GetColorspaces ();if _adfgd !=nil {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adfgd );return false ;};if _fecda ==nil {return false ;};_ ,_dgaag :=_fecda .Colorspaces [string (keyName )];return _dgaag ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cegd :=NewPdfAnnotation ();_fcbg :=&PdfAnnotationSquare {};_fcbg .PdfAnnotation =_cegd ;_fcbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cegd .SetContext (_fcbg );return _fcbg ;};

// GetXObjectByName gets XObject by name.
func (_agebe *PdfPage )GetXObjectByName (name _dbc .PdfObjectName )(_dbc .PdfObject ,bool ){_bdagc ,_degge :=_agebe .Resources .XObject .(*_dbc .PdfObjectDictionary );if !_degge {return nil ,false ;};if _gaebg :=_bdagc .Get (name );_gaebg !=nil {return _gaebg ,true ;};return nil ,false ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _dbc .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ec .ReadSeeker )(*PdfReader ,error ){const _dgabe ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_afeeb :=&PdfReader {_egge :rs ,_gaaae :map[_dbc .PdfObject ]struct{}{},_dcga :_cdab (),_fcbf :true };_bgca ,_bdda :=_dcfga ("\u0072");if _bdda !=nil {return nil ,_bdda ;};_bdda =_gc .Track (_bgca ,_dgabe );if _bdda !=nil {return nil ,_bdda ;};_afeeb ._bggcd =_bgca ;_bcbg ,_bdda :=_dbc .NewParser (rs );if _bdda !=nil {return nil ,_bdda ;};_afeeb ._efgcc =_bcbg ;_ddfgc ,_bdda :=_afeeb .IsEncrypted ();if _bdda !=nil {return nil ,_bdda ;};if !_ddfgc {_bdda =_afeeb .loadStructure ();if _bdda !=nil {return nil ,_bdda ;};};return _afeeb ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_dbgbg *pdfSignDictionary )GetSubFilter ()string {_bede :=_dbgbg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bede ==nil {return "";};if _fafec ,_fefdd :=_dbc .GetNameVal (_bede );_fefdd {return _fafec ;};return "";};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dcfe *PdfFieldButton )IsCheckbox ()bool {return _dcfe .GetType ()==ButtonTypeCheckbox };

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_eeafe *PdfReader )CheckAccessRights (password []byte )(bool ,_fb .Permissions ,error ){return _eeafe ._efgcc .CheckAccessRights (password );};func _dbac (_eaddc *_dbc .PdfObjectArray )(float64 ,error ){_egfcbe ,_ddeff :=_eaddc .ToFloat64Array ();if _ddeff !=nil {_gge .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eaddc ,_ddeff );};switch len (_egfcbe ){case 1:return _egfcbe [0],nil ;case 3:_cdbeee :=PdfColorspaceDeviceRGB {};_begg ,_ffgbf :=_cdbeee .ColorFromFloats (_egfcbe );if _ffgbf !=nil {return 0.0,_ffgbf ;};return _begg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_gefdg :=PdfColorspaceDeviceCMYK {};_aegff ,_ebdca :=_gefdg .ColorFromFloats (_egfcbe );if _ebdca !=nil {return 0.0,_ebdca ;};_dgbab ,_ebdca :=_gefdg .ColorToRGB (_aegff .(*PdfColorDeviceCMYK ));if _ebdca !=nil {return 0.0,_ebdca ;};return _dgbab .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ddeff =_ge .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_gge .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eaddc ,_ddeff );return 0.0,_ddeff ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_dbc .PdfObjectStream )(*XObjectImage ,error ){_fdgcb :=&XObjectImage {};_fdgcb ._acadb =stream ;_cfaace :=*(stream .PdfObjectDictionary );_ggeaef ,_aagde :=_dbc .NewEncoderFromStream (stream );if _aagde !=nil {return nil ,_aagde ;};_fdgcb .Filter =_ggeaef ;if _deaab :=_dbc .TraceToDirectObject (_cfaace .Get ("\u0057\u0069\u0064t\u0068"));_deaab !=nil {_ggafb ,_aeab :=_deaab .(*_dbc .PdfObjectInteger );if !_aeab {return nil ,_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_bdfce :=int64 (*_ggafb );_fdgcb .Width =&_bdfce ;}else {return nil ,_ge .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fcdbc :=_dbc .TraceToDirectObject (_cfaace .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_fcdbc !=nil {_ggdc ,_daggg :=_fcdbc .(*_dbc .PdfObjectInteger );if !_daggg {return nil ,_ge .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dfbbc :=int64 (*_ggdc );_fdgcb .Height =&_dfbbc ;}else {return nil ,_ge .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fdfce :=_dbc .TraceToDirectObject (_cfaace .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_fdfce !=nil {_fafd ,_afcad :=NewPdfColorspaceFromPdfObject (_fdfce );if _afcad !=nil {return nil ,_afcad ;};_fdgcb .ColorSpace =_fafd ;}else {_gge .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_fdgcb .ColorSpace =NewPdfColorspaceDeviceGray ();};if _ecfa :=_dbc .TraceToDirectObject (_cfaace .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_ecfa !=nil {_bgfdg ,_afcec :=_ecfa .(*_dbc .PdfObjectInteger );if !_afcec {return nil ,_ge .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_beabg :=int64 (*_bgfdg );_fdgcb .BitsPerComponent =&_beabg ;};_fdgcb .Intent =_cfaace .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_fdgcb .ImageMask =_cfaace .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fdgcb .Mask =_cfaace .Get ("\u004d\u0061\u0073\u006b");_fdgcb .Decode =_cfaace .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fdgcb .Interpolate =_cfaace .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_fdgcb .Alternatives =_cfaace .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fdgcb .SMask =_cfaace .Get ("\u0053\u004d\u0061s\u006b");_fdgcb .SMaskInData =_cfaace .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_fdgcb .Matte =_cfaace .Get ("\u004d\u0061\u0074t\u0065");_fdgcb .Name =_cfaace .Get ("\u004e\u0061\u006d\u0065");_fdgcb .StructParent =_cfaace .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fdgcb .ID =_cfaace .Get ("\u0049\u0044");_fdgcb .OPI =_cfaace .Get ("\u004f\u0050\u0049");_fdgcb .Metadata =_cfaace .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fdgcb .OC =_cfaace .Get ("\u004f\u0043");_fdgcb .Stream =stream .Stream ;return _fdgcb ,nil ;};func (_faef fontCommon )fontFlags ()int {if _faef ._gadcb ==nil {return 0;};return _faef ._gadcb ._fcaaea ;};const (_ecgbd =0x00001;_fbga =0x00002;_deggd =0x00004;_ecdb =0x00008;_aagda =0x00020;_cdff =0x00040;_adga =0x10000;_cfgag =0x20000;_dadb =0x40000;);

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfAnnotationScreen )ToPdfObject ()_dbc .PdfObject {_gcg .PdfAnnotation .ToPdfObject ();_eacd :=_gcg ._gef ;_dbeb :=_eacd .PdfObject .(*_dbc .PdfObjectDictionary );_dbeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_dbeb .SetIfNotNil ("\u0054",_gcg .T );_dbeb .SetIfNotNil ("\u004d\u004b",_gcg .MK );_dbeb .SetIfNotNil ("\u0041",_gcg .A );_dbeb .SetIfNotNil ("\u0041\u0041",_gcg .AA );return _eacd ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cacg :=&PdfFieldSignature {};_cacg .PdfField =NewPdfField ();_cacg .PdfField .SetContext (_cacg );_cacg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cacg .PdfAnnotationWidget .SetContext (_cacg );_cacg .PdfAnnotationWidget ._gef =_cacg .PdfField ._befed ;_cacg .T =_dbc .MakeString ("");_cacg .F =_dbc .MakeInteger (132);_cacg .V =signature ;return _cacg ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bagdc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bagdc ._cffa !=nil {return _bagdc ._cffa ,nil ;};if _bagdc .Annots ==nil {_bagdc ._cffa =[]*PdfAnnotation {};return nil ,nil ;};if _bagdc ._cfeea ==nil {_bagdc ._cffa =[]*PdfAnnotation {};return nil ,nil ;};_dbdff ,_gceg :=_bagdc ._cfeea .loadAnnotations (_bagdc .Annots );if _gceg !=nil {return nil ,_gceg ;};if _dbdff ==nil {_bagdc ._cffa =[]*PdfAnnotation {};};_bagdc ._cffa =_dbdff ;return _bagdc ._cffa ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_acba _ec .ReadSeeker ;_dgb *_dbc .PdfParser ;_cdef *PdfReader ;Reader *PdfReader ;_cgedd []*PdfPage ;_fece *PdfAcroForm ;_fca *DSS ;_bfcgf _dbc .XrefTable ;_ggdf int64 ;_ccbg int ;_fgea []_dbc .PdfObject ;_agag map[_dbc .PdfObject ]struct{};_cbecd map[_dbc .PdfObject ]int64 ;_begf map[_dbc .PdfObject ]struct{};_caac map[_dbc .PdfObject ]struct{};_cfa int64 ;_ebeg bool ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gedfe *Image )GetSamples ()[]uint32 {_dcgbf :=_bee .ResampleBytes (_gedfe .Data ,int (_gedfe .BitsPerComponent ));if _gedfe .BitsPerComponent < 8{_dcgbf =_gedfe .samplesTrimPadding (_dcgbf );};_bfbc :=int (_gedfe .Width )*int (_gedfe .Height )*_gedfe .ColorComponents ;if len (_dcgbf )< _bfbc {_gge .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dcgbf ),_bfbc );return _dcgbf ;}else if len (_dcgbf )> _bfbc {_gge .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dcgbf ),_bfbc );_dcgbf =_dcgbf [:_bfbc ];};return _dcgbf ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _dbc .PdfObject ;NewWindow _dbc .PdfObject ;T _dbc .PdfObject ;};func (_gbbad *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gbbad .fontCommon };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cfgg pdfFontSimple )GetRuneMetrics (r rune )(_aca .CharMetrics ,bool ){if _cfgg ._bacea !=nil {_dfgge ,_edgca :=_cfgg ._bacea [r ];if _edgca {return _dfgge ,true ;};};_cgbfd :=_cfgg .Encoder ();if _cgbfd ==nil {_gge .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cfgg );return _aca .CharMetrics {},false ;};_cacfe ,_afbcc :=_cgbfd .RuneToCharcode (r );if !_afbcc {if r !=' '{_gge .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cfgg );};return _aca .CharMetrics {},false ;};_cfecb ,_egbcg :=_cfgg .GetCharMetrics (_cacfe );return _cfecb ,_egbcg ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fccgb DefaultImageHandler )Read (reader _ec .Reader )(*Image ,error ){_eeeg ,_ ,_abacf :=_fe .Decode (reader );if _abacf !=nil {_gge .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_abacf );return nil ,_abacf ;};return _fccgb .NewImageFromGoImage (_eeeg );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_dbeag *PdfPage )GetAllContentStreams ()(string ,error ){_bbca ,_efdda :=_dbeag .GetContentStreams ();if _efdda !=nil {return "",_efdda ;};return _ab .Join (_bbca ,"\u0020"),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcb *PdfBorderStyle )ToPdfObject ()_dbc .PdfObject {_ddge :=_dbc .MakeDict ();if _gcb ._fceb !=nil {if _fbbe ,_eecg :=_gcb ._fceb .(*_dbc .PdfIndirectObject );_eecg {_fbbe .PdfObject =_ddge ;};};_ddge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _gcb .W !=nil {_ddge .Set ("\u0057",_dbc .MakeFloat (*_gcb .W ));};if _gcb .S !=nil {_ddge .Set ("\u0053",_dbc .MakeName (_gcb .S .GetPdfName ()));};if _gcb .D !=nil {_ddge .Set ("\u0044",_dbc .MakeArrayFromIntegers (*_gcb .D ));};if _gcb ._fceb !=nil {return _gcb ._fceb ;};return _ddge ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_dgbc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _dgbc .flattenFieldsWithOpts (false ,appgen ,opts );};

// WriteString outputs the object as it is to be written to file.
func (_ecfgc *pdfSignDictionary )WriteString ()string {_ecfgc ._cagba =0;_ecfgc ._egaffa =0;_ecfgc ._adbfg =0;_ecfgc ._fbbebd =0;_effa :=_gd .NewBuffer (nil );_effa .WriteString ("\u003c\u003c");for _ ,_eegg :=range _ecfgc .Keys (){_bfcfg :=_ecfgc .Get (_eegg );switch _eegg {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_effa .WriteString (_eegg .WriteString ());_effa .WriteString ("\u0020");_ecfgc ._adbfg =_effa .Len ();_effa .WriteString (_bfcfg .WriteString ());_effa .WriteString ("\u0020");_ecfgc ._fbbebd =_effa .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_effa .WriteString (_eegg .WriteString ());_effa .WriteString ("\u0020");_ecfgc ._cagba =_effa .Len ();_effa .WriteString (_bfcfg .WriteString ());_effa .WriteString ("\u0020");_ecfgc ._egaffa =_effa .Len ()-1;default:_effa .WriteString (_eegg .WriteString ());_effa .WriteString ("\u0020");_effa .WriteString (_bfcfg .WriteString ());};};_effa .WriteString ("\u003e\u003e");return _effa .String ();};func (_efd *PdfReader )newPdfActionFromIndirectObject (_bga *_dbc .PdfIndirectObject )(*PdfAction ,error ){_ageg ,_cc :=_bga .PdfObject .(*_dbc .PdfObjectDictionary );if !_cc {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_efd ._dcga .GetModelFromPrimitive (_ageg );model !=nil {_bdc ,_egfc :=model .(*PdfAction );if !_egfc {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _bdc ,nil ;};_efa :=&PdfAction {};_efa ._ff =_bga ;_efd ._dcga .Register (_ageg ,_efa );if _gfa :=_ageg .Get ("\u0054\u0079\u0070\u0065");_gfa !=nil {_cec ,_eedf :=_gfa .(*_dbc .PdfObjectName );if !_eedf {_gge .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfa );}else {if *_cec !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gge .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cec );};_efa .Type =_cec ;};};if _bbeg :=_ageg .Get ("\u004e\u0065\u0078\u0074");_bbeg !=nil {_efa .Next =_bbeg ;};if _aeg :=_ageg .Get ("\u0053");_aeg !=nil {_efa .S =_aeg ;};_gbdd ,_bbf :=_efa .S .(*_dbc .PdfObjectName );if !_bbf {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efa .S );return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efa .S );};_cea :=PdfActionType (_gbdd .String ());switch _cea {case ActionTypeGoTo :_gff ,_afd :=_efd .newPdfActionGotoFromDict (_ageg );if _afd !=nil {return nil ,_afd ;};_gff .PdfAction =_efa ;_efa ._df =_gff ;return _efa ,nil ;case ActionTypeGoToR :_gdg ,_eac :=_efd .newPdfActionGotoRFromDict (_ageg );if _eac !=nil {return nil ,_eac ;};_gdg .PdfAction =_efa ;_efa ._df =_gdg ;return _efa ,nil ;case ActionTypeGoToE :_bbg ,_gdc :=_efd .newPdfActionGotoEFromDict (_ageg );if _gdc !=nil {return nil ,_gdc ;};_bbg .PdfAction =_efa ;_efa ._df =_bbg ;return _efa ,nil ;case ActionTypeLaunch :_bea ,_egc :=_efd .newPdfActionLaunchFromDict (_ageg );if _egc !=nil {return nil ,_egc ;};_bea .PdfAction =_efa ;_efa ._df =_bea ;return _efa ,nil ;case ActionTypeThread :_aegb ,_egfb :=_efd .newPdfActionThreadFromDict (_ageg );if _egfb !=nil {return nil ,_egfb ;};_aegb .PdfAction =_efa ;_efa ._df =_aegb ;return _efa ,nil ;case ActionTypeURI :_edf ,_afe :=_efd .newPdfActionURIFromDict (_ageg );if _afe !=nil {return nil ,_afe ;};_edf .PdfAction =_efa ;_efa ._df =_edf ;return _efa ,nil ;case ActionTypeSound :_dcg ,_egbe :=_efd .newPdfActionSoundFromDict (_ageg );if _egbe !=nil {return nil ,_egbe ;};_dcg .PdfAction =_efa ;_efa ._df =_dcg ;return _efa ,nil ;case ActionTypeMovie :_cdc ,_fcf :=_efd .newPdfActionMovieFromDict (_ageg );if _fcf !=nil {return nil ,_fcf ;};_cdc .PdfAction =_efa ;_efa ._df =_cdc ;return _efa ,nil ;case ActionTypeHide :_cad ,_ccc :=_efd .newPdfActionHideFromDict (_ageg );if _ccc !=nil {return nil ,_ccc ;};_cad .PdfAction =_efa ;_efa ._df =_cad ;return _efa ,nil ;case ActionTypeNamed :_ecae ,_aedf :=_efd .newPdfActionNamedFromDict (_ageg );if _aedf !=nil {return nil ,_aedf ;};_ecae .PdfAction =_efa ;_efa ._df =_ecae ;return _efa ,nil ;case ActionTypeSubmitForm :_bag ,_gga :=_efd .newPdfActionSubmitFormFromDict (_ageg );if _gga !=nil {return nil ,_gga ;};_bag .PdfAction =_efa ;_efa ._df =_bag ;return _efa ,nil ;case ActionTypeResetForm :_gac ,_fef :=_efd .newPdfActionResetFormFromDict (_ageg );if _fef !=nil {return nil ,_fef ;};_gac .PdfAction =_efa ;_efa ._df =_gac ;return _efa ,nil ;case ActionTypeImportData :_cba ,_gec :=_efd .newPdfActionImportDataFromDict (_ageg );if _gec !=nil {return nil ,_gec ;};_cba .PdfAction =_efa ;_efa ._df =_cba ;return _efa ,nil ;case ActionTypeSetOCGState :_fff ,_gbb :=_efd .newPdfActionSetOCGStateFromDict (_ageg );if _gbb !=nil {return nil ,_gbb ;};_fff .PdfAction =_efa ;_efa ._df =_fff ;return _efa ,nil ;case ActionTypeRendition :_dbb ,_gfg :=_efd .newPdfActionRenditionFromDict (_ageg );if _gfg !=nil {return nil ,_gfg ;};_dbb .PdfAction =_efa ;_efa ._df =_dbb ;return _efa ,nil ;case ActionTypeTrans :_bfe ,_gbe :=_efd .newPdfActionTransFromDict (_ageg );if _gbe !=nil {return nil ,_gbe ;};_bfe .PdfAction =_efa ;_efa ._df =_bfe ;return _efa ,nil ;case ActionTypeGoTo3DView :_aac ,_gbf :=_efd .newPdfActionGoTo3DViewFromDict (_ageg );if _gbf !=nil {return nil ,_gbf ;};_aac .PdfAction =_efa ;_efa ._df =_aac ;return _efa ,nil ;case ActionTypeJavaScript :_cbf ,_fg :=_efd .newPdfActionJavaScriptFromDict (_ageg );if _fg !=nil {return nil ,_fg ;};_cbf .PdfAction =_efa ;_efa ._df =_cbf ;return _efa ,nil ;};_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_cea );return nil ,nil ;};func (_aeeeg *PdfPattern )getDict ()*_dbc .PdfObjectDictionary {if _bfcc ,_ebace :=_aeeeg ._dfacd .(*_dbc .PdfIndirectObject );_ebace {_cggcd ,_caedg :=_bfcc .PdfObject .(*_dbc .PdfObjectDictionary );if !_caedg {return nil ;};return _cggcd ;}else if _efcfe ,_gdcbae :=_aeeeg ._dfacd .(*_dbc .PdfObjectStream );_gdcbae {return _efcfe .PdfObjectDictionary ;}else {_gge .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_aeeeg ._dfacd );return nil ;};};func (_bgd *PdfReader )newPdfActionGotoFromDict (_fbf *_dbc .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fbf .Get ("\u0044")},nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_abbcf *PdfPageResources )SetXObjectImageByName (keyName _dbc .PdfObjectName ,ximg *XObjectImage )error {_cbdca :=ximg .ToPdfObject ().(*_dbc .PdfObjectStream );_ffcb :=_abbcf .SetXObjectByName (keyName ,_cbdca );return _ffcb ;};func (_fbdgc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fbdgc ._gadcb };func (_cbaf *pdfFontSimple )addEncoding ()error {var (_aagc string ;_bcfg map[_cg .CharCode ]_cg .GlyphName ;_fbaef _cg .SimpleEncoder ;);if _cbaf .Encoder ()!=nil {_dagg ,_efdc :=_cbaf .Encoder ().(_cg .SimpleEncoder );if _efdc &&_dagg !=nil {_aagc =_dagg .BaseName ();};};if _cbaf .Encoding !=nil {_gecf ,_eaed ,_bacg :=_cbaf .getFontEncoding ();if _bacg !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbaf ._cebb ,_cbaf ._abdbb ,_cbaf .Encoding ,_cbaf .Encoding ,_bacg );return _bacg ;};if _gecf !=""{_aagc =_gecf ;};_bcfg =_eaed ;_fbaef ,_bacg =_cg .NewSimpleTextEncoder (_aagc ,_bcfg );if _bacg !=nil {return _bacg ;};};if _fbaef ==nil {_febc :=_cbaf ._gadcb ;if _febc !=nil {switch _cbaf ._abdbb {case "\u0054\u0079\u0070e\u0031":if _febc .fontFile !=nil &&_febc .fontFile ._bgea !=nil {_gge .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_fbaef =_febc .fontFile ._bgea ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _febc ._ggcad !=nil {_gge .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_bcbc ,_bfgdf :=_febc ._ggcad .MakeEncoder ();if _bfgdf ==nil {_fbaef =_bcbc ;};};};};};if _fbaef !=nil {if _bcfg !=nil {_gge .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcfg ,_cbaf .baseFields ());_fbaef =_cg .ApplyDifferences (_fbaef ,_bcfg );};_cbaf .SetEncoder (_fbaef );};return nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bgbc FieldFlag )Has (fl FieldFlag )bool {return (_bgbc .Mask ()&fl .Mask ())> 0};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _dbc .PdfObject ;T3DV _dbc .PdfObject ;T3DA _dbc .PdfObject ;T3DI _dbc .PdfObject ;T3DB _dbc .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_ccagd *pdfFontSimple )getFontEncoding ()(_edec string ,_acaag map[_cg .CharCode ]_cg .GlyphName ,_gagf error ){_edec ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _gbceab ,_cedbb :=_daed [_ccagd ._cebb ];_cedbb {_edec =_gbceab ;}else if _ccagd .fontFlags ()&_deggd !=0{for _adafe ,_bcbaee :=range _daed {if _ab .Contains (_ccagd ._cebb ,_adafe ){_edec =_bcbaee ;break ;};};};if _ccagd .Encoding ==nil {return _edec ,nil ,nil ;};switch _egfde :=_ccagd .Encoding .(type ){case *_dbc .PdfObjectName :return string (*_egfde ),nil ,nil ;case *_dbc .PdfObjectDictionary :_dbea ,_egde :=_dbc .GetName (_egfde .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _egde {_edec =_dbea .String ();};if _bfgf :=_egfde .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_bfgf !=nil {_fbdb ,_gcbc :=_dbc .GetArray (_bfgf );if !_gcbc {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_egfde ,_egfde .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_dbc .ErrTypeError ;};_acaag ,_gagf =_cg .FromFontDifferences (_fbdb );};return _edec ,_acaag ,_gagf ;default:_gge .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ccagd .Encoding ,_ccagd .Encoding );return "",nil ,_dbc .ErrTypeError ;};};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_gegcc =author };

// GetNumComponents returns the number of color components.
func (_eefda *PdfColorspaceICCBased )GetNumComponents ()int {return _eefda .N };const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_ffbf *PdfFont )BytesToCharcodes (data []byte )[]_cg .CharCode {_gge .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _eefdb ,_faab :=_ffbf ._ceef .(*pdfFontType0 );_faab &&_eefdb ._bfad !=nil {if _feaac ,_daee :=_eefdb .bytesToCharcodes (data );_daee {return _feaac ;};};_cfdec :=make ([]_cg .CharCode ,0,len (data )+len (data )%2);if _ffbf .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _edcf :=0;_edcf < len (data );_edcf +=2{_ceeg :=uint16 (data [_edcf ])<<8|uint16 (data [_edcf +1]);_cfdec =append (_cfdec ,_cg .CharCode (_ceeg ));};}else {for _ ,_afbe :=range data {_cfdec =append (_cfdec ,_cg .CharCode (_afbe ));};};return _cfdec ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdcgf pdfCIDFontType0 )GetCharMetrics (code _cg .CharCode )(_aca .CharMetrics ,bool ){_edcb :=_cdcgf ._efcbd ;if _beedc ,_bggc :=_cdcgf ._fgcd [code ];_bggc {_edcb =_beedc ;};return _aca .CharMetrics {Wx :_edcb },true ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_dbc .PdfObjectInteger ;TilingType *_dbc .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_dbc .PdfObjectFloat ;YStep *_dbc .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_dbc .PdfObjectArray ;};

// String returns a string that describes `font`.
func (_gadef *PdfFont )String ()string {_cbde :="";if _gadef ._ceef .Encoder ()!=nil {_cbde =_gadef ._ceef .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gadef ._ceef ,_gadef .baseFields ().coreString (),_cbde );};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_ege *PdfReader )newPdfAnnotationCircleFromDict (_fac *_dbc .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_efce :=PdfAnnotationCircle {};_cece ,_ccaa :=_ege .newPdfAnnotationMarkupFromDict (_fac );if _ccaa !=nil {return nil ,_ccaa ;};_efce .PdfAnnotationMarkup =_cece ;_efce .BS =_fac .Get ("\u0042\u0053");_efce .IC =_fac .Get ("\u0049\u0043");_efce .BE =_fac .Get ("\u0042\u0045");_efce .RD =_fac .Get ("\u0052\u0044");return &_efce ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func _ecda (_fdfe *_dbc .PdfObjectDictionary )(*PdfFieldButton ,error ){_acfa :=&PdfFieldButton {};_acfa .Opt ,_ =_dbc .GetArray (_fdfe .Get ("\u004f\u0070\u0074"));return _acfa ,nil ;};func (_ged *PdfReader )newPdfActionNamedFromDict (_gfe *_dbc .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gfe .Get ("\u004e")},nil ;};func (_eedg *PdfReader )newPdfActionResetFormFromDict (_dea *_dbc .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dea .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gbefbc *OutlineItem )ToPdfObject ()_dbc .PdfObject {_ddbf ,_ :=_gbefbc .ToPdfOutlineItem ();return _ddbf .ToPdfObject ();};func (_edbfg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _edbfg ._gadcb ==nil &&_edbfg .DescendantFont !=nil {return _edbfg .DescendantFont .FontDescriptor ();};return _edbfg ._gadcb ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_deab :=&PdfColorspaceLab {};_deab .BlackPoint =[]float64 {0.0,0.0,0.0};_deab .Range =[]float64 {-100,100,-100,100};return _deab ;};func (_fded *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};var _gaadb =false ;func _defb (_cfcg _aca .StdFont )pdfFontSimple {_fcaf :=_cfcg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_abdbb :"\u0054\u0079\u0070e\u0031",_cebb :_cfcg .Name ()},_bacea :_cfcg .GetMetricsTable (),_cbacf :&PdfFontDescriptor {FontName :_dbc .MakeName (string (_fcaf .Name )),FontFamily :_dbc .MakeName (_fcaf .Family ),FontWeight :_dbc .MakeFloat (float64 (_fcaf .Weight )),Flags :_dbc .MakeInteger (int64 (_fcaf .Flags )),FontBBox :_dbc .MakeArrayFromFloats (_fcaf .BBox [:]),ItalicAngle :_dbc .MakeFloat (_fcaf .ItalicAngle ),Ascent :_dbc .MakeFloat (_fcaf .Ascent ),Descent :_dbc .MakeFloat (_fcaf .Descent ),CapHeight :_dbc .MakeFloat (_fcaf .CapHeight ),XHeight :_dbc .MakeFloat (_fcaf .XHeight ),StemV :_dbc .MakeFloat (_fcaf .StemV ),StemH :_dbc .MakeFloat (_fcaf .StemH )},_gdbb :_cfcg .Encoder ()};};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dc :=NewPdfAction ();_agf :=&PdfActionSetOCGState {};_agf .PdfAction =_dc ;_dc .SetContext (_agf );return _agf ;};func (_adb *PdfReader )newPdfActionHideFromDict (_egbee *_dbc .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_egbee .Get ("\u0054"),H :_egbee .Get ("\u0048")},nil ;};

// B returns the value of the B component of the color.
func (_eagg *PdfColorLab )B ()float64 {return _eagg [2]};

// ToPdfObject implements interface PdfModel.
func (_egba *PdfAnnotationUnderline )ToPdfObject ()_dbc .PdfObject {_egba .PdfAnnotation .ToPdfObject ();_bafc :=_egba ._gef ;_cdd :=_bafc .PdfObject .(*_dbc .PdfObjectDictionary );_egba .PdfAnnotationMarkup .appendToPdfDictionary (_cdd );_cdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_cdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_egba .QuadPoints );return _bafc ;};func _cbfbc ()string {_ccfbf .Lock ();defer _ccfbf .Unlock ();_cfgbg :=_gc .GetLicenseKey ();if len (_bceade )> 0&&(_cfgbg .IsLicensed ()||_gaadb ){return _bceade ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cfccg (),_cfgbg .TypeToString ());};

// IsShading specifies if the pattern is a shading pattern.
func (_fgbdb *PdfPattern )IsShading ()bool {return _fgbdb .PatternType ==2};

// ToInteger convert to an integer format.
func (_ddfg *PdfColorLab )ToInteger (bits int )[3]uint32 {_dege :=_bc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dege *_ddfg .L ()),uint32 (_dege *_ddfg .A ()),uint32 (_dege *_ddfg .B ())};};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ccdgg *_dbc .PdfIndirectObject ;_ggcdf *_dbc .PdfIndirectObject ;_ccfgc map[_dbc .PdfObject ]struct{};_cded []_dbc .PdfObject ;_ebdbb map[_dbc .PdfObject ]struct{};_cbccd []*_dbc .PdfIndirectObject ;_afeeg *PdfOutlineTreeNode ;_eddef *_dbc .PdfObjectDictionary ;_fbadf []_dbc .PdfObject ;_fffe *_dbc .PdfIndirectObject ;_ecedd *_ba .Writer ;_fgafa int64 ;_ecafa error ;_bdgee *_dbc .PdfCrypt ;_baag *_dbc .PdfObjectDictionary ;_baegd *_dbc .PdfIndirectObject ;_fbgddd *_dbc .PdfObjectArray ;_ccaec int ;_adaa int ;_babf *bool ;_aeeg map[_dbc .PdfObject ][]*_dbc .PdfObjectDictionary ;_bfddg *PdfAcroForm ;_dgba Optimizer ;_acgfd map[int ]crossReference ;_cabce int64 ;ObjNumOffset int ;_edegf bool ;_dagcg _dbc .XrefTable ;_fgbea int64 ;_fbff int64 ;_bdaf map[_dbc .PdfObject ]int64 ;_acdgca map[_dbc .PdfObject ]struct{};_gefbb string ;};func (_afbcf *PdfReader )buildOutlineTree (_fcgffa _dbc .PdfObject ,_agfce *PdfOutlineTreeNode ,_egcdf *PdfOutlineTreeNode ,_gdaaf map[_dbc .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gdaaf ==nil {_gdaaf =map[_dbc .PdfObject ]struct{}{};};_gdaaf [_fcgffa ]=struct{}{};_bgfg ,_gbced :=_fcgffa .(*_dbc .PdfIndirectObject );if !_gbced {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fcgffa );};_fagdb ,_defag :=_bgfg .PdfObject .(*_dbc .PdfObjectDictionary );if !_defag {return nil ,nil ,_ge .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gge .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fagdb ,_bgfg ,_bgfg );if _cagbf :=_fagdb .Get ("\u0054\u0069\u0074l\u0065");_cagbf !=nil {_cgcbd ,_aaabc :=_afbcf .newPdfOutlineItemFromIndirectObject (_bgfg );if _aaabc !=nil {return nil ,nil ,_aaabc ;};_cgcbd .Parent =_agfce ;_cgcbd .Prev =_egcdf ;_abcdg :=_dbc .ResolveReference (_fagdb .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_cbcge :=_gdaaf [_abcdg ];_abcdg !=nil &&_abcdg !=_bgfg &&!_cbcge {if !_dbc .IsNullObject (_abcdg ){_aagag ,_cbcff ,_gfgf :=_afbcf .buildOutlineTree (_abcdg ,&_cgcbd .PdfOutlineTreeNode ,nil ,_gdaaf );if _gfgf !=nil {_gge .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gfgf );}else {_cgcbd .First =_aagag ;_cgcbd .Last =_cbcff ;};};};_ccbab :=_dbc .ResolveReference (_fagdb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cagcg :=_gdaaf [_ccbab ];_ccbab !=nil &&_ccbab !=_bgfg &&!_cagcg {if !_dbc .IsNullObject (_ccbab ){_adbb ,_deagd ,_bdcgc :=_afbcf .buildOutlineTree (_ccbab ,_agfce ,&_cgcbd .PdfOutlineTreeNode ,_gdaaf );if _bdcgc !=nil {_gge .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bdcgc );}else {_cgcbd .Next =_adbb ;return &_cgcbd .PdfOutlineTreeNode ,_deagd ,nil ;};};};return &_cgcbd .PdfOutlineTreeNode ,&_cgcbd .PdfOutlineTreeNode ,nil ;};_cgabb ,_beaff :=_facec (_bgfg );if _beaff !=nil {return nil ,nil ,_beaff ;};_cgabb .Parent =_agfce ;if _acegf :=_fagdb .Get ("\u0046\u0069\u0072s\u0074");_acegf !=nil {_acegf =_dbc .ResolveReference (_acegf );if _ ,_befcgd :=_gdaaf [_acegf ];_acegf !=nil &&_acegf !=_bgfg &&!_befcgd {_cffba :=_dbc .TraceToDirectObject (_acegf );if _ ,_fcffc :=_cffba .(*_dbc .PdfObjectNull );!_fcffc &&_cffba !=nil {_gefea ,_aeeec ,_gbgea :=_afbcf .buildOutlineTree (_acegf ,&_cgabb .PdfOutlineTreeNode ,nil ,_gdaaf );if _gbgea !=nil {_gge .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gbgea );}else {_cgabb .First =_gefea ;_cgabb .Last =_aeeec ;};};};};return &_cgabb .PdfOutlineTreeNode ,&_cgabb .PdfOutlineTreeNode ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcea *PdfPageResourcesColorspaces )ToPdfObject ()_dbc .PdfObject {_cdfa :=_dbc .MakeDict ();for _ ,_dgce :=range _bcea .Names {_cdfa .Set (_dbc .PdfObjectName (_dgce ),_bcea .Colorspaces [_dgce ].ToPdfObject ());};if _bcea ._cgbbc !=nil {_bcea ._cgbbc .PdfObject =_cdfa ;return _bcea ._cgbbc ;};return _cdfa ;};

// ToPdfObject implements interface PdfModel.
func (_aecg *PdfAnnotationWatermark )ToPdfObject ()_dbc .PdfObject {_aecg .PdfAnnotation .ToPdfObject ();_fbaa :=_aecg ._gef ;_abdd :=_fbaa .PdfObject .(*_dbc .PdfObjectDictionary );_abdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_abdd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_aecg .FixedPrint );return _fbaa ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gaed :=&PdfColorspaceDeviceN {};return _gaed };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_bfaf DefaultImageHandler )NewGrayImageFromGoImage (goimg _fe .Image )(*Image ,error ){_fagca :=goimg .Bounds ();_fbeag :=&Image {Width :int64 (_fagca .Dx ()),Height :int64 (_fagca .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gffge :=goimg .(type ){case *_fe .Gray :if len (_gffge .Pix )!=_fagca .Dx ()*_fagca .Dy (){_bccee ,_cacee :=_ggd .GrayConverter .Convert (goimg );if _cacee !=nil {return nil ,_cacee ;};_fbeag .Data =_bccee .Pix ();}else {_fbeag .Data =_gffge .Pix ;};case *_fe .Gray16 :_fbeag .BitsPerComponent =16;if len (_gffge .Pix )!=_fagca .Dx ()*_fagca .Dy ()*2{_fafa ,_faggb :=_ggd .Gray16Converter .Convert (goimg );if _faggb !=nil {return nil ,_faggb ;};_fbeag .Data =_fafa .Pix ();}else {_fbeag .Data =_gffge .Pix ;};default:_ccgb ,_fddbc :=_ggd .GrayConverter .Convert (goimg );if _fddbc !=nil {return nil ,_fddbc ;};_fbeag .Data =_ccgb .Pix ();};return _fbeag ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_fdg *PdfColorLab )GetNumComponents ()int {return 3};func _fcfc (_gdgc *_dbc .PdfObjectDictionary ,_agff *fontCommon ,_cega _cg .TextEncoder )(*pdfFontSimple ,error ){_aadb :=_gcca (_agff );_aadb ._gdbb =_cega ;if _cega ==nil {_bccde :=_gdgc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bccde ==nil {_bccde =_dbc .MakeInteger (0);};_aadb .FirstChar =_bccde ;_cecd ,_ebbg :=_dbc .GetIntVal (_bccde );if !_ebbg {_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bccde );return nil ,_dbc .ErrTypeError ;};_dgcc :=_cg .CharCode (_cecd );_bccde =_gdgc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bccde ==nil {_bccde =_dbc .MakeInteger (255);};_aadb .LastChar =_bccde ;_cecd ,_ebbg =_dbc .GetIntVal (_bccde );if !_ebbg {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bccde );return nil ,_dbc .ErrTypeError ;};_eadd :=_cg .CharCode (_cecd );_aadb ._dbcdc =make (map[_cg .CharCode ]float64 );_bccde =_gdgc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bccde !=nil {_aadb .Widths =_bccde ;_fgfdf ,_dfdef :=_dbc .GetArray (_bccde );if !_dfdef {_gge .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bccde );return nil ,_dbc .ErrTypeError ;};_dgge ,_egdc :=_fgfdf .ToFloat64Array ();if _egdc !=nil {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_egdc ;};if len (_dgge )!=int (_eadd -_dgcc +1){_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_eadd -_dgcc +1,len (_dgge ));return nil ,_dbc .ErrRangeError ;};for _gccag ,_aaaf :=range _dgge {_aadb ._dbcdc [_dgcc +_cg .CharCode (_gccag )]=_aaaf ;};};};_aadb .Encoding =_dbc .TraceToDirectObject (_gdgc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _aadb ,nil ;};func (_efb *PdfAnnotationMarkup )appendToPdfDictionary (_dffg *_dbc .PdfObjectDictionary ){_dffg .SetIfNotNil ("\u0054",_efb .T );if _efb .Popup !=nil {_dffg .Set ("\u0050\u006f\u0070u\u0070",_efb .Popup .ToPdfObject ());};_dffg .SetIfNotNil ("\u0043\u0041",_efb .CA );_dffg .SetIfNotNil ("\u0052\u0043",_efb .RC );_dffg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_efb .CreationDate );_dffg .SetIfNotNil ("\u0049\u0052\u0054",_efb .IRT );_dffg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_efb .Subj );_dffg .SetIfNotNil ("\u0052\u0054",_efb .RT );_dffg .SetIfNotNil ("\u0049\u0054",_efb .IT );_dffg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_efb .ExData );};func (_gfagdd *LTV )getOCSPs (_bbgf []*_gg .Certificate ,_aceed map[string ]*_gg .Certificate )([][]byte ,error ){_eaafb :=make ([][]byte ,0,len (_bbgf ));for _ ,_ggcffa :=range _bbgf {for _ ,_cagg :=range _ggcffa .OCSPServer {if _gfagdd .CertClient .IsCA (_ggcffa ){continue ;};_afcfb ,_fdaefb :=_aceed [_ggcffa .Issuer .CommonName ];if !_fdaefb {_gge .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_aegfda ,_fegab :=_gfagdd .OCSPClient .MakeRequest (_cagg ,_ggcffa ,_afcfb );if _fegab !=nil {_gge .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fegab );continue ;};_eaafb =append (_eaafb ,_aegfda );};};return _eaafb ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _dbc .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _dbc .PdfObject ;Contents _dbc .PdfObject ;Rotate *int64 ;Group _dbc .PdfObject ;Thumb _dbc .PdfObject ;B _dbc .PdfObject ;Dur _dbc .PdfObject ;Trans _dbc .PdfObject ;AA _dbc .PdfObject ;Metadata _dbc .PdfObject ;PieceInfo _dbc .PdfObject ;StructParents _dbc .PdfObject ;ID _dbc .PdfObject ;PZ _dbc .PdfObject ;SeparationInfo _dbc .PdfObject ;Tabs _dbc .PdfObject ;TemplateInstantiated _dbc .PdfObject ;PresSteps _dbc .PdfObject ;UserUnit _dbc .PdfObject ;VP _dbc .PdfObject ;Annots _dbc .PdfObject ;_cffa []*PdfAnnotation ;_dbagc *_dbc .PdfObjectDictionary ;_aaac *_dbc .PdfIndirectObject ;_cfeea *PdfReader ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_cada *PdfAcroForm ,_ccdf *PdfField ,_ccfegc *PdfAnnotationWidget )(*_dbc .PdfObjectDictionary ,error );};

// String returns a string representation of what flags are set.
func (_cafa FieldFlag )String ()string {_bcac :="";if _cafa ==FieldFlagClear {_bcac ="\u0043\u006c\u0065a\u0072";return _bcac ;};if _cafa &FieldFlagReadOnly > 0{_bcac +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cafa &FieldFlagRequired > 0{_bcac +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cafa &FieldFlagNoExport > 0{_bcac +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cafa &FieldFlagNoToggleToOff > 0{_bcac +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cafa &FieldFlagRadio > 0{_bcac +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _cafa &FieldFlagPushbutton > 0{_bcac +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cafa &FieldFlagRadiosInUnision > 0{_bcac +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cafa &FieldFlagMultiline > 0{_bcac +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cafa &FieldFlagPassword > 0{_bcac +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cafa &FieldFlagFileSelect > 0{_bcac +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cafa &FieldFlagDoNotScroll > 0{_bcac +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cafa &FieldFlagComb > 0{_bcac +="\u007c\u0043\u006fm\u0062";};if _cafa &FieldFlagRichText > 0{_bcac +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cafa &FieldFlagDoNotSpellCheck > 0{_bcac +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cafa &FieldFlagCombo > 0{_bcac +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cafa &FieldFlagEdit > 0{_bcac +="\u007c\u0045\u0064i\u0074";};if _cafa &FieldFlagSort > 0{_bcac +="\u007c\u0053\u006fr\u0074";};if _cafa &FieldFlagMultiSelect > 0{_bcac +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cafa &FieldFlagCommitOnSelChange > 0{_bcac +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ab .Trim (_bcac ,"\u007c");};func _bffdg (_aafdc _dbc .PdfObject ,_bgeea *PdfReader )(*OutlineDest ,error ){_fbef ,_fcgag :=_dbc .GetArray (_aafdc );if !_fcgag {return nil ,_ge .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_edadac :=_fbef .Len ();if _edadac < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_edadac );};_dffe :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_beabd :=_fbef .Get (0);if _cagdc ,_edcc :=_dbc .GetIndirect (_beabd );_edcc {if _ ,_abec ,_agca :=_bgeea .PageFromIndirectObject (_cagdc );_agca ==nil {_dffe .Page =int64 (_abec -1);}else {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cagdc );};_dffe .PageObj =_cagdc ;}else if _cfaag ,_daafc :=_dbc .GetIntVal (_beabd );_daafc {if _cfaag >=0&&_cfaag < len (_bgeea .PageList ){_dffe .PageObj =_bgeea .PageList [_cfaag ].GetPageAsIndirectObject ();}else {_gge .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cfaag );};_dffe .Page =int64 (_cfaag );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_beabd );};_bacff ,_fcgag :=_dbc .GetNameVal (_fbef .Get (1));if !_fcgag {_gge .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fbef .Get (1));return _dffe ,nil ;};switch _bacff {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _edadac > 2{_dffe .Y ,_ =_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_fbef .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _edadac > 2{_dffe .X ,_ =_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_fbef .Get (2)));};case "\u0058\u0059\u005a":if _edadac > 4{_dffe .X ,_ =_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_fbef .Get (2)));_dffe .Y ,_ =_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_fbef .Get (3)));_dffe .Zoom ,_ =_dbc .GetNumberAsFloat (_dbc .TraceToDirectObject (_fbef .Get (4)));};default:_bacff ="\u0046\u0069\u0074";};_dffe .Mode =_bacff ;return _dffe ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fceb _dbc .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _dbc .PdfObject ;Sy _dbc .PdfObject ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _dbc .PdfObject ;LE _dbc .PdfObject ;BS _dbc .PdfObject ;IC _dbc .PdfObject ;BE _dbc .PdfObject ;IT _dbc .PdfObject ;Measure _dbc .PdfObject ;};func _bcfd (_ddff string )map[string ]string {_cddf :=_efee .Split (_ddff ,-1);_fbeec :=map[string ]string {};for _ ,_bfeea :=range _cddf {_cccgf :=_eaga .FindStringSubmatch (_bfeea );if _cccgf ==nil {continue ;};_cgcad ,_bcag :=_cccgf [1],_cccgf [2];_fbeec [_cgcad ]=_bcag ;};return _fbeec ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bgdb *PdfField )Flags ()FieldFlag {var _bdgg FieldFlag ;_gdea ,_ccge :=_bgdb .inherit (func (_egdb *PdfField )bool {if _egdb .Ff !=nil {_bdgg =FieldFlag (*_bgdb .Ff );return true ;};return false ;});if _ccge !=nil {_gge .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ccge );};if !_gdea {_gge .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bdgg ;};func (_efgdc *PdfAcroForm )fill (_afgdc FieldValueProvider ,_cgeea FieldAppearanceGenerator )error {if _efgdc ==nil {return nil ;};_bdggc ,_aeae :=_afgdc .FieldValues ();if _aeae !=nil {return _aeae ;};for _ ,_aaefa :=range _efgdc .AllFields (){_gfdbd :=_aaefa .PartialName ();_dfcc ,_fddea :=_bdggc [_gfdbd ];if !_fddea {if _ccbb ,_dadde :=_aaefa .FullName ();_dadde ==nil {_dfcc ,_fddea =_bdggc [_ccbb ];};};if !_fddea {_gge .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gfdbd );continue ;};if _fdce :=_abge (_aaefa ,_dfcc );_fdce !=nil {return _fdce ;};if _cgeea ==nil {continue ;};for _ ,_cbecc :=range _aaefa .Annotations {_ecccf ,_eefb :=_cgeea .GenerateAppearanceDict (_efgdc ,_aaefa ,_cbecc );if _eefb !=nil {return _eefb ;};_cbecc .AP =_ecccf ;_cbecc .ToPdfObject ();};};return nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _dbc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gbgag *PdfSignature )ToPdfObject ()_dbc .PdfObject {_gccc :=_gbgag ._cedf ;var _aeefc *_dbc .PdfObjectDictionary ;if _cefb ,_fcdef :=_gccc .PdfObject .(*pdfSignDictionary );_fcdef {_aeefc =_cefb .PdfObjectDictionary ;}else {_aeefc =_gccc .PdfObject .(*_dbc .PdfObjectDictionary );};_aeefc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gbgag .Type );_aeefc .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_gbgag .Filter );_aeefc .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_gbgag .SubFilter );_aeefc .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gbgag .ByteRange );_aeefc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gbgag .Contents );_aeefc .SetIfNotNil ("\u0043\u0065\u0072\u0074",_gbgag .Cert );_aeefc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbgag .Name );_aeefc .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_gbgag .Reason );_aeefc .SetIfNotNil ("\u004d",_gbgag .M );_aeefc .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_gbgag .Reference );_aeefc .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_gbgag .Changes );_aeefc .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_gbgag .ContactInfo );return _gccc ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_dbc .PdfObjectInteger ;BitsPerComponent *_dbc .PdfObjectInteger ;BitsPerFlag *_dbc .PdfObjectInteger ;Decode *_dbc .PdfObjectArray ;Function []PdfFunction ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _f .Time ){_ccfbf .Lock ();defer _ccfbf .Unlock ();_feddb =creationDate ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_dbc .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_dbc .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_dbc .PdfObjectBool ;_cffaa PdfModel ;_bdgfb _dbc .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
type PageCallback func (_ecbab int ,_ededa *PdfPage );

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_fcdae :=NewPdfAnnotation ();_cbbcc :=&PdfAnnotationTrapNet {};_cbbcc .PdfAnnotation =_fcdae ;_fcdae .SetContext (_cbbcc );return _cbbcc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_abag *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _abag .UnderlyingCS ==nil {return nil ,_ge .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _abag .UnderlyingCS .ColorFromFloats (vals );};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gaaea []byte ;_fgabe []float64 ;};

// SetBorderWidth sets the style's border width.
func (_fcbed *PdfBorderStyle )SetBorderWidth (width float64 ){_fcbed .W =&width };

// ToPdfObject implements interface PdfModel.
func (_dccc *PdfAnnotationCaret )ToPdfObject ()_dbc .PdfObject {_dccc .PdfAnnotation .ToPdfObject ();_abde :=_dccc ._gef ;_gdb :=_abde .PdfObject .(*_dbc .PdfObjectDictionary );_dccc .PdfAnnotationMarkup .appendToPdfDictionary (_gdb );_gdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dbc .MakeName ("\u0043\u0061\u0072e\u0074"));_gdb .SetIfNotNil ("\u0052\u0044",_dccc .RD );_gdb .SetIfNotNil ("\u0053\u0079",_dccc .Sy );return _abde ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_befed :_dbc .MakeIndirectObject (_dbc .MakeDict ())}};

// ToPdfObject implements interface PdfModel.
func (_ggcf *PdfActionImportData )ToPdfObject ()_dbc .PdfObject {_ggcf .PdfAction .ToPdfObject ();_baeg :=_ggcf ._ff ;_gdf :=_baeg .PdfObject .(*_dbc .PdfObjectDictionary );_gdf .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeImportData )));if _ggcf .F !=nil {_gdf .Set ("\u0046",_ggcf .F .ToPdfObject ());};return _baeg ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gcgdd *PdfReader )Decrypt (password []byte )(bool ,error ){_eeee ,_dbgcd :=_gcgdd ._efgcc .Decrypt (password );if _dbgcd !=nil {return false ,_dbgcd ;};if !_eeee {return false ,nil ;};_dbgcd =_gcgdd .loadStructure ();if _dbgcd !=nil {_gge .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dbgcd );return false ,_dbgcd ;};return true ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_dcebe *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _abcff []*PdfField ;if _dcebe .AcroForm !=nil {_abcff =_dcebe .AcroForm .AllFields ();};_cbfbg :=make (map[*PdfField ]struct{},len (_abcff ));for _ ,_cabfe :=range _abcff {_cbfbg [_cabfe ]=struct{}{};};for _ ,_cdabf :=range _dcebe .PageList {_eeec ,_acbab :=_cdabf .GetAnnotations ();if _acbab !=nil {return false ,_acbab ;};for _ ,_eacdd :=range _eeec {_ddgbg ,_eadc :=_eacdd .GetContext ().(*PdfAnnotationWidget );if !_eadc {continue ;};_dfgd :=_ddgbg .Field ();if _dfgd ==nil {return true ,nil ;};if _ ,_fbdc :=_cbfbg [_dfgd ];!_fbdc {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgf *PdfActionGoTo3DView )ToPdfObject ()_dbc .PdfObject {_cgf .PdfAction .ToPdfObject ();_daf :=_cgf ._ff ;_cbg :=_daf .PdfObject .(*_dbc .PdfObjectDictionary );_cbg .SetIfNotNil ("\u0053",_dbc .MakeName (string (ActionTypeGoTo3DView )));_cbg .SetIfNotNil ("\u0054\u0041",_cgf .TA );_cbg .SetIfNotNil ("\u0056",_cgf .V );return _daf ;};var (ErrRequiredAttributeMissing =_ge .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ge .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ge .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_eaceb =_ge .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ge .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ge .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_egb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_dbc .ErrNotSupported );ErrType1CFontNotSupported =_egb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_dbc .ErrNotSupported );ErrType3FontNotSupported =_egb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_dbc .ErrNotSupported );ErrTTCmapNotSupported =_egb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_dbc .ErrNotSupported );ErrSignNotEnoughSpace =_egb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_egb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gagfa *PdfShadingPattern )ToPdfObject ()_dbc .PdfObject {_gagfa .PdfPattern .ToPdfObject ();_geebe :=_gagfa .getDict ();if _gagfa .Shading !=nil {_geebe .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gagfa .Shading .ToPdfObject ());};if _gagfa .Matrix !=nil {_geebe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gagfa .Matrix );};if _gagfa .ExtGState !=nil {_geebe .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gagfa .ExtGState );};return _gagfa ._dfacd ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_dbc .PdfObjectDictionary )(*PdfPageResources ,error ){_cefec :=NewPdfPageResources ();if _cbgde :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cbgde !=nil {_cefec .ExtGState =_cbgde ;};if _bbded :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bbded !=nil &&!_dbc .IsNullObject (_bbded ){_cefec .ColorSpace =_bbded ;};if _adafc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_adafc !=nil {_cefec .Pattern =_adafc ;};if _ggcc :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ggcc !=nil {_cefec .Shading =_ggcc ;};if _edgcag :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_edgcag !=nil {_cefec .XObject =_edgcag ;};if _bdbc :=_dbc .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bdbc !=nil {_cefec .Font =_bdbc ;};if _aafee :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_aafee !=nil {_cefec .ProcSet =_aafee ;};if _faad :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_faad !=nil {_cefec .Properties =_faad ;};return _cefec ,nil ;};func _fcfbg (_bddcc *_dbc .PdfObjectDictionary ,_bbde *fontCommon )(*pdfCIDFontType2 ,error ){if _bbde ._abdbb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gge .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bbde );return nil ,_dbc .ErrRangeError ;};_bcgbb :=_cgbfc (_bbde );_cecge ,_fdecg :=_dbc .GetDict (_bddcc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fdecg {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bbde );return nil ,ErrRequiredAttributeMissing ;};_bcgbb .CIDSystemInfo =_cecge ;_bcgbb .DW =_bddcc .Get ("\u0044\u0057");_bcgbb .W =_bddcc .Get ("\u0057");_bcgbb .DW2 =_bddcc .Get ("\u0044\u0057\u0032");_bcgbb .W2 =_bddcc .Get ("\u0057\u0032");_bcgbb .CIDToGIDMap =_bddcc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_bcgbb ._cbdec =1000.0;if _ebcgg ,_ebbbb :=_dbc .GetNumberAsFloat (_bcgbb .DW );_ebbbb ==nil {_bcgbb ._cbdec =_ebcgg ;};_gdcf ,_agagg :=_cfcag (_bcgbb .W );if _agagg !=nil {return nil ,_agagg ;};if _gdcf ==nil {_gdcf =map[_cg .CharCode ]float64 {};};_bcgbb ._agadf =_gdcf ;return _bcgbb ,nil ;};func _cgbb (_efbb _dbc .PdfObject )(*PdfColorspaceICCBased ,error ){_fecf :=&PdfColorspaceICCBased {};if _abdead ,_bgdga :=_efbb .(*_dbc .PdfIndirectObject );_bgdga {_fecf ._ggcaf =_abdead ;};_efbb =_dbc .TraceToDirectObject (_efbb );_cfcfe ,_aafa :=_efbb .(*_dbc .PdfObjectArray );if !_aafa {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfcfe .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_efbb =_dbc .TraceToDirectObject (_cfcfe .Get (0));_bbad ,_aafa :=_efbb .(*_dbc .PdfObjectName );if !_aafa {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bbad !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_efbb =_cfcfe .Get (1);_fcdd ,_aafa :=_dbc .GetStream (_efbb );if !_aafa {_gge .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_efbb );return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cegf :=_fcdd .PdfObjectDictionary ;_afabe ,_aafa :=_cegf .Get ("\u004e").(*_dbc .PdfObjectInteger );if !_aafa {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_afabe !=1&&*_afabe !=3&&*_afabe !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_fecf .N =int (*_afabe );if _dbfa :=_cegf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dbfa !=nil {_cfgbc ,_gggcc :=NewPdfColorspaceFromPdfObject (_dbfa );if _gggcc !=nil {return nil ,_gggcc ;};_fecf .Alternate =_cfgbc ;};if _afdb :=_cegf .Get ("\u0052\u0061\u006eg\u0065");_afdb !=nil {_afdb =_dbc .TraceToDirectObject (_afdb );_abgcg ,_edefa :=_afdb .(*_dbc .PdfObjectArray );if !_edefa {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _abgcg .Len ()!=2*_fecf .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_dbca ,_acbgf :=_abgcg .GetAsFloat64Slice ();if _acbgf !=nil {return nil ,_acbgf ;};_fecf .Range =_dbca ;}else {_fecf .Range =make ([]float64 ,2*_fecf .N );for _dbdf :=0;_dbdf < _fecf .N ;_dbdf ++{_fecf .Range [2*_dbdf ]=0.0;_fecf .Range [2*_dbdf +1]=1.0;};};if _ccfeb :=_cegf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ccfeb !=nil {_eceg ,_ggdfe :=_ccfeb .(*_dbc .PdfObjectStream );if !_ggdfe {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_fecf .Metadata =_eceg ;};_eacc ,_cfefb :=_dbc .DecodeStream (_fcdd );if _cfefb !=nil {return nil ,_cfefb ;};_fecf .Data =_eacc ;_fecf ._acea =_fcdd ;return _fecf ,nil ;};type pdfCIDFontType0 struct{fontCommon ;_ebbba *_dbc .PdfIndirectObject ;_bggg _cg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_dbc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _dbc .PdfObject ;W _dbc .PdfObject ;DW2 _dbc .PdfObject ;W2 _dbc .PdfObject ;_fgcd map[_cg .CharCode ]float64 ;_efcbd float64 ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_gbg *PdfAppender )addNewObject (_egbaf _dbc .PdfObject ){if _ ,_eabdd :=_gbg ._agag [_egbaf ];!_eabdd {_gbg ._fgea =append (_gbg ._fgea ,_egbaf );_gbg ._agag [_egbaf ]=struct{}{};};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dcbf *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccbe :=vals [0];if _ccbe < 0.0||_ccbe > 100.0{_gge .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ccbe );return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcaae :=vals [1];_dgeb :=float64 (-100);_beacd :=float64 (100);if len (_dcbf .Range )> 1{_dgeb =_dcbf .Range [0];_beacd =_dcbf .Range [1];};if _fcaae < _dgeb ||_fcaae > _beacd {_gge .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fcaae ,_dgeb ,_beacd );return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fadd :=vals [2];_ageca :=float64 (-100);_fefd :=float64 (100);if len (_dcbf .Range )> 3{_ageca =_dcbf .Range [2];_fefd =_dcbf .Range [3];};if _fadd < _ageca ||_fadd > _fefd {_gge .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fadd ,_ageca ,_fefd );return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddba :=NewPdfColorLab (_ccbe ,_fcaae ,_fadd );return _ddba ,nil ;};func (_fdcf *PdfFilespec )getDict ()*_dbc .PdfObjectDictionary {if _acef ,_cbcc :=_fdcf ._gbfcg .(*_dbc .PdfIndirectObject );_cbcc {_adcc ,_cgccc :=_acef .PdfObject .(*_dbc .PdfObjectDictionary );if !_cgccc {return nil ;};return _adcc ;}else if _ddee ,_daebe :=_fdcf ._gbfcg .(*_dbc .PdfObjectDictionary );_daebe {return _ddee ;}else {_gge .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fdcf ._gbfcg );return nil ;};};

// RemovePage removes a page by number.
func (_gaac *PdfAppender )RemovePage (pageNum int ){_ggca :=pageNum -1;_gaac ._cgedd =append (_gaac ._cgedd [0:_ggca ],_gaac ._cgedd [pageNum :]...);};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fffg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// AddExtGState adds a graphics state to the XObject resources.
func (_gafaf *PdfPage )AddExtGState (name _dbc .PdfObjectName ,egs *_dbc .PdfObjectDictionary )error {if _gafaf .Resources ==nil {_gafaf .Resources =NewPdfPageResources ();};if _gafaf .Resources .ExtGState ==nil {_gafaf .Resources .ExtGState =_dbc .MakeDict ();};_dddaa ,_afeag :=_dbc .TraceToDirectObject (_gafaf .Resources .ExtGState ).(*_dbc .PdfObjectDictionary );if !_afeag {_gge .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_dbc .TraceToDirectObject (_gafaf .Resources .ExtGState ));return _ge .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dddaa .Set (name ,egs );return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eff :=NewPdfAction ();_bcg :=&PdfActionSound {};_bcg .PdfAction =_eff ;_eff .SetContext (_bcg );return _bcg ;};type pdfFont interface{_aca .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_dbc .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gaebdd *PdfShading )GetContext ()PdfModel {return _gaebdd ._cffaa };

// SetContext set the sub annotation (context).
func (_dfabf *PdfShading )SetContext (ctx PdfModel ){_dfabf ._cffaa =ctx };

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_dbc .PdfObject ,error );};func _eggagdb (_abfff *[]*PdfField ,_fgdc FieldFilterFunc ,_ebgd bool )[]*PdfField {if _abfff ==nil {return nil ;};_dbfbb :=*_abfff ;if len (*_abfff )==0{return nil ;};_aaffa :=_dbfbb [:0];if _fgdc ==nil {_fgdc =func (*PdfField )bool {return true };};var _efbba []*PdfField ;for _ ,_ffde :=range _dbfbb {_fcddd :=_fgdc (_ffde );if _fcddd {_efbba =append (_efbba ,_ffde );if len (_ffde .Kids )> 0{_efbba =append (_efbba ,_eggagdb (&_ffde .Kids ,_fgdc ,_ebgd )...);};};if !_ebgd ||!_fcddd ||len (_ffde .Kids )> 0{_aaffa =append (_aaffa ,_ffde );};};*_abfff =_aaffa ;return _efbba ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gfeeg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_aebb ,_efcg :=color .(*PdfColorPattern );if !_efcg {_gge .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _aebb .Color ==nil {return color ,nil ;};if _gfeeg .UnderlyingCS ==nil {return nil ,_ge .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gfeeg .UnderlyingCS .ColorToRGB (_aebb .Color );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_efgcc *_dbc .PdfParser ;_gcfb _dbc .PdfObject ;_cabfa *_dbc .PdfIndirectObject ;_ggaee *_dbc .PdfObjectDictionary ;_afege []*_dbc .PdfIndirectObject ;PageList []*PdfPage ;_edfbg int ;_gcaad *_dbc .PdfObjectDictionary ;_ffca *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_dcga *modelManager ;_fcbf bool ;_gaaae map[_dbc .PdfObject ]struct{};_egge _ec .ReadSeeker ;_bggcd string ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_ddga *PdfInfo )GetCustomInfo (name string )*_dbc .PdfObjectString {var _accfa *_dbc .PdfObjectString ;if _ddga ._fbfca ==nil {return _accfa ;};if _fefg ,_adcbb :=_ddga ._fbfca .Get (*_dbc .MakeName (name )).(*_dbc .PdfObjectString );_adcbb {_accfa =_fefg ;};return _accfa ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_feefa *PdfInfo )ToPdfObject ()_dbc .PdfObject {_aece :=_dbc .MakeDict ();_aece .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_feefa .Title );_aece .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_feefa .Author );_aece .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_feefa .Subject );_aece .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_feefa .Keywords );_aece .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_feefa .Creator );_aece .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_feefa .Producer );_aece .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_feefa .Trapped );if _feefa .CreationDate !=nil {_aece .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_feefa .CreationDate .ToPdfObject ());};if _feefa .ModifiedDate !=nil {_aece .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_feefa .ModifiedDate .ToPdfObject ());};for _ ,_bgbb :=range _feefa ._fbfca .Keys (){_aece .SetIfNotNil (_bgbb ,_feefa ._fbfca .Get (_bgbb ));};return _aece ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _dbc .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ccdg *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gge .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ge .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_ge .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_fccdb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_aaded :=NewPdfOutlineItem ();_aaded .Title =_dbc .MakeEncodedString (_fccdb .Title ,true );_aaded .Dest =_fccdb .Dest .ToPdfObject ();var _efda []*PdfOutlineItem ;var _fcce int64 ;var _fefec *PdfOutlineItem ;for _ ,_bgddf :=range _fccdb .Entries {_aabd ,_egee :=_bgddf .ToPdfOutlineItem ();_aabd .Parent =&_aaded .PdfOutlineTreeNode ;if _fefec !=nil {_fefec .Next =&_aabd .PdfOutlineTreeNode ;_aabd .Prev =&_fefec .PdfOutlineTreeNode ;};_efda =append (_efda ,_aabd );_fcce +=_egee ;_fefec =_aabd ;};_ggcag :=len (_efda );_fcce +=int64 (_ggcag );if _ggcag > 0{_aaded .First =&_efda [0].PdfOutlineTreeNode ;_aaded .Last =&_efda [_ggcag -1].PdfOutlineTreeNode ;_aaded .Count =&_fcce ;};return _aaded ,_fcce ;};func (_bcadgf *PdfReader )newPdfSignatureFromIndirect (_aded *_dbc .PdfIndirectObject )(*PdfSignature ,error ){_gdec ,_babbf :=_aded .PdfObject .(*_dbc .PdfObjectDictionary );if !_babbf {_gge .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _accc ,_fadeg :=_bcadgf ._dcga .GetModelFromPrimitive (_aded ).(*PdfSignature );_fadeg {return _accc ,nil ;};_efdb :=&PdfSignature {};_efdb ._cedf =_aded ;_efdb .Type ,_ =_dbc .GetName (_gdec .Get ("\u0054\u0079\u0070\u0065"));_efdb .Filter ,_babbf =_dbc .GetName (_gdec .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_babbf {_gge .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_efdb .SubFilter ,_ =_dbc .GetName (_gdec .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_efdb .Contents ,_babbf =_dbc .GetString (_gdec .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_babbf {_gge .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_efdb .Cert =_gdec .Get ("\u0043\u0065\u0072\u0074");_efdb .ByteRange ,_ =_dbc .GetArray (_gdec .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_efdb .Reference ,_ =_dbc .GetArray (_gdec .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_efdb .Changes ,_ =_dbc .GetArray (_gdec .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_efdb .Name ,_ =_dbc .GetString (_gdec .Get ("\u004e\u0061\u006d\u0065"));_efdb .M ,_ =_dbc .GetString (_gdec .Get ("\u004d"));_efdb .Location ,_ =_dbc .GetString (_gdec .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_efdb .Reason ,_ =_dbc .GetString (_gdec .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_efdb .ContactInfo ,_ =_dbc .GetString (_gdec .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_efdb .R ,_ =_dbc .GetInt (_gdec .Get ("\u0052"));_efdb .V ,_ =_dbc .GetInt (_gdec .Get ("\u0056"));_efdb .PropBuild ,_ =_dbc .GetDict (_gdec .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_efdb .PropAuthTime ,_ =_dbc .GetInt (_gdec .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_efdb .PropAuthType ,_ =_dbc .GetName (_gdec .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _efdb ,nil ;};