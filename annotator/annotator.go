//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_e "bytes";_ad "errors";_f "github.com/pplorins/unipdf/v3/common";_c "github.com/pplorins/unipdf/v3/contentstream";_d "github.com/pplorins/unipdf/v3/contentstream/draw";_ca "github.com/pplorins/unipdf/v3/core";_fe "github.com/pplorins/unipdf/v3/internal/textencoding";_bbe "github.com/pplorins/unipdf/v3/model";_a "image";_ec "math";_bg "strings";_bb "unicode";);func _dgg (_edbc []*SignatureLine ,_bbd *SignatureFieldOpts )(*_ca .PdfObjectDictionary ,error ){if _bbd ==nil {_bbd =NewSignatureFieldOpts ();};var _gacd error ;var _cgff *_ca .PdfObjectName ;_bgea :=_bbd .Font ;if _bgea !=nil {_bbf ,_ :=_bgea .GetFontDescriptor ();if _bbf !=nil {if _gggd ,_agca :=_bbf .FontName .(*_ca .PdfObjectName );_agca {_cgff =_gggd ;};};if _cgff ==nil {_cgff =_ca .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _bgea ,_gacd =_bbe .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gacd !=nil {return nil ,_gacd ;};_cgff =_ca .MakeName ("\u0048\u0065\u006c\u0076");};_deaa :=_bbd .FontSize ;if _deaa <=0{_deaa =10;};if _bbd .LineHeight <=0{_bbd .LineHeight =1;};_ffbda :=_bbd .LineHeight *_deaa ;_faf ,_fgde :=_bgea .GetRuneMetrics (' ');if !_fgde {return nil ,_ad .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_bgab :=_faf .Wx ;var _eefb float64 ;var _agcc []string ;for _ ,_abdd :=range _edbc {if _abdd .Text ==""{continue ;};_bce :=_abdd .Text ;if _abdd .Desc !=""{_bce =_abdd .Desc +"\u003a\u0020"+_bce ;};_agcc =append (_agcc ,_bce );var _fdba float64 ;for _ ,_bde :=range _bce {_gdgd ,_ceab :=_bgea .GetRuneMetrics (_bde );if !_ceab {continue ;};_fdba +=_gdgd .Wx ;};if _fdba > _eefb {_eefb =_fdba ;};};_eefb =_eefb *_deaa /1000.0;_edbca :=float64 (len (_agcc ))*_ffbda ;_dggc :=_bbd .Image !=nil ;_caed :=_bbd .Rect ;if _caed ==nil {_caed =[]float64 {0,0,_eefb ,_edbca };if _dggc {_caed [2]=_eefb *2;_caed [3]=_edbca *2;};_bbd .Rect =_caed ;};_gbgd :=_caed [2]-_caed [0];_agce :=_caed [3]-_caed [1];_egbe ,_beb :=_caed ,_caed ;var _facf ,_ggcf float64 ;if _dggc &&len (_agcc )> 0{if _bbd .ImagePosition <=SignatureImageRight {_dadg :=[]float64 {_caed [0],_caed [1],_caed [0]+(_gbgd /2),_caed [3]};_gfad :=[]float64 {_caed [0]+(_gbgd /2),_caed [1],_caed [2],_caed [3]};if _bbd .ImagePosition ==SignatureImageLeft {_egbe ,_beb =_dadg ,_gfad ;}else {_egbe ,_beb =_gfad ,_dadg ;};}else {_cag :=[]float64 {_caed [0],_caed [1],_caed [2],_caed [1]+(_agce /2)};_dccd :=[]float64 {_caed [0],_caed [1]+(_agce /2),_caed [2],_caed [3]};if _bbd .ImagePosition ==SignatureImageTop {_egbe ,_beb =_dccd ,_cag ;}else {_egbe ,_beb =_cag ,_dccd ;};};};_facf =_beb [2]-_beb [0];_ggcf =_beb [3]-_beb [1];var _bdd float64 ;if _bbd .AutoSize {if _eefb > _facf ||_edbca > _ggcf {_dfdb :=_ec .Min (_facf /_eefb ,_ggcf /_edbca );_deaa *=_dfdb ;};_ffbda =_bbd .LineHeight *_deaa ;_bdd +=(_ggcf -float64 (len (_agcc ))*_ffbda )/2;};_aecc :=_c .NewContentCreator ();_fgce :=_bbe .NewPdfPageResources ();_fgce .SetFontByName (*_cgff ,_bgea .ToPdfObject ());if _bbd .BorderSize <=0{_bbd .BorderSize =0;_bbd .BorderColor =_bbe .NewPdfColorDeviceGray (1);};if _bbd .BorderColor ==nil {_bbd .BorderColor =_bbe .NewPdfColorDeviceGray (1);};if _bbd .FillColor ==nil {_bbd .FillColor =_bbe .NewPdfColorDeviceGray (1);};_aecc .Add_q ().SetNonStrokingColor (_bbd .FillColor ).SetStrokingColor (_bbd .BorderColor ).Add_w (_bbd .BorderSize ).Add_re (_caed [0],_caed [1],_gbgd ,_agce ).Add_B ().Add_Q ();if _bbd .WatermarkImage !=nil {_gceb :=[]float64 {_caed [0],_caed [1],_caed [2],_caed [3]};_abdda ,_eacg ,_eade :=_bfeb (_bbd .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_bbd ,_gceb ,_aecc );if _eade !=nil {return nil ,_eade ;};_fgce .SetXObjectImageByName (*_abdda ,_eacg );};_aecc .Add_q ();_aecc .Translate (_beb [0],_beb [3]-_ffbda -_bdd );_aecc .Add_BT ();_bfef :=_bgea .Encoder ();for _ ,_gbd :=range _agcc {var _cdfc []byte ;for _ ,_facfd :=range _gbd {if _bb .IsSpace (_facfd ){if len (_cdfc )> 0{_aecc .SetNonStrokingColor (_bbd .TextColor ).Add_Tf (*_cgff ,_deaa ).Add_TL (_ffbda ).Add_TJ ([]_ca .PdfObject {_ca .MakeStringFromBytes (_cdfc )}...);_cdfc =nil ;};_aecc .Add_Tf (*_cgff ,_deaa ).Add_TL (_ffbda ).Add_TJ ([]_ca .PdfObject {_ca .MakeFloat (-_bgab )}...);}else {_cdfc =append (_cdfc ,_bfef .Encode (string (_facfd ))...);};};if len (_cdfc )> 0{_aecc .SetNonStrokingColor (_bbd .TextColor ).Add_Tf (*_cgff ,_deaa ).Add_TL (_ffbda ).Add_TJ ([]_ca .PdfObject {_ca .MakeStringFromBytes (_cdfc )}...);};_aecc .Add_Td (0,-_ffbda );};_aecc .Add_ET ();_aecc .Add_Q ();if _dggc {_cbae ,_cdce ,_fbed :=_bfeb (_bbd .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_bbd ,_egbe ,_aecc );if _fbed !=nil {return nil ,_fbed ;};_fgce .SetXObjectImageByName (*_cbae ,_cdce );};_cagc :=_bbe .NewXObjectForm ();_cagc .Resources =_fgce ;_cagc .BBox =_ca .MakeArrayFromFloats (_caed );_cagc .SetContentStream (_aecc .Bytes (),_fbbe ());_bac :=_ca .MakeDict ();_bac .Set ("\u004e",_cagc .ToPdfObject ());return _bac ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_bbe .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_bbe .PdfFieldText ,error ){if page ==nil {return nil ,_ad .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ad .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cee :=_bbe .NewPdfField ();_daa :=&_bbe .PdfFieldText {};_cee .SetContext (_daa );_daa .PdfField =_cee ;_daa .T =_ca .MakeString (name );if opt .MaxLen > 0{_daa .MaxLen =_ca .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_daa .V =_ca .MakeString (opt .Value );};_fgeb :=_bbe .NewPdfAnnotationWidget ();_fgeb .Rect =_ca .MakeArrayFromFloats (rect );_fgeb .P =page .ToPdfObject ();_fgeb .F =_ca .MakeInteger (4);_fgeb .Parent =_daa .ToPdfObject ();_daa .Annotations =append (_daa .Annotations ,_fgeb );return _daa ,nil ;};func _ecgf (_agbf RectangleAnnotationDef ,_gbcg string )([]byte ,*_bbe .PdfRectangle ,*_bbe .PdfRectangle ,error ){_ege :=_d .Rectangle {X :0,Y :0,Width :_agbf .Width ,Height :_agbf .Height ,FillEnabled :_agbf .FillEnabled ,FillColor :_agbf .FillColor ,BorderEnabled :_agbf .BorderEnabled ,BorderWidth :2*_agbf .BorderWidth ,BorderColor :_agbf .BorderColor ,Opacity :_agbf .Opacity };_acag ,_bgaa ,_fgf :=_ege .Draw (_gbcg );if _fgf !=nil {return nil ,nil ,nil ,_fgf ;};_aff :=&_bbe .PdfRectangle {};_aff .Llx =_agbf .X +_bgaa .Llx ;_aff .Lly =_agbf .Y +_bgaa .Lly ;_aff .Urx =_agbf .X +_bgaa .Urx ;_aff .Ury =_agbf .Y +_bgaa .Ury ;return _acag ,_bgaa ,_aff ,nil ;};func _da (_feb CircleAnnotationDef )(*_ca .PdfObjectDictionary ,*_bbe .PdfRectangle ,error ){_add :=_bbe .NewXObjectForm ();_add .Resources =_bbe .NewPdfPageResources ();_bbed :="";if _feb .Opacity < 1.0{_eacc :=_ca .MakeDict ();_eacc .Set ("\u0063\u0061",_ca .MakeFloat (_feb .Opacity ));_eacc .Set ("\u0043\u0041",_ca .MakeFloat (_feb .Opacity ));_baf :=_add .Resources .AddExtGState ("\u0067\u0073\u0031",_eacc );if _baf !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_baf ;};_bbed ="\u0067\u0073\u0031";};_dc ,_cg ,_dbe ,_gc :=_cgc (_feb ,_bbed );if _gc !=nil {return nil ,nil ,_gc ;};_gc =_add .SetContentStream (_dc ,nil );if _gc !=nil {return nil ,nil ,_gc ;};_add .BBox =_cg .ToPdfObject ();_cd :=_ca .MakeDict ();_cd .Set ("\u004e",_add .ToPdfObject ());return _cd ,_dbe ,nil ;};func _gff (_bdc *_bbe .PdfAnnotationWidget ,_bc *_bbe .PdfFieldText ,_egg *_bbe .PdfPageResources ,_ee AppearanceStyle )(*_ca .PdfObjectDictionary ,error ){_afd :=_bbe .NewPdfPageResources ();_abc ,_abe :=_ca .GetArray (_bdc .Rect );if !_abe {return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_gac ,_efb :=_bbe .NewPdfRectangle (*_abc );if _efb !=nil {return nil ,_efb ;};_egge ,_cc :=_gac .Width (),_gac .Height ();_df ,_aeaa :=_egge ,_cc ;_cgg ,_geb :=_ca .GetDict (_bdc .MK );if _geb {_edd ,_ :=_ca .GetDict (_bdc .BS );_eef :=_ee .applyAppearanceCharacteristics (_cgg ,_edd ,nil );if _eef !=nil {return nil ,_eef ;};};_fec ,_efb :=_c .NewContentStreamParser (_dfb (_bc .PdfField )).Parse ();if _efb !=nil {return nil ,_efb ;};_daf :=_c .NewContentCreator ();if _ee .BorderSize > 0{_cgb (_daf ,_ee ,_egge ,_cc );};if _ee .DrawAlignmentReticle {_gd :=_ee ;_gd .BorderSize =0.2;_agb (_daf ,_gd ,_egge ,_cc );};_daf .Add_BMC ("\u0054\u0078");_daf .Add_q ();_egge ,_cc =_ee .applyRotation (_cgg ,_egge ,_cc ,_daf );_daf .Add_BT ();_bcc ,_afef ,_efb :=_ee .processDA (_bc .PdfField ,_fec ,_egg ,_afd ,_daf );if _efb !=nil {return nil ,_efb ;};_bbb :=_bcc .Font ;_dg :=_bcc .Size ;_bdce :=_ca .MakeName (_bcc .Name );_fga :=_dg ==0;if _fga &&_afef {_dg =_cc *_ee .AutoFontSizeFraction ;};_dd :=_bbb .Encoder ();if _dd ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_dd =_fe .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_fgac ,_efb :=_bbb .GetFontDescriptor ();if _efb !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bcd string ;if _bcdb ,_bfd :=_ca .GetString (_bc .V );_bfd {_bcd =_bcdb .Decoded ();};if len (_bcd )==0{return nil ,nil ;};_cda :=[]string {_bcd };_aeg :=false ;if _bc .Flags ().Has (_bbe .FieldFlagMultiline ){_aeg =true ;_bcd =_bg .Replace (_bcd ,"\u000d\u000a","\u000a",-1);_bcd =_bg .Replace (_bcd ,"\u000d","\u000a",-1);_cda =_bg .Split (_bcd ,"\u000a");};_gdf :=0.0;_eaf :=0;if _dd !=nil {_dgb :=len (_cda );_ggee :=0;for _ggee < _dgb {var _ce float64 ;_abcf :=-1;_ffg :=0.0;for _afdc ,_bgg :=range _cda [_ggee ]{if _bgg ==' '{_abcf =_afdc ;_ce =_ffg ;};_dcda ,_dbc :=_bbb .GetRuneMetrics (_bgg );if !_dbc {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_bgg );continue ;};_ffg +=_dcda .Wx ;if _aeg &&!_fga &&_dg *_ffg /1000.0> _egge &&_abcf > 0{_dbg :=_cda [_ggee ][_abcf +1:];if _ggee < len (_cda )-1{_cda =append (_cda [:_ggee +1],_cda [_ggee :]...);_cda [_ggee +1]=_dbg ;}else {_cda =append (_cda ,_dbg );};_dgb ++;_cda [_ggee ]=_cda [_ggee ][0:_abcf ];_ffg =_ce ;break ;};};if _ffg > _gdf {_gdf =_ffg ;};_cda [_ggee ]=string (_dd .Encode (_cda [_ggee ]));if len (_cda [_ggee ])> 0{_eaf ++;};_ggee ++;};};_dfd :=2.0;if _dg ==0||_fga &&_gdf > 0&&_dfd +_gdf *_dg /1000.0> _egge {_dg =0.95*1000.0*(_egge -_dfd )/_gdf ;};_gea :=_afe ;{if _gda ,_bge :=_ca .GetIntVal (_bc .Q );_bge {switch _gda {case 0:_gea =_afe ;case 1:_gea =_bf ;case 2:_gea =_gge ;default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_gda );};};};_ead :=_ee .MultilineLineHeight ;_eae :=_dg ;if _aeg &&_eaf > 1{_eae =_ead *_dg ;};var _dbgg float64 ;if _fgac !=nil {_dbgg ,_efb =_fgac .GetCapHeight ();if _efb !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_efb );};};if int (_dbgg )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_dbgg =1000;};_gb :=_dbgg /1000.0*_dg ;_ebf :=0.0;{_eadd :=float64 (_eaf )*_eae ;if _fga &&_ebf +_eadd > _cc {_dg =0.95*(_cc -_ebf )/float64 (_eaf );_eae =_dg ;if _aeg &&_eaf > 1{_eae =_ead *_dg ;};_gb =_dbgg /1000.0*_dg ;_eadd =float64 (_eaf )*_eae ;};if _cc > _eadd {if _aeg {if _ee .MultilineVAlignMiddle {_ace :=(_cc -_eadd )/2.0;_gdag :=_ace +_eadd -_eae ;_ebf =_gdag ;}else {_ebf =_cc -_eae ;_ebf -=_dg *0.5;};}else {_ebf =(_cc -_gb )/2.0;};};};_daf .Add_Tf (*_bdce ,_dg );_daf .Add_Td (_dfd ,_ebf );_dgd :=_dfd ;_ggg :=_dfd ;for _ag ,_ece :=range _cda {_abg :=0.0;for _ ,_aec :=range _ece {_gae ,_eaee :=_bbb .GetRuneMetrics (_aec );if !_eaee {continue ;};_abg +=_gae .Wx ;};_eced :=_abg /1000.0*_dg ;_cf :=_egge -_eced ;var _ffa float64 ;switch _gea {case _afe :_ffa =_dgd ;case _bf :_ffa =_cf /2;case _gge :_ffa =_cf ;};_dfd =_ffa -_ggg ;if _dfd > 0.0{_daf .Add_Td (_dfd ,0);};_ggg =_ffa ;_daf .Add_Tj (*_ca .MakeString (_ece ));if _ag < len (_cda )-1{_daf .Add_Td (0,-_eae *_ead );};};_daf .Add_ET ();_daf .Add_Q ();_daf .Add_EMC ();_fa :=_bbe .NewXObjectForm ();_fa .Resources =_afd ;_fa .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_df ,_aeaa });_fa .SetContentStream (_daf .Bytes (),_fbbe ());_ebff :=_ca .MakeDict ();_ebff .Set ("\u004e",_fa .ToPdfObject ());return _ebff ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_aea *AppearanceStyle ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_bbe .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_bbe .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ad .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_dde ,_dedg :=_dgg (lines ,opts );if _dedg !=nil {return nil ,_dedg ;};_caege :=_bbe .NewPdfFieldSignature (signature );_caege .Rect =_ca .MakeArrayFromFloats (opts .Rect );_caege .AP =_dde ;return _caege ,nil ;};func _cgb (_edb *_c .ContentCreator ,_bbbd AppearanceStyle ,_gag ,_bbg float64 ){_edb .Add_q ().Add_re (0,0,_gag ,_bbg ).Add_w (_bbbd .BorderSize ).SetStrokingColor (_bbbd .BorderColor ).SetNonStrokingColor (_bbbd .FillColor ).Add_B ().Add_Q ();};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_bbe .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_bbe .PdfFieldButton ,error ){if page ==nil {return nil ,_ad .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ad .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_decg ,_eddf :=_bbe .NewStandard14Font (_bbe .ZapfDingbatsName );if _eddf !=nil {return nil ,_eddf ;};_cfbe :=_bbe .NewPdfField ();_feba :=&_bbe .PdfFieldButton {};_cfbe .SetContext (_feba );_feba .PdfField =_cfbe ;_feba .T =_ca .MakeString (name );_feba .SetType (_bbe .ButtonTypeCheckbox );_gefd :="\u004f\u0066\u0066";if opt .Checked {_gefd ="\u0059\u0065\u0073";};_feba .V =_ca .MakeName (_gefd );_dbef :=_bbe .NewPdfAnnotationWidget ();_dbef .Rect =_ca .MakeArrayFromFloats (rect );_dbef .P =page .ToPdfObject ();_dbef .F =_ca .MakeInteger (4);_dbef .Parent =_feba .ToPdfObject ();_cebgb :=rect [2]-rect [0];_ecfc :=rect [3]-rect [1];var _abfb _e .Buffer ;_abfb .WriteString ("\u0071\u000a");_abfb .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_abfb .WriteString ("\u0042\u0054\u000a");_abfb .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_abfb .WriteString ("\u0045\u0054\u000a");_abfb .WriteString ("\u0051\u000a");_ddag :=_c .NewContentCreator ();_ddag .Add_q ();_ddag .Add_rg (0,0,1);_ddag .Add_BT ();_ddag .Add_Tf (*_ca .MakeName ("\u005a\u0061\u0044\u0062"),12);_ddag .Add_Td (0,0);_ddag .Add_ET ();_ddag .Add_Q ();_edf :=_bbe .NewXObjectForm ();_edf .SetContentStream (_ddag .Bytes (),_ca .NewRawEncoder ());_edf .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_cebgb ,_ecfc });_edf .Resources =_bbe .NewPdfPageResources ();_edf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_decg .ToPdfObject ());_ddag =_c .NewContentCreator ();_ddag .Add_q ();_ddag .Add_re (0,0,_cebgb ,_ecfc );_ddag .Add_W ().Add_n ();_ddag .Add_rg (0,0,1);_ddag .Translate (0,3.0);_ddag .Add_BT ();_ddag .Add_Tf (*_ca .MakeName ("\u005a\u0061\u0044\u0062"),12);_ddag .Add_Td (0,0);_ddag .Add_Tj (*_ca .MakeString ("\u0034"));_ddag .Add_ET ();_ddag .Add_Q ();_fbg :=_bbe .NewXObjectForm ();_fbg .SetContentStream (_ddag .Bytes (),_ca .NewRawEncoder ());_fbg .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_cebgb ,_ecfc });_fbg .Resources =_bbe .NewPdfPageResources ();_fbg .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_decg .ToPdfObject ());_gfd :=_ca .MakeDict ();_gfd .Set ("\u004f\u0066\u0066",_edf .ToPdfObject ());_gfd .Set ("\u0059\u0065\u0073",_fbg .ToPdfObject ());_gdab :=_ca .MakeDict ();_gdab .Set ("\u004e",_gfd );_dbef .AP =_gdab ;_dbef .AS =_ca .MakeName (_gefd );_feba .Annotations =append (_feba .Annotations ,_dbef );return _feba ,nil ;};type quadding int ;func _ede (_gbc *_bbe .PdfAnnotationWidget ,_dfg *_bbe .PdfFieldButton ,_fcb *_bbe .PdfPageResources ,_aece AppearanceStyle )(*_ca .PdfObjectDictionary ,error ){_fd ,_fac :=_ca .GetArray (_gbc .Rect );if !_fac {return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bca ,_ebe :=_bbe .NewPdfRectangle (*_fd );if _ebe !=nil {return nil ,_ebe ;};_egcd ,_bgf :=_bca .Width (),_bca .Height ();_cba ,_bafc :=_egcd ,_bgf ;_f .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_gbc .BS );_bbee ,_ebe :=_bbe .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _ebe !=nil {return nil ,_ebe ;};_bcb ,_gfed :=_ca .GetDict (_gbc .MK );if _gfed {_egd ,_ :=_ca .GetDict (_gbc .BS );_eee :=_aece .applyAppearanceCharacteristics (_bcb ,_egd ,_bbee );if _eee !=nil {return nil ,_eee ;};};_ggc :=_bbe .NewXObjectForm ();{_bcf :=_c .NewContentCreator ();if _aece .BorderSize > 0{_cgb (_bcf ,_aece ,_egcd ,_bgf );};if _aece .DrawAlignmentReticle {_dbf :=_aece ;_dbf .BorderSize =0.2;_agb (_bcf ,_dbf ,_egcd ,_bgf );};_egcd ,_bgf =_aece .applyRotation (_bcb ,_egcd ,_bgf ,_bcf );_fecc :=_aece .AutoFontSizeFraction *_bgf ;_edad ,_agc :=_bbee .GetRuneMetrics (_aece .CheckmarkRune );if !_agc {return nil ,_ad .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ddd :=_bbee .Encoder ();_bfb :=_ddd .Encode (string (_aece .CheckmarkRune ));_fgd :=_edad .Wx *_fecc /1000.0;_babd :=705.0;_defg :=_babd /1000.0*_fecc ;_gdc :=2.0;_fdb :=1.0;if _fgd < _egcd {_gdc =(_egcd -_fgd )/2.0;};if _defg < _bgf {_fdb =(_bgf -_defg )/2.0;};_bcf .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_fecc ).Add_Td (_gdc ,_fdb ).Add_Tj (*_ca .MakeStringFromBytes (_bfb )).Add_ET ().Add_Q ();_ggc .Resources =_bbe .NewPdfPageResources ();_ggc .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bbee .ToPdfObject ());_ggc .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_cba ,_bafc });_ggc .SetContentStream (_bcf .Bytes (),_fbbe ());};_dge :=_bbe .NewXObjectForm ();{_ebc :=_c .NewContentCreator ();if _aece .BorderSize > 0{_cgb (_ebc ,_aece ,_egcd ,_bgf );};_dge .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_cba ,_bafc });_dge .SetContentStream (_ebc .Bytes (),_fbbe ());};_acgg :=_ca .MakeDict ();_acgg .Set ("\u004f\u0066\u0066",_dge .ToPdfObject ());_acgg .Set ("\u0059\u0065\u0073",_ggc .ToPdfObject ());_cdf :=_ca .MakeDict ();_cdf .Set ("\u004e",_acgg );return _cdf ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func (_ffc *AppearanceStyle )applyRotation (_cdae *_ca .PdfObjectDictionary ,_fbf ,_fbefc float64 ,_cebg *_c .ContentCreator )(float64 ,float64 ){if !_ffc .AllowMK {return _fbf ,_fbefc ;};if _cdae ==nil {return _fbf ,_fbefc ;};_bfa ,_ :=_ca .GetNumberAsFloat (_cdae .Get ("\u0052"));if _bfa ==0{return _fbf ,_fbefc ;};_cfea :=-_bfa ;_bed :=_d .Path {Points :[]_d .Point {_d .NewPoint (0,0).Rotate (_cfea ),_d .NewPoint (_fbf ,0).Rotate (_cfea ),_d .NewPoint (0,_fbefc ).Rotate (_cfea ),_d .NewPoint (_fbf ,_fbefc ).Rotate (_cfea )}}.GetBoundingBox ();_cebg .RotateDeg (_bfa );_cebg .Translate (_bed .X ,_bed .Y );return _bed .Width ,_bed .Height ;};func _fbbe ()_ca .StreamEncoder {return _ca .NewFlateEncoder ()};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _bbe .PdfColor ;FillColor _bbe .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _cgc (_eg CircleAnnotationDef ,_ecf string )([]byte ,*_bbe .PdfRectangle ,*_bbe .PdfRectangle ,error ){_fb :=_d .Circle {X :_eg .X ,Y :_eg .Y ,Width :_eg .Width ,Height :_eg .Height ,FillEnabled :_eg .FillEnabled ,FillColor :_eg .FillColor ,BorderEnabled :_eg .BorderEnabled ,BorderWidth :_eg .BorderWidth ,BorderColor :_eg .BorderColor ,Opacity :_eg .Opacity };_af ,_gg ,_cae :=_fb .Draw (_ecf );if _cae !=nil {return nil ,nil ,nil ,_cae ;};_ef :=&_bbe .PdfRectangle {};_ef .Llx =_eg .X +_gg .Llx ;_ef .Lly =_eg .Y +_gg .Lly ;_ef .Urx =_eg .X +_gg .Urx ;_ef .Ury =_eg .Y +_gg .Ury ;return _af ,_gg ,_ef ,nil ;};func _ffgb (_aee LineAnnotationDef ,_gggg string )([]byte ,*_bbe .PdfRectangle ,*_bbe .PdfRectangle ,error ){_aead :=_d .Line {X1 :0,Y1 :0,X2 :_aee .X2 -_aee .X1 ,Y2 :_aee .Y2 -_aee .Y1 ,LineColor :_aee .LineColor ,Opacity :_aee .Opacity ,LineWidth :_aee .LineWidth ,LineEndingStyle1 :_aee .LineEndingStyle1 ,LineEndingStyle2 :_aee .LineEndingStyle2 };_cfge ,_ceea ,_efba :=_aead .Draw (_gggg );if _efba !=nil {return nil ,nil ,nil ,_efba ;};_fdf :=&_bbe .PdfRectangle {};_fdf .Llx =_aee .X1 +_ceea .Llx ;_fdf .Lly =_aee .Y1 +_ceea .Lly ;_fdf .Urx =_aee .X1 +_ceea .Urx ;_fdf .Ury =_aee .Y1 +_ceea .Ury ;return _cfge ,_ceea ,_fdf ,nil ;};func _dfb (_ddbf *_bbe .PdfField )string {if _ddbf ==nil {return "";};_eacca ,_ffe :=_ddbf .GetContext ().(*_bbe .PdfFieldText );if !_ffe {return _dfb (_ddbf .Parent );};if _eacca .DA !=nil {return _eacca .DA .Str ();};return _dfb (_eacca .Parent );};func _agb (_cfeb *_c .ContentCreator ,_defe AppearanceStyle ,_bfgc ,_bafd float64 ){_cfeb .Add_q ().Add_re (0,0,_bfgc ,_bafd ).Add_re (0,_bafd /2,_bfgc ,_bafd /2).Add_re (0,0,_bfgc ,_bafd ).Add_re (_bfgc /2,0,_bfgc /2,_bafd ).Add_w (_defe .BorderSize ).SetStrokingColor (_defe .BorderColor ).SetNonStrokingColor (_defe .FillColor ).Add_B ().Add_Q ();};func _aege (_eff LineAnnotationDef )(*_ca .PdfObjectDictionary ,*_bbe .PdfRectangle ,error ){_abb :=_bbe .NewXObjectForm ();_abb .Resources =_bbe .NewPdfPageResources ();_ggd :="";if _eff .Opacity < 1.0{_ebcd :=_ca .MakeDict ();_ebcd .Set ("\u0063\u0061",_ca .MakeFloat (_eff .Opacity ));_dccf :=_abb .Resources .AddExtGState ("\u0067\u0073\u0031",_ebcd );if _dccf !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dccf ;};_ggd ="\u0067\u0073\u0031";};_ggcg ,_babc ,_bdcg ,_eaff :=_ffgb (_eff ,_ggd );if _eaff !=nil {return nil ,nil ,_eaff ;};_eaff =_abb .SetContentStream (_ggcg ,nil );if _eaff !=nil {return nil ,nil ,_eaff ;};_abb .BBox =_babc .ToPdfObject ();_effe :=_ca .MakeDict ();_effe .Set ("\u004e",_abb .ToPdfObject ());return _effe ,_bdcg ,nil ;};func _edcd (_fbd *_bbe .PdfField ,_bfge ,_feef float64 ,_dab string ,_ceb AppearanceStyle ,_eacf *_c .ContentStreamOperations ,_eaea *_bbe .PdfPageResources ,_dbfc *_ca .PdfObjectDictionary )(*_bbe .XObjectForm ,error ){_dfcb :=_bbe .NewPdfPageResources ();_gbfd ,_cggd :=_bfge ,_feef ;_bea :=_c .NewContentCreator ();if _ceb .BorderSize > 0{_cgb (_bea ,_ceb ,_bfge ,_feef );};if _ceb .DrawAlignmentReticle {_gdg :=_ceb ;_gdg .BorderSize =0.2;_agb (_bea ,_gdg ,_bfge ,_feef );};_bea .Add_BMC ("\u0054\u0078");_bea .Add_q ();_bea .Add_BT ();_bfge ,_feef =_ceb .applyRotation (_dbfc ,_bfge ,_feef ,_bea );_cfg ,_fgc ,_cggf :=_ceb .processDA (_fbd ,_eacf ,_eaea ,_dfcb ,_bea );if _cggf !=nil {return nil ,_cggf ;};_fgcd :=_cfg .Font ;_abcc :=_cfg .Size ;_cdb :=_ca .MakeName (_cfg .Name );_ffdg :=_abcc ==0;if _ffdg &&_fgc {_abcc =_feef *_ceb .AutoFontSizeFraction ;};_afed :=_fgcd .Encoder ();if _afed ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_afed =_fe .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_dab )==0{return nil ,nil ;};_efad :=2.0;_bgce :=0.0;if _afed !=nil {for _ ,_agf :=range _dab {_agg ,_gdcb :=_fgcd .GetRuneMetrics (_agf );if !_gdcb {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_agf );continue ;};_bgce +=_agg .Wx ;};_dab =string (_afed .Encode (_dab ));};if _abcc ==0||_ffdg &&_bgce > 0&&_efad +_bgce *_abcc /1000.0> _bfge {_abcc =0.95*1000.0*(_bfge -_efad )/_bgce ;};_caf :=1.0*_abcc ;_aeb :=2.0;{_gef :=_caf ;if _ffdg &&_aeb +_gef > _feef {_abcc =0.95*(_feef -_aeb );_caf =1.0*_abcc ;_gef =_caf ;};if _feef > _gef {_aeb =(_feef -_gef )/2.0;_aeb +=1.50;};};_bea .Add_Tf (*_cdb ,_abcc );_bea .Add_Td (_efad ,_aeb );_bea .Add_Tj (*_ca .MakeString (_dab ));_bea .Add_ET ();_bea .Add_Q ();_bea .Add_EMC ();_geaf :=_bbe .NewXObjectForm ();_geaf .Resources =_dfcb ;_geaf .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_gbfd ,_cggd });_geaf .SetContentStream (_bea .Bytes (),_fbbe ());return _geaf ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_bbe .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_bbe .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_bbe .PdfColorDeviceRGB ;Opacity float64 ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_bbe .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _bbe .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _bbe .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _bbe .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _a .Image ;

// Image represents the image used for the signature appearance.
Image _a .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _ca .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_bbe .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_bbe .PdfColorDeviceRGB ;Opacity float64 ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _cdd (_dea *_bbe .PdfAnnotationWidget ,_dga *_bbe .PdfFieldText ,_bfdc *_bbe .PdfPageResources ,_cdg AppearanceStyle )(*_ca .PdfObjectDictionary ,error ){_egc :=_bbe .NewPdfPageResources ();_aa ,_edg :=_ca .GetArray (_dea .Rect );if !_edg {return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ada ,_dbb :=_bbe .NewPdfRectangle (*_aa );if _dbb !=nil {return nil ,_dbb ;};_cde ,_aab :=_ada .Width (),_ada .Height ();_febg ,_ded :=_cde ,_aab ;_cbc ,_gca :=_ca .GetDict (_dea .MK );if _gca {_gdfg ,_ :=_ca .GetDict (_dea .BS );_acc :=_cdg .applyAppearanceCharacteristics (_cbc ,_gdfg ,nil );if _acc !=nil {return nil ,_acc ;};};_ega ,_gca :=_ca .GetIntVal (_dga .MaxLen );if !_gca {return nil ,_ad .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _ega <=0{return nil ,_ad .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bgac :=_cde /float64 (_ega );_fge ,_dbb :=_c .NewContentStreamParser (_dfb (_dga .PdfField )).Parse ();if _dbb !=nil {return nil ,_dbb ;};_aad :=_c .NewContentCreator ();if _cdg .BorderSize > 0{_cgb (_aad ,_cdg ,_cde ,_aab );};if _cdg .DrawAlignmentReticle {_ggb :=_cdg ;_ggb .BorderSize =0.2;_agb (_aad ,_ggb ,_cde ,_aab );};_aad .Add_BMC ("\u0054\u0078");_aad .Add_q ();_ ,_aab =_cdg .applyRotation (_cbc ,_cde ,_aab ,_aad );_aad .Add_BT ();_dfc ,_fbe ,_dbb :=_cdg .processDA (_dga .PdfField ,_fge ,_bfdc ,_egc ,_aad );if _dbb !=nil {return nil ,_dbb ;};_eda :=_dfc .Font ;_dec :=_ca .MakeName (_dfc .Name );_fc :=_dfc .Size ;_dgf :=_fc ==0;if _dgf &&_fbe {_fc =_aab *_cdg .AutoFontSizeFraction ;};_dgdc :=_eda .Encoder ();if _dgdc ==nil {_f .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_dgdc =_fe .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _gfe string ;if _fgg ,_efa :=_ca .GetString (_dga .V );_efa {_gfe =_fgg .Decoded ();};_aad .Add_Tf (*_dec ,_fc );var _bfe float64 ;for _ ,_eafc :=range _gfe {_egab ,_adcf :=_eda .GetRuneMetrics (_eafc );if !_adcf {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_eafc );continue ;};_edge :=_egab .Wy ;if int (_edge )<=0{_edge =_egab .Wx ;};if _edge > _bfe {_bfe =_edge ;};};if int (_bfe )==0{_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_bfe =1000;};_fee ,_dbb :=_eda .GetFontDescriptor ();if _dbb !=nil {_f .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _eaa float64 ;if _fee !=nil {_eaa ,_dbb =_fee .GetCapHeight ();if _dbb !=nil {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dbb );};};if int (_eaa )<=0{_f .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_eaa =1000.0;};_fab :=_eaa /1000.0*_fc ;_aca :=0.0;_bab :=1.0*_fc *(_bfe /1000.0);{_acge :=_bab ;if _dgf &&_aca +_acge > _aab {_fc =0.95*(_aab -_aca );_fab =_eaa /1000.0*_fc ;};if _aab > _fab {_aca =(_aab -_fab )/2.0;};};_aad .Add_Td (0,_aca );if _ddc ,_babg :=_ca .GetIntVal (_dga .Q );_babg {switch _ddc {case 2:if len (_gfe )< _ega {_gaef :=float64 (_ega -len (_gfe ))*_bgac ;_aad .Add_Td (_gaef ,0);};};};for _bgec ,_cad :=range _gfe {_bee :=2.0;_dgdd :=string (_cad );if _dgdc !=nil {_gfc ,_eafb :=_eda .GetRuneMetrics (_cad );if !_eafb {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_cad );continue ;};_dgdd =string (_dgdc .Encode (_dgdd ));_fbef :=_fc *_gfc .Wx /1000.0;_cfd :=(_bgac -_fbef )/2;_bee =_cfd ;};_aad .Add_Td (_bee ,0);_aad .Add_Tj (*_ca .MakeString (_dgdd ));if _bgec !=len (_gfe )-1{_aad .Add_Td (_bgac -_bee ,0);};};_aad .Add_ET ();_aad .Add_Q ();_aad .Add_EMC ();_aegc :=_bbe .NewXObjectForm ();_aegc .Resources =_egc ;_aegc .BBox =_ca .MakeArrayFromFloats ([]float64 {0,0,_febg ,_ded });_aegc .SetContentStream (_aad .Bytes (),_fbbe ());_dbbf :=_ca .MakeDict ();_dbbf .Set ("\u004e",_aegc .ToPdfObject ());return _dbbf ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_adc FieldAppearance )GenerateAppearanceDict (form *_bbe .PdfAcroForm ,field *_bbe .PdfField ,wa *_bbe .PdfAnnotationWidget )(*_ca .PdfObjectDictionary ,error ){_f .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_eb :=field .GetContext ().(*_bbe .PdfFieldText );_ga ,_de :=_ca .GetDict (wa .AP );if _de &&_adc .OnlyIfMissing &&(!_eb ||!_adc .RegenerateTextFields ){_f .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _ga ,nil ;};if form .DR ==nil {form .DR =_bbe .NewPdfPageResources ();};switch _dcd :=field .GetContext ().(type ){case *_bbe .PdfFieldText :_bga :=_dcd ;switch {case _bga .Flags ().Has (_bbe .FieldFlagPassword ):return nil ,nil ;case _bga .Flags ().Has (_bbe .FieldFlagFileSelect ):return nil ,nil ;case _bga .Flags ().Has (_bbe .FieldFlagComb ):if _bga .MaxLen !=nil {_bafb ,_ff :=_cdd (wa ,_bga ,form .DR ,_adc .Style ());if _ff !=nil {return nil ,_ff ;};return _bafb ,nil ;};};_beg ,_acg :=_gff (wa ,_bga ,form .DR ,_adc .Style ());if _acg !=nil {return nil ,_acg ;};return _beg ,nil ;case *_bbe .PdfFieldButton :_ge :=_dcd ;if _ge .IsCheckbox (){_bfg ,_bd :=_ede (wa ,_ge ,form .DR ,_adc .Style ());if _bd !=nil {return nil ,_bd ;};return _bfg ,nil ;};_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_ge .GetType ());case *_bbe .PdfFieldChoice :_def :=_dcd ;switch {case _def .Flags ().Has (_bbe .FieldFlagCombo ):_ed ,_bbea :=_abf (form ,wa ,_def ,_adc .Style ());if _bbea !=nil {return nil ,_bbea ;};return _ed ,nil ;default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_def .Flags ().String ());};default:_f .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dcd );};return nil ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_be FieldAppearance )Style ()AppearanceStyle {if _be ._aea !=nil {return *_be ._aea ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_bbe .NewPdfColorDeviceGray (0),FillColor :_bbe .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_bbe .PdfAnnotation ,error ){_gcc :=_bbe .NewPdfAnnotationLine ();_gcc .L =_ca .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_dfde :=_ca .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_d .LineEndingStyleArrow {_dfde =_ca .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_gdb :=_ca .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_d .LineEndingStyleArrow {_gdb =_ca .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_gcc .LE =_ca .MakeArray (_dfde ,_gdb );if lineDef .Opacity < 1.0{_gcc .CA =_ca .MakeFloat (lineDef .Opacity );};_cgfb ,_caeg ,_eggbf :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_gcc .IC =_ca .MakeArrayFromFloats ([]float64 {_cgfb ,_caeg ,_eggbf });_gcc .C =_ca .MakeArrayFromFloats ([]float64 {_cgfb ,_caeg ,_eggbf });_caff :=_bbe .NewBorderStyle ();_caff .SetBorderWidth (lineDef .LineWidth );_gcc .BS =_caff .ToPdfObject ();_geff ,_bddd ,_decgf :=_aege (lineDef );if _decgf !=nil {return nil ,_decgf ;};_gcc .AP =_geff ;_gcc .Rect =_ca .MakeArrayFromFloats ([]float64 {_bddd .Llx ,_bddd .Lly ,_bddd .Urx ,_bddd .Ury });return _gcc .PdfAnnotation ,nil ;};func (_fcg *AppearanceStyle )processDA (_baa *_bbe .PdfField ,_edgd *_c .ContentStreamOperations ,_abd ,_aaf *_bbe .PdfPageResources ,_gba *_c .ContentCreator )(*AppearanceFont ,bool ,error ){var _fae *AppearanceFont ;var _bbec bool ;if _fcg .Fonts !=nil {if _fcg .Fonts .Fallback !=nil {_fae =_fcg .Fonts .Fallback ;};if _bgd :=_fcg .Fonts .FieldFallbacks ;_bgd !=nil {if _egabe ,_fdbg :=_bgd [_baa .PartialName ()];_fdbg {_fae =_egabe ;}else if _aae ,_dfdf :=_baa .FullName ();_dfdf ==nil {if _ffgg ,_bef :=_bgd [_aae ];_bef {_fae =_ffgg ;};};};_bbec =_fcg .Fonts .ForceReplace ;};var _fccb string ;var _aggf float64 ;var _cea bool ;if _edgd !=nil {for _ ,_aabe :=range *_edgd {if _aabe .Operand =="\u0054\u0066"&&len (_aabe .Params )==2{if _dfbd ,_fcd :=_ca .GetNameVal (_aabe .Params [0]);_fcd {_fccb =_dfbd ;};if _gce ,_gbg :=_ca .GetNumberAsFloat (_aabe .Params [1]);_gbg ==nil {_aggf =_gce ;};_cea =true ;continue ;};_gba .AddOperand (*_aabe );};};var _ggea *AppearanceFont ;var _edee _ca .PdfObject ;if _bbec &&_fae !=nil {_ggea =_fae ;}else {if _abd !=nil &&_fccb !=""{if _cbb ,_efc :=_abd .GetFontByName (*_ca .MakeName (_fccb ));_efc {if _bgfd ,_beag :=_bbe .NewPdfFontFromPdfObject (_cbb );_beag ==nil {_edee =_cbb ;_ggea =&AppearanceFont {Name :_fccb ,Font :_bgfd ,Size :_aggf };}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_beag );};};};if _ggea ==nil &&_fae !=nil {_ggea =_fae ;};if _ggea ==nil {_fbb ,_gad :=_bbe .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _gad !=nil {return nil ,false ,_gad ;};_ggea =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_fbb ,Size :_aggf };};};_dgfd :=*_ca .MakeName (_ggea .Name );if _edee ==nil {_edee =_ggea .Font .ToPdfObject ();};if _abd !=nil &&!_abd .HasFontByName (_dgfd ){_abd .SetFontByName (_dgfd ,_edee );};if _aaf !=nil &&!_aaf .HasFontByName (_dgfd ){_aaf .SetFontByName (_dgfd ,_edee );};return _ggea ,_cea ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_bbe .PdfAnnotation ,error ){_ea :=_bbe .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fg ,_ba ,_g :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ea .C =_ca .MakeArrayFromFloats ([]float64 {_fg ,_ba ,_g });_bgc :=_bbe .NewBorderStyle ();_bgc .SetBorderWidth (circDef .BorderWidth );_ea .BS =_bgc .ToPdfObject ();};if circDef .FillEnabled {_ab ,_db ,_ac :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ea .IC =_ca .MakeArrayFromFloats ([]float64 {_ab ,_db ,_ac });}else {_ea .IC =_ca .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ea .CA =_ca .MakeFloat (circDef .Opacity );};_ae ,_cb ,_eac :=_da (circDef );if _eac !=nil {return nil ,_eac ;};_ea .AP =_ae ;_ea .Rect =_ca .MakeArrayFromFloats ([]float64 {_cb .Llx ,_cb .Lly ,_cb .Urx ,_cb .Ury });return _ea .PdfAnnotation ,nil ;};func _abf (_egf *_bbe .PdfAcroForm ,_edc *_bbe .PdfAnnotationWidget ,_dad *_bbe .PdfFieldChoice ,_gga AppearanceStyle )(*_ca .PdfObjectDictionary ,error ){_fgec ,_eag :=_ca .GetArray (_edc .Rect );if !_eag {return nil ,_ad .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_dda ,_gfa :=_bbe .NewPdfRectangle (*_fgec );if _gfa !=nil {return nil ,_gfa ;};_fgad ,_gfaa :=_dda .Width (),_dda .Height ();_f .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_edc .BS );_dfe ,_gfa :=_c .NewContentStreamParser (_dfb (_dad .PdfField )).Parse ();if _gfa !=nil {return nil ,_gfa ;};_gdce ,_ccg :=_ca .GetDict (_edc .MK );if _ccg {_cfe ,_ :=_ca .GetDict (_edc .BS );_dbgb :=_gga .applyAppearanceCharacteristics (_gdce ,_cfe ,nil );if _dbgb !=nil {return nil ,_dbgb ;};};_afc :=_ca .MakeDict ();for _ ,_dbggg :=range _dad .Opt .Elements (){if _edef ,_fba :=_ca .GetArray (_dbggg );_fba &&_edef .Len ()==2{_dbggg =_edef .Get (1);};var _gege string ;if _ffd ,_ebg :=_ca .GetString (_dbggg );_ebg {_gege =_ffd .Decoded ();}else if _ddb ,_cfb :=_ca .GetName (_dbggg );_cfb {_gege =_ddb .String ();}else {_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dbggg );return nil ,_ad .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_gege )> 0{_dcdf ,_bbeab :=_edcd (_dad .PdfField ,_fgad ,_gfaa ,_gege ,_gga ,_dfe ,_egf .DR ,_gdce );if _bbeab !=nil {return nil ,_bbeab ;};_afc .Set (*_ca .MakeName (_gege ),_dcdf .ToPdfObject ());};};_ccd :=_ca .MakeDict ();_ccd .Set ("\u004e",_afc );return _ccd ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_bbe .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_bbe .NewPdfColorDeviceGray (0),BorderColor :_bbe .NewPdfColorDeviceGray (0),FillColor :_bbe .NewPdfColorDeviceGray (1),Encoder :_ca .NewFlateEncoder (),ImagePosition :SignatureImageLeft };};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_bbe .PdfAnnotation ,error ){_dcb :=_bbe .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_efg ,_faeb ,_acab :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_dcb .C =_ca .MakeArrayFromFloats ([]float64 {_efg ,_faeb ,_acab });_cgfg :=_bbe .NewBorderStyle ();_cgfg .SetBorderWidth (rectDef .BorderWidth );_dcb .BS =_cgfg .ToPdfObject ();};if rectDef .FillEnabled {_dccc ,_eaeab ,_fgef :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_dcb .IC =_ca .MakeArrayFromFloats ([]float64 {_dccc ,_eaeab ,_fgef });}else {_dcb .IC =_ca .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_dcb .CA =_ca .MakeFloat (rectDef .Opacity );};_ebga ,_defd ,_efbb :=_ebffd (rectDef );if _efbb !=nil {return nil ,_efbb ;};_dcb .AP =_ebga ;_dcb .Rect =_ca .MakeArrayFromFloats ([]float64 {_defd .Llx ,_defd .Lly ,_defd .Urx ,_defd .Ury });return _dcb .PdfAnnotation ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _ebffd (_gdde RectangleAnnotationDef )(*_ca .PdfObjectDictionary ,*_bbe .PdfRectangle ,error ){_ddce :=_bbe .NewXObjectForm ();_ddce .Resources =_bbe .NewPdfPageResources ();_ggggf :="";if _gdde .Opacity < 1.0{_efaa :=_ca .MakeDict ();_efaa .Set ("\u0063\u0061",_ca .MakeFloat (_gdde .Opacity ));_efaa .Set ("\u0043\u0041",_ca .MakeFloat (_gdde .Opacity ));_fecg :=_ddce .Resources .AddExtGState ("\u0067\u0073\u0031",_efaa );if _fecg !=nil {_f .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fecg ;};_ggggf ="\u0067\u0073\u0031";};_cef ,_babb ,_eddd ,_cga :=_ecgf (_gdde ,_ggggf );if _cga !=nil {return nil ,nil ,_cga ;};_cga =_ddce .SetContentStream (_cef ,nil );if _cga !=nil {return nil ,nil ,_cga ;};_ddce .BBox =_babb .ToPdfObject ();_cgd :=_ca .MakeDict ();_cgd .Set ("\u004e",_ddce .ToPdfObject ());return _cgd ,_eddd ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bdg FieldAppearance )WrapContentStream (page *_bbe .PdfPage )error {_cgf ,_fff :=page .GetAllContentStreams ();if _fff !=nil {return _fff ;};_fda :=_c .NewContentStreamParser (_cgf );_fabb ,_fff :=_fda .Parse ();if _fff !=nil {return _fff ;};_fabb .WrapIfNeeded ();_aeba :=[]string {_fabb .String ()};return page .SetContentStreams (_aeba ,_fbbe ());};func _bfeb (_efd _a .Image ,_gaf string ,_dag *SignatureFieldOpts ,_adf []float64 ,_ebcg *_c .ContentCreator )(*_ca .PdfObjectName ,*_bbe .XObjectImage ,error ){_dfda ,_ebfb :=_bbe .DefaultImageHandler {}.NewImageFromGoImage (_efd );if _ebfb !=nil {return nil ,nil ,_ebfb ;};_dfcbe ,_ebfb :=_bbe .NewXObjectImageFromImage (_dfda ,nil ,_dag .Encoder );if _ebfb !=nil {return nil ,nil ,_ebfb ;};_fea ,_dgbb :=float64 (*_dfcbe .Width ),float64 (*_dfcbe .Height );_acec :=_adf [2]-_adf [0];_bfaa :=_adf [3]-_adf [1];if _dag .AutoSize {_bad :=_ec .Min (_acec /_fea ,_bfaa /_dgbb );_fea *=_bad ;_dgbb *=_bad ;_adf [0]=_adf [0]+(_acec /2)-(_fea /2);_adf [1]=_adf [1]+(_bfaa /2)-(_dgbb /2);};var _bff *_ca .PdfObjectName ;if _efbf ,_cge :=_ca .GetName (_dfcbe .Name );_cge {_bff =_efbf ;}else {_bff =_ca .MakeName (_gaf );};if _ebcg !=nil {_ebcg .Add_q ().Translate (_adf [0],_adf [1]).Scale (_fea ,_dgbb ).Add_Do (*_bff ).Add_Q ();}else {return nil ,nil ,_ad .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _bff ,_dfcbe ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);func (_dca *AppearanceStyle )applyAppearanceCharacteristics (_eaeg *_ca .PdfObjectDictionary ,_dcc *_ca .PdfObjectDictionary ,_fbae *_bbe .PdfFont )error {if !_dca .AllowMK {return nil ;};if CA ,_cdc :=_ca .GetString (_eaeg .Get ("\u0043\u0041"));_cdc &&_fbae !=nil {_ffb :=CA .Bytes ();if len (_ffb )!=0{_dgc :=[]rune (_fbae .Encoder ().Decode (_ffb ));if len (_dgc )==1{_dca .CheckmarkRune =_dgc [0];};};};if BC ,_afdd :=_ca .GetArray (_eaeg .Get ("\u0042\u0043"));_afdd {_ffbd ,_dgac :=BC .ToFloat64Array ();if _dgac !=nil {return _dgac ;};switch len (_ffbd ){case 1:_dca .BorderColor =_bbe .NewPdfColorDeviceGray (_ffbd [0]);case 3:_dca .BorderColor =_bbe .NewPdfColorDeviceRGB (_ffbd [0],_ffbd [1],_ffbd [2]);case 4:_dca .BorderColor =_bbe .NewPdfColorDeviceCMYK (_ffbd [0],_ffbd [1],_ffbd [2],_ffbd [3]);default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_ffbd ));};if _dcc !=nil {if _eggb ,_adda :=_ca .GetNumberAsFloat (_dcc .Get ("\u0057"));_adda ==nil {_dca .BorderSize =_eggb ;};};};if BG ,_egb :=_ca .GetArray (_eaeg .Get ("\u0042\u0047"));_egb {_ecb ,_eaeeg :=BG .ToFloat64Array ();if _eaeeg !=nil {return _eaeeg ;};switch len (_ecb ){case 1:_dca .FillColor =_bbe .NewPdfColorDeviceGray (_ecb [0]);case 3:_dca .FillColor =_bbe .NewPdfColorDeviceRGB (_ecb [0],_ecb [1],_ecb [2]);case 4:_dca .FillColor =_bbe .NewPdfColorDeviceCMYK (_ecb [0],_ecb [1],_ecb [2],_ecb [3]);default:_f .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_ecb ));};};return nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_gf *FieldAppearance )SetStyle (style AppearanceStyle ){_gf ._aea =&style };

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_bbe .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_bbe .PdfFieldChoice ,error ){if page ==nil {return nil ,_ad .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ad .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ad .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bgeaf :=_bbe .NewPdfField ();_ecg :=&_bbe .PdfFieldChoice {};_bgeaf .SetContext (_ecg );_ecg .PdfField =_bgeaf ;_ecg .T =_ca .MakeString (name );_ecg .Opt =_ca .MakeArray ();for _ ,_fag :=range opt .Choices {_ecg .Opt .Append (_ca .MakeString (_fag ));};_ecg .SetFlag (_bbe .FieldFlagCombo );_cec :=_bbe .NewPdfAnnotationWidget ();_cec .Rect =_ca .MakeArrayFromFloats (rect );_cec .P =page .ToPdfObject ();_cec .F =_ca .MakeInteger (4);_cec .Parent =_ecg .ToPdfObject ();_ecg .Annotations =append (_ecg .Annotations ,_cec );return _ecg ,nil ;};const (_afe quadding =0;_bf quadding =1;_gge quadding =2;);

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_bbe .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _d .LineEndingStyle ;LineEndingStyle2 _d .LineEndingStyle ;};