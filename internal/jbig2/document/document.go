//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_f "encoding/binary";_ca "fmt";_e "github.com/pplorins/unipdf/v3/common";_eb "github.com/pplorins/unipdf/v3/internal/bitwise";_de "github.com/pplorins/unipdf/v3/internal/jbig2/basic";_d "github.com/pplorins/unipdf/v3/internal/jbig2/bitmap";_ebc "github.com/pplorins/unipdf/v3/internal/jbig2/document/segments";_ac "github.com/pplorins/unipdf/v3/internal/jbig2/encoder/classer";_cad "github.com/pplorins/unipdf/v3/internal/jbig2/errors";_af "io";_c "math";_b "runtime/debug";);func (_gdb *Globals )GetSymbolDictionary ()(*_ebc .Header ,error ){const _gce ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _gdb ==nil {return nil ,_cad .Error (_gce ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gdb .Segments )==0{return nil ,_cad .Error (_gce ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_gba :=range _gdb .Segments {if _gba .Type ==_ebc .TSymbolDictionary {return _gba ,nil ;};};return nil ,_cad .Error (_gce ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_cfb *Page )addTextRegionSegment (_ffge []*_ebc .Header ,_feda ,_efad map[int ]int ,_dea []int ,_fcf *_d .Points ,_dbd *_d .Bitmaps ,_dgb *_de .IntSlice ,_cbd *_d .Boxes ,_cgb ,_agfb int ){_cfe :=&_ebc .TextRegion {NumberOfSymbols :uint32 (_agfb )};_cfe .InitEncode (_feda ,_efad ,_dea ,_fcf ,_dbd ,_dgb ,_cbd ,_cfb .FinalWidth ,_cfb .FinalHeight ,_cgb );_ccge :=&_ebc .Header {RTSegments :_ffge ,SegmentData :_cfe ,PageAssociation :_cfb .PageNumber ,Type :_ebc .TImmediateTextRegion };_bbe :=_ebc .TPageInformation ;if _efad !=nil {_bbe =_ebc .TSymbolDictionary ;};var _fcfd int ;for ;_fcfd < len (_cfb .Segments );_fcfd ++{if _cfb .Segments [_fcfd ].Type ==_bbe {_fcfd ++;break ;};};_cfb .Segments =append (_cfb .Segments ,nil );copy (_cfb .Segments [_fcfd +1:],_cfb .Segments [_fcfd :]);_cfb .Segments [_fcfd ]=_ccge ;};func _afg (_dbb int )int {_ea :=0;_fgec :=(_dbb &(_dbb -1))==0;_dbb >>=1;for ;_dbb !=0;_dbb >>=1{_ea ++;};if _fgec {return _ea ;};return _ea +1;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_edggf *Page )getResolutionX ()(int ,error ){const _fcfc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _edggf .ResolutionX !=0{return _edggf .ResolutionX ,nil ;};_cegca :=_edggf .getPageInformationSegment ();if _cegca ==nil {return 0,_cad .Error (_fcfc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bcfd ,_bbb :=_cegca .GetSegmentData ();if _bbb !=nil {return 0,_cad .Wrap (_bbb ,_fcfc ,"");};_ccdb ,_dfbe :=_bcfd .(*_ebc .PageInformationSegment );if !_dfbe {return 0,_cad .Errorf (_fcfc ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bcfd );};_edggf .ResolutionX =_ccdb .ResolutionX ;return _edggf .ResolutionX ,nil ;};func (_gfe *Document )nextPageNumber ()uint32 {_gfe .NumberOfPages ++;return _gfe .NumberOfPages };func (_geg *Page )fitsPage (_cff *_ebc .PageInformationSegment ,_ddg *_d .Bitmap )bool {return _geg .countRegions ()==1&&_cff .DefaultPixelValue ()==0&&_cff .PageBMWidth ==_ddg .Width &&_cff .PageBMHeight ==_ddg .Height ;};func (_gab *Document )encodeFileHeader (_dffd _eb .BinaryWriter )(_bba int ,_eec error ){const _fb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bba ,_eec =_dffd .Write (_ce );if _eec !=nil {return _bba ,_cad .Wrap (_eec ,_fb ,"\u0069\u0064");};if _eec =_dffd .WriteByte (0x01);_eec !=nil {return _bba ,_cad .Wrap (_eec ,_fb ,"\u0066\u006c\u0061g\u0073");};_bba ++;_gcc :=make ([]byte ,4);_f .BigEndian .PutUint32 (_gcc ,_gab .NumberOfPages );_adec ,_eec :=_dffd .Write (_gcc );if _eec !=nil {return _adec ,_cad .Wrap (_eec ,_fb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bba +=_adec ;return _bba ,nil ;};func (_ecdc *Page )GetResolutionY ()(int ,error ){return _ecdc .getResolutionY ()};func (_dab *Document )produceClassifiedPages ()(_fd error ){const _ceg ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _dab .Classer ==nil {return nil ;};var (_ge *Page ;_cd bool ;_cegc *_ebc .Header ;);for _dc :=1;_dc <=int (_dab .NumberOfPages );_dc ++{if _ge ,_cd =_dab .Pages [_dc ];!_cd {return _cad .Errorf (_ceg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dc );};if _ge .EncodingMethod ==GenericEM {continue ;};if _cegc ==nil {if _cegc ,_fd =_dab .GlobalSegments .GetSymbolDictionary ();_fd !=nil {return _cad .Wrap (_fd ,_ceg ,"");};};if _fd =_dab .produceClassifiedPage (_ge ,_cegc );_fd !=nil {return _cad .Wrapf (_fd ,_ceg ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_dc );};};return nil ;};func (_ecg *Document )completeSymbols ()(_dga error ){const _fca ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _ecg .Classer ==nil {return nil ;};if _ecg .Classer .UndilatedTemplates ==nil {return _cad .Error (_fca ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_ga :=len (_ecg .Pages )==1;_affe :=make ([]int ,_ecg .Classer .UndilatedTemplates .Size ());var _edg int ;for _aeda :=0;_aeda < _ecg .Classer .ClassIDs .Size ();_aeda ++{_edg ,_dga =_ecg .Classer .ClassIDs .Get (_aeda );if _dga !=nil {return _cad .Wrap (_dga ,_fca ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_affe [_edg ]++;};var _fa []int ;for _efe :=0;_efe < _ecg .Classer .UndilatedTemplates .Size ();_efe ++{if _affe [_efe ]==0{return _cad .Error (_fca ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _affe [_efe ]> 1||_ga {_fa =append (_fa ,_efe );};};_ecg ._ded =len (_fa );var _gfc ,_ega int ;for _aaf :=0;_aaf < _ecg .Classer .ComponentPageNumbers .Size ();_aaf ++{_gfc ,_dga =_ecg .Classer .ComponentPageNumbers .Get (_aaf );if _dga !=nil {return _cad .Wrapf (_dga ,_fca ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_aaf );};_ega ,_dga =_ecg .Classer .ClassIDs .Get (_aaf );if _dga !=nil {return _cad .Wrapf (_dga ,_fca ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_gfc );};if _affe [_ega ]==1&&!_ga {_ecg ._db [_gfc ]=append (_ecg ._db [_gfc ],_ega );};};if _dga =_ecg .Classer .ComputeLLCorners ();_dga !=nil {return _cad .Wrap (_dga ,_fca ,"");};return nil ;};func (_dfb *Page )Encode (w _eb .BinaryWriter )(_faa int ,_efeb error ){const _dcc ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _aad int ;for _ ,_dbg :=range _dfb .Segments {if _aad ,_efeb =_dbg .Encode (w );_efeb !=nil {return _faa ,_cad .Wrap (_efeb ,_dcc ,"");};_faa +=_aad ;};return _faa ,nil ;};func (_becf *Page )getHeight ()(int ,error ){const _dcg ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _becf .FinalHeight !=0{return _becf .FinalHeight ,nil ;};_caffb :=_becf .getPageInformationSegment ();if _caffb ==nil {return 0,_cad .Error (_dcg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_caae ,_acg :=_caffb .GetSegmentData ();if _acg !=nil {return 0,_cad .Wrap (_acg ,_dcg ,"");};_aeb ,_edfb :=_caae .(*_ebc .PageInformationSegment );if !_edfb {return 0,_cad .Errorf (_dcg ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_caae );};if _aeb .PageBMHeight ==_c .MaxInt32 {_ ,_acg =_becf .GetBitmap ();if _acg !=nil {return 0,_cad .Wrap (_acg ,_dcg ,"");};}else {_becf .FinalHeight =_aeb .PageBMHeight ;};return _becf .FinalHeight ,nil ;};func (_bgd *Page )createNormalPage (_beg *_ebc .PageInformationSegment )error {const _cdgf ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_bgd .Bitmap =_d .New (_beg .PageBMWidth ,_beg .PageBMHeight );if _beg .DefaultPixelValue ()!=0{_bgd .Bitmap .SetDefaultPixel ();};for _ ,_bddc :=range _bgd .Segments {switch _bddc .Type {case 6,7,22,23,38,39,42,43:_e .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_bddc .SegmentNumber );_egg ,_cbf :=_bddc .GetSegmentData ();if _cbf !=nil {return _cbf ;};_ddb ,_fgcf :=_egg .(_ebc .Regioner );if !_fgcf {_e .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_egg );return _cad .Errorf (_cdgf ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_egg );};_dbgd ,_cbf :=_ddb .GetRegionBitmap ();if _cbf !=nil {return _cad .Wrap (_cbf ,_cdgf ,"");};if _bgd .fitsPage (_beg ,_dbgd ){_bgd .Bitmap =_dbgd ;}else {_cbg :=_ddb .GetRegionInfo ();_cacf :=_bgd .getCombinationOperator (_beg ,_cbg .CombinaionOperator );_cbf =_d .Blit (_dbgd ,_bgd .Bitmap ,int (_cbg .XLocation ),int (_cbg .YLocation ),_cacf );if _cbf !=nil {return _cad .Wrap (_cbf ,_cdgf ,"");};};};};return nil ;};func (_dbe *Document )determineRandomDataOffsets (_efce []*_ebc .Header ,_cca uint64 ){if _dbe .OrganizationType !=_ebc .ORandom {return ;};for _ ,_cf :=range _efce {_cf .SegmentDataStartOffset =_cca ;_cca +=_cf .SegmentDataLength ;};};func (_efab *Document )mapData ()error {const _gbf ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_ecd []*_ebc .Header ;_cab int64 ;_ebg _ebc .Type ;);_eab ,_gg :=_efab .isFileHeaderPresent ();if _gg !=nil {return _cad .Wrap (_gg ,_gbf ,"");};if _eab {if _gg =_efab .parseFileHeader ();_gg !=nil {return _cad .Wrap (_gg ,_gbf ,"");};_cab +=int64 (_efab ._eg );_efab .FullHeaders =true ;};var (_bfe *Page ;_gbg bool ;);for _ebg !=51&&!_gbg {_cfg ,_fed :=_ebc .NewHeader (_efab ,_efab .InputStream ,_cab ,_efab .OrganizationType );if _fed !=nil {return _cad .Wrap (_fed ,_gbf ,"");};_e .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_cfg .SegmentNumber ,_cfg .Type );_ebg =_cfg .Type ;if _ebg !=_ebc .TEndOfFile {if _cfg .PageAssociation !=0{_bfe =_efab .Pages [_cfg .PageAssociation ];if _bfe ==nil {_bfe =_dgd (_efab ,_cfg .PageAssociation );_efab .Pages [_cfg .PageAssociation ]=_bfe ;if _efab .NumberOfPagesUnknown {_efab .NumberOfPages ++;};};_bfe .Segments =append (_bfe .Segments ,_cfg );}else {_efab .GlobalSegments .AddSegment (_cfg );};};_ecd =append (_ecd ,_cfg );_cab =_efab .InputStream .StreamPosition ();if _efab .OrganizationType ==_ebc .OSequential {_cab +=int64 (_cfg .SegmentDataLength );};_gbg ,_fed =_efab .reachedEOF (_cab );if _fed !=nil {_e .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fed );return _cad .Wrap (_fed ,_gbf ,"");};};_efab .determineRandomDataOffsets (_ecd ,uint64 (_cab ));return nil ;};func (_bga *Page )GetBitmap ()(_add *_d .Bitmap ,_gef error ){_e .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_bga .PageNumber ));defer func (){if _gef !=nil {_e .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bga .PageNumber ,_gef ));}else {_e .Log .Trace (_ca .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_bga .PageNumber ));};}();if _bga .Bitmap !=nil {return _bga .Bitmap ,nil ;};_gef =_bga .composePageBitmap ();if _gef !=nil {return nil ,_gef ;};return _bga .Bitmap ,nil ;};func (_edf *Document )parseFileHeader ()error {const _gcb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_bed :=_edf .InputStream .Seek (8,_af .SeekStart );if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u0069\u0064");};_ ,_bed =_edf .InputStream .ReadBits (5);if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_aaa ,_bed :=_edf .InputStream .ReadBit ();if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _aaa ==1{_edf .GBUseExtTemplate =true ;};_aaa ,_bed =_edf .InputStream .ReadBit ();if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _aaa !=1{_edf .NumberOfPagesUnknown =false ;};_aaa ,_bed =_edf .InputStream .ReadBit ();if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_edf .OrganizationType =_ebc .OrganizationType (_aaa );if !_edf .NumberOfPagesUnknown {_edf .NumberOfPages ,_bed =_edf .InputStream .ReadUint32 ();if _bed !=nil {return _cad .Wrap (_bed ,_gcb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_edf ._eg =13;};return nil ;};func (_cac *Page )GetResolutionX ()(int ,error ){return _cac .getResolutionX ()};func (_cg *Document )completeClassifiedPages ()(_ecb error ){const _cgc ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _cg .Classer ==nil {return nil ;};_cg ._ae =make ([]int ,_cg .Classer .UndilatedTemplates .Size ());for _bf :=0;_bf < _cg .Classer .ClassIDs .Size ();_bf ++{_ed ,_bfd :=_cg .Classer .ClassIDs .Get (_bf );if _bfd !=nil {return _cad .Wrapf (_bfd ,_cgc ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_bf );};_cg ._ae [_ed ]++;};var _da []int ;for _ba :=0;_ba < _cg .Classer .UndilatedTemplates .Size ();_ba ++{if _cg .NumberOfPages ==1||_cg ._ae [_ba ]> 1{_da =append (_da ,_ba );};};var (_ag *Page ;_cada bool ;);for _dbc ,_bec :=range *_cg .Classer .ComponentPageNumbers {if _ag ,_cada =_cg .Pages [_bec ];!_cada {return _cad .Errorf (_cgc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbc );};if _ag .EncodingMethod ==GenericEM {_e .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_dbc );continue ;};_cg ._ec [_bec ]=append (_cg ._ec [_bec ],_dbc );_beb ,_cgf :=_cg .Classer .ClassIDs .Get (_dbc );if _cgf !=nil {return _cad .Wrapf (_cgf ,_cgc ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_dbc );};if _cg ._ae [_beb ]==1&&_cg .NumberOfPages !=1{_aed :=append (_cg ._db [_bec ],_beb );_cg ._db [_bec ]=_aed ;};};if _ecb =_cg .Classer .ComputeLLCorners ();_ecb !=nil {return _cad .Wrap (_ecb ,_cgc ,"");};if _ ,_ecb =_cg .addSymbolDictionary (0,_cg .Classer .UndilatedTemplates ,_da ,_cg ._ebce ,false );_ecb !=nil {return _cad .Wrap (_ecb ,_cgc ,"");};return nil ;};func (_agf *Page )AddEndOfPageSegment (){_faf :=&_ebc .Header {Type :_ebc .TEndOfPage ,PageAssociation :_agf .PageNumber };_agf .Segments =append (_agf .Segments ,_faf );};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_be :_eb .BufferedMSB (),Pages :map[int ]*Page {},_db :map[int ][]int {},_ebce :map[int ]int {},_ec :map[int ][]int {}};};func (_cda *Page )clearSegmentData (){for _gcee :=range _cda .Segments {_cda .Segments [_gcee ].CleanSegmentData ();};};func (_fad *Page )lastSegmentNumber ()(_ebd uint32 ,_dbdg error ){const _fde ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_fad .Segments )==0{return _ebd ,_cad .Errorf (_fde ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_fad .PageNumber );};return _fad .Segments [len (_fad .Segments )-1].SegmentNumber ,nil ;};func (_cce *Document )isFileHeaderPresent ()(bool ,error ){_cce .InputStream .Mark ();for _ ,_ged :=range _ce {_ccde ,_gee :=_cce .InputStream .ReadByte ();if _gee !=nil {return false ,_gee ;};if _ged !=_ccde {_cce .InputStream .Reset ();return false ,nil ;};};_cce .InputStream .Reset ();return true ,nil ;};func (_afag *Page )getResolutionY ()(int ,error ){const _acbc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _afag .ResolutionY !=0{return _afag .ResolutionY ,nil ;};_gceg :=_afag .getPageInformationSegment ();if _gceg ==nil {return 0,_cad .Error (_acbc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fbg ,_fdba :=_gceg .GetSegmentData ();if _fdba !=nil {return 0,_cad .Wrap (_fdba ,_acbc ,"");};_ead ,_fbb :=_fbg .(*_ebc .PageInformationSegment );if !_fbb {return 0,_cad .Errorf (_acbc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_fbg );};_afag .ResolutionY =_ead .ResolutionY ;return _afag .ResolutionY ,nil ;};type EncodingMethod int ;func (_bfb *Page )GetHeight ()(int ,error ){return _bfb .getHeight ()};func (_cfc *Document )nextSegmentNumber ()uint32 {_bae :=_cfc .CurrentSegmentNumber ;_cfc .CurrentSegmentNumber ++;return _bae ;};func (_cgd *Page )getPageInformationSegment ()*_ebc .Header {for _ ,_fef :=range _cgd .Segments {if _fef .Type ==_ebc .TPageInformation {return _fef ;};};_e .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_cgd );return nil ;};func (_acf *Page )GetSegment (number int )(*_ebc .Header ,error ){const _ab ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_ggd :=range _acf .Segments {if _ggd .SegmentNumber ==uint32 (number ){return _ggd ,nil ;};};_gfd :=make ([]uint32 ,len (_acf .Segments ));for _dca ,_abc :=range _acf .Segments {_gfd [_dca ]=_abc .SegmentNumber ;};return nil ,_cad .Errorf (_ab ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_acf .PageNumber ,_gfd );};func (_cgbb *Page )nextSegmentNumber ()uint32 {return _cgbb .Document .nextSegmentNumber ()};func (_afgg *Document )GetNumberOfPages ()(uint32 ,error ){if _afgg .NumberOfPagesUnknown ||_afgg .NumberOfPages ==0{if len (_afgg .Pages )==0{if _fe :=_afgg .mapData ();_fe !=nil {return 0,_cad .Wrap (_fe ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_afgg .Pages )),nil ;};return _afgg .NumberOfPages ,nil ;};func (_fgg *Globals )GetSegmentByIndex (index int )(*_ebc .Header ,error ){const _caff ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _fgg ==nil {return nil ,_cad .Error (_caff ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_fgg .Segments )==0{return nil ,_cad .Error (_caff ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_fgg .Segments )-1{return nil ,_cad .Error (_caff ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _fgg .Segments [index ],nil ;};func (_ebb *Page )String ()string {return _ca .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_ebb .PageNumber );};func _dgd (_bda *Document ,_affg int )*Page {return &Page {Document :_bda ,PageNumber :_affg ,Segments :[]*_ebc .Header {}};};func (_fg *Document )produceClassifiedPage (_ef *Page ,_ccg *_ebc .Header )(_cec error ){const _fgd ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _cgcb map[int ]int ;_efc :=_fg ._ded ;_cdb :=[]*_ebc .Header {_ccg };if len (_fg ._db [_ef .PageNumber ])> 0{_cgcb =map[int ]int {};_bg ,_fge :=_fg .addSymbolDictionary (_ef .PageNumber ,_fg .Classer .UndilatedTemplates ,_fg ._db [_ef .PageNumber ],_cgcb ,false );if _fge !=nil {return _cad .Wrap (_fge ,_fgd ,"");};_cdb =append (_cdb ,_bg );_efc +=len (_fg ._db [_ef .PageNumber ]);};_efg :=_fg ._ec [_ef .PageNumber ];_e .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ef .PageNumber ,_efg );_ef .addTextRegionSegment (_cdb ,_fg ._ebce ,_cgcb ,_fg ._ec [_ef .PageNumber ],_fg .Classer .PtaLL ,_fg .Classer .UndilatedTemplates ,_fg .Classer .ClassIDs ,nil ,_afg (_efc ),len (_fg ._ec [_ef .PageNumber ]));return nil ;};func (_fgc *Page )AddGenericRegion (bm *_d .Bitmap ,xloc ,yloc ,template int ,tp _ebc .Type ,duplicateLineRemoval bool )error {const _bgf ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_dd :=&_ebc .GenericRegion {};if _daa :=_dd .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_daa !=nil {return _cad .Wrap (_daa ,_bgf ,"");};_cbe :=&_ebc .Header {Type :_ebc .TImmediateGenericRegion ,PageAssociation :_fgc .PageNumber ,SegmentData :_dd };_fgc .Segments =append (_fgc .Segments ,_cbe );return nil ;};func (_fdc *Page )getCombinationOperator (_ecgg *_ebc .PageInformationSegment ,_gge _d .CombinationOperator )_d .CombinationOperator {if _ecgg .CombinationOperatorOverrideAllowed (){return _gge ;};return _ecgg .CombinationOperator ();};func (_bfga *Page )createPage (_caa *_ebc .PageInformationSegment )error {var _bedc error ;if !_caa .IsStripe ||_caa .PageBMHeight !=-1{_bedc =_bfga .createNormalPage (_caa );}else {_bedc =_bfga .createStripedPage (_caa );};return _bedc ;};func (_bcg *Globals )GetSegment (segmentNumber int )(*_ebc .Header ,error ){const _gag ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _bcg ==nil {return nil ,_cad .Error (_gag ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_bcg .Segments )==0{return nil ,_cad .Error (_gag ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _egfb *_ebc .Header ;for _ ,_egfb =range _bcg .Segments {if _egfb .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _egfb ==nil {return nil ,_cad .Error (_gag ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _egfb ,nil ;};type Globals struct{Segments []*_ebc .Header ;};func (_gdd *Page )getWidth ()(int ,error ){const _baf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _gdd .FinalWidth !=0{return _gdd .FinalWidth ,nil ;};_cdf :=_gdd .getPageInformationSegment ();if _cdf ==nil {return 0,_cad .Error (_baf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gegd ,_edd :=_cdf .GetSegmentData ();if _edd !=nil {return 0,_cad .Wrap (_edd ,_baf ,"");};_dcf ,_eddb :=_gegd .(*_ebc .PageInformationSegment );if !_eddb {return 0,_cad .Errorf (_baf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gegd );};_gdd .FinalWidth =_dcf .PageBMWidth ;return _gdd .FinalWidth ,nil ;};func (_fedg *Document )reachedEOF (_dabd int64 )(bool ,error ){const _edc ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_dedd :=_fedg .InputStream .Seek (_dabd ,_af .SeekStart );if _dedd !=nil {_e .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dedd );return false ,_cad .Wrap (_dedd ,_edc ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_dedd =_fedg .InputStream .ReadBits (32);if _dedd ==_af .EOF {return true ,nil ;}else if _dedd !=nil {return false ,_cad .Wrap (_dedd ,_edc ,"");};return false ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _eb .StreamReader ;GlobalSegments *Globals ;OrganizationType _ebc .OrganizationType ;Classer *_ac .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_d .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_eg uint8 ;_be *_eb .BufferedWriter ;EncodeGlobals bool ;_ded int ;_db map[int ][]int ;_ec map[int ][]int ;_ae []int ;_ebce map[int ]int ;};func (_agd *Page )AddPageInformationSegment (){_cdca :=&_ebc .PageInformationSegment {PageBMWidth :_agd .FinalWidth ,PageBMHeight :_agd .FinalHeight ,ResolutionX :_agd .ResolutionX ,ResolutionY :_agd .ResolutionY ,IsLossless :_agd .IsLossless };_fbe :=&_ebc .Header {PageAssociation :_agd .PageNumber ,SegmentDataLength :uint64 (_cdca .Size ()),SegmentData :_cdca ,Type :_ebc .TPageInformation };_agd .Segments =append (_agd .Segments ,_fbe );};func (_cgbe *Page )createStripedPage (_efea *_ebc .PageInformationSegment )error {const _dcdg ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_bgc ,_gcea :=_cgbe .collectPageStripes ();if _gcea !=nil {return _cad .Wrap (_gcea ,_dcdg ,"");};var _gde int ;for _ ,_faae :=range _bgc {if _ffbc ,_bfee :=_faae .(*_ebc .EndOfStripe );_bfee {_gde =_ffbc .LineNumber ()+1;}else {_fbee :=_faae .(_ebc .Regioner );_bcf :=_fbee .GetRegionInfo ();_eeed :=_cgbe .getCombinationOperator (_efea ,_bcf .CombinaionOperator );_aadg ,_caac :=_fbee .GetRegionBitmap ();if _caac !=nil {return _cad .Wrap (_caac ,_dcdg ,"");};_caac =_d .Blit (_aadg ,_cgbe .Bitmap ,int (_bcf .XLocation ),_gde ,_eeed );if _caac !=nil {return _cad .Wrap (_caac ,_dcdg ,"");};};};return nil ;};func (_cadc *Page )collectPageStripes ()(_cag []_ebc .Segmenter ,_afa error ){const _bef ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _adc _ebc .Segmenter ;for _ ,_fdf :=range _cadc .Segments {switch _fdf .Type {case 6,7,22,23,38,39,42,43:_adc ,_afa =_fdf .GetSegmentData ();if _afa !=nil {return nil ,_cad .Wrap (_afa ,_bef ,"");};_cag =append (_cag ,_adc );case 50:_adc ,_afa =_fdf .GetSegmentData ();if _afa !=nil {return nil ,_afa ;};_cde ,_ffe :=_adc .(*_ebc .EndOfStripe );if !_ffe {return nil ,_cad .Errorf (_bef ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_adc );};_cag =append (_cag ,_cde );_cadc .FinalHeight =_cde .LineNumber ();};};return _cag ,nil ;};func DecodeDocument (input _eb .StreamReader ,globals *Globals )(*Document ,error ){return _dee (input ,globals );};func (_fdb *Page )countRegions ()int {var _agb int ;for _ ,_deac :=range _fdb .Segments {switch _deac .Type {case 6,7,22,23,38,39,42,43:_agb ++;};};return _agb ;};type Page struct{Segments []*_ebc .Header ;PageNumber int ;Bitmap *_d .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_cdc *Globals )AddSegment (segment *_ebc .Header ){_cdc .Segments =append (_cdc .Segments ,segment )};func _dee (_eca _eb .StreamReader ,_gd *Globals )(*Document ,error ){_eda :=&Document {Pages :make (map[int ]*Page ),InputStream :_eca ,OrganizationType :_ebc .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_gd ,_eg :9};if _eda .GlobalSegments ==nil {_eda .GlobalSegments =&Globals {};};if _edgg :=_eda .mapData ();_edgg !=nil {return nil ,_edgg ;};return _eda ,nil ;};func (_bc *Document )addSymbolDictionary (_bfdg int ,_bd *_d .Bitmaps ,_dag []int ,_ad map[int ]int ,_dba bool )(*_ebc .Header ,error ){const _aff ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_bee :=&_ebc .SymbolDictionary {};if _ff :=_bee .InitEncode (_bd ,_dag ,_ad ,_dba );_ff !=nil {return nil ,_ff ;};_efd :=&_ebc .Header {Type :_ebc .TSymbolDictionary ,PageAssociation :_bfdg ,SegmentData :_bee };if _bfdg ==0{if _bc .GlobalSegments ==nil {_bc .GlobalSegments =&Globals {};};_bc .GlobalSegments .AddSegment (_efd );return _efd ,nil ;};_gf ,_dg :=_bc .Pages [_bfdg ];if !_dg {return nil ,_cad .Errorf (_aff ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bfdg );};var (_fcc int ;_egf *_ebc .Header ;);for _fcc ,_egf =range _gf .Segments {if _egf .Type ==_ebc .TPageInformation {break ;};};_fcc ++;_gf .Segments =append (_gf .Segments ,nil );copy (_gf .Segments [_fcc +1:],_gf .Segments [_fcc :]);_gf .Segments [_fcc ]=_efd ;return _efd ,nil ;};var _ce =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_cee *Document )Encode ()(_gb []byte ,_dff error ){const _bb ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _dfe ,_gc int ;if _cee .FullHeaders {if _dfe ,_dff =_cee .encodeFileHeader (_cee ._be );_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};};var (_beeb bool ;_bge *_ebc .Header ;_cge *Page ;);if _dff =_cee .completeClassifiedPages ();_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};if _dff =_cee .produceClassifiedPages ();_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};if _cee .GlobalSegments !=nil {for _ ,_bge =range _cee .GlobalSegments .Segments {if _dff =_cee .encodeSegment (_bge ,&_dfe );_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};};};for _fga :=1;_fga <=int (_cee .NumberOfPages );_fga ++{if _cge ,_beeb =_cee .Pages [_fga ];!_beeb {return nil ,_cad .Errorf (_bb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fga );};for _ ,_bge =range _cge .Segments {if _dff =_cee .encodeSegment (_bge ,&_dfe );_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};};};if _cee .FullHeaders {if _gc ,_dff =_cee .encodeEOFHeader (_cee ._be );_dff !=nil {return nil ,_cad .Wrap (_dff ,_bb ,"");};_dfe +=_gc ;};_gb =_cee ._be .Data ();if len (_gb )!=_dfe {_e .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_dfe ,len (_gb ));};return _gb ,nil ;};func (_ccc *Document )encodeEOFHeader (_feb _eb .BinaryWriter )(_efa int ,_fgbf error ){_bce :=&_ebc .Header {SegmentNumber :_ccc .nextSegmentNumber (),Type :_ebc .TEndOfFile };if _efa ,_fgbf =_bce .Encode (_feb );_fgbf !=nil {return 0,_cad .Wrap (_fgbf ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _efa ,nil ;};func (_age *Document )GetGlobalSegment (i int )(*_ebc .Header ,error ){_ccb ,_dge :=_age .GlobalSegments .GetSegment (i );if _dge !=nil {return nil ,_cad .Wrap (_dge ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _ccb ,nil ;};func (_cbc *Document )GetPage (pageNumber int )(_ebc .Pager ,error ){const _dcd ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_e .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_b .Stack ());return nil ,_cad .Errorf (_dcd ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_cbc .Pages ){_e .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_cad .Error (_dcd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_egab ,_cdg :=_cbc .Pages [pageNumber ];if !_cdg {_e .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_b .Stack ());return nil ,_cad .Errorf (_dcd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _egab ,nil ;};func (_caf *Document )encodeSegment (_adf *_ebc .Header ,_efgf *int )error {const _cgea ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_adf .SegmentNumber =_caf .nextSegmentNumber ();_fgb ,_ffg :=_adf .Encode (_caf ._be );if _ffg !=nil {return _cad .Wrapf (_ffg ,_cgea ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_adf .SegmentNumber );};*_efgf +=_fgb ;return nil ;};func (_ee *Document )AddClassifiedPage (bm *_d .Bitmap ,method _ac .Method )(_eee error ){const _cb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_ee .FullHeaders &&_ee .NumberOfPages !=0{return _cad .Error (_cb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _ee .Classer ==nil {if _ee .Classer ,_eee =_ac .Init (_ac .DefaultSettings ());_eee !=nil {return _cad .Wrap (_eee ,_cb ,"");};};_acb :=int (_ee .nextPageNumber ());_ccd :=&Page {Segments :[]*_ebc .Header {},Bitmap :bm ,Document :_ee ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_acb };_ee .Pages [_acb ]=_ccd ;switch method {case _ac .RankHaus :_ccd .EncodingMethod =RankHausEM ;case _ac .Correlation :_ccd .EncodingMethod =CorrelationEM ;};_ccd .AddPageInformationSegment ();if _eee =_ee .Classer .AddPage (bm ,_acb ,method );_eee !=nil {return _cad .Wrap (_eee ,_cb ,"");};if _ee .FullHeaders {_ccd .AddEndOfPageSegment ();};return nil ;};func (_fee *Page )GetWidth ()(int ,error ){return _fee .getWidth ()};func (_df *Document )AddGenericPage (bm *_d .Bitmap ,duplicateLineRemoval bool )(_fc error ){const _g ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_df .FullHeaders &&_df .NumberOfPages !=0{return _cad .Error (_g ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_cc :=&Page {Segments :[]*_ebc .Header {},Bitmap :bm ,Document :_df ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_cc .PageNumber =int (_df .nextPageNumber ());_df .Pages [_cc .PageNumber ]=_cc ;_cc .AddPageInformationSegment ();if _fc =_cc .AddGenericRegion (bm ,0,0,0,_ebc .TImmediateGenericRegion ,duplicateLineRemoval );_fc !=nil {return _cad .Wrap (_fc ,_g ,"");};if _df .FullHeaders {_cc .AddEndOfPageSegment ();};return nil ;};func (_cdbf *Page )composePageBitmap ()error {const _bgag ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _cdbf .PageNumber ==0{return nil ;};_ffb :=_cdbf .getPageInformationSegment ();if _ffb ==nil {return _cad .Error (_bgag ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cea ,_bgg :=_ffb .GetSegmentData ();if _bgg !=nil {return _bgg ;};_feea ,_febe :=_cea .(*_ebc .PageInformationSegment );if !_febe {return _cad .Error (_bgag ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _bgg =_cdbf .createPage (_feea );_bgg !=nil {return _cad .Wrap (_bgg ,_bgag ,"");};_cdbf .clearSegmentData ();return nil ;};