//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_d "encoding/binary";_be "errors";_da "fmt";_af "github.com/pplorins/unipdf/v3/common";_a "github.com/pplorins/unipdf/v3/internal/bitwise";_cf "github.com/pplorins/unipdf/v3/internal/jbig2/basic";_cb "github.com/pplorins/unipdf/v3/internal/jbig2/bitmap";_ea "github.com/pplorins/unipdf/v3/internal/jbig2/decoder/arithmetic";_bb "github.com/pplorins/unipdf/v3/internal/jbig2/decoder/huffman";_cd "github.com/pplorins/unipdf/v3/internal/jbig2/decoder/mmr";_ee "github.com/pplorins/unipdf/v3/internal/jbig2/encoder/arithmetic";_ec "github.com/pplorins/unipdf/v3/internal/jbig2/errors";_dg "github.com/pplorins/unipdf/v3/internal/jbig2/internal";_ag "golang.org/x/xerrors";_e "image";_cg "io";_c "math";_ba "strings";_cc "time";);func (_gcdc *TextRegion )readRegionFlags ()error {var (_aaaad int ;_ccgf uint64 ;_edccc error ;);_aaaad ,_edccc =_gcdc ._edbf .ReadBit ();if _edccc !=nil {return _edccc ;};_gcdc .SbrTemplate =int8 (_aaaad );_ccgf ,_edccc =_gcdc ._edbf .ReadBits (5);if _edccc !=nil {return _edccc ;};_gcdc .SbDsOffset =int8 (_ccgf );if _gcdc .SbDsOffset > 0x0f{_gcdc .SbDsOffset -=0x20;};_aaaad ,_edccc =_gcdc ._edbf .ReadBit ();if _edccc !=nil {return _edccc ;};_gcdc .DefaultPixel =int8 (_aaaad );_ccgf ,_edccc =_gcdc ._edbf .ReadBits (2);if _edccc !=nil {return _edccc ;};_gcdc .CombinationOperator =_cb .CombinationOperator (int (_ccgf )&0x3);_aaaad ,_edccc =_gcdc ._edbf .ReadBit ();if _edccc !=nil {return _edccc ;};_gcdc .IsTransposed =int8 (_aaaad );_ccgf ,_edccc =_gcdc ._edbf .ReadBits (2);if _edccc !=nil {return _edccc ;};_gcdc .ReferenceCorner =int16 (_ccgf )&0x3;_ccgf ,_edccc =_gcdc ._edbf .ReadBits (2);if _edccc !=nil {return _edccc ;};_gcdc .LogSBStrips =int16 (_ccgf )&0x3;_gcdc .SbStrips =1<<uint (_gcdc .LogSBStrips );_aaaad ,_edccc =_gcdc ._edbf .ReadBit ();if _edccc !=nil {return _edccc ;};if _aaaad ==1{_gcdc .UseRefinement =true ;};_aaaad ,_edccc =_gcdc ._edbf .ReadBit ();if _edccc !=nil {return _edccc ;};if _aaaad ==1{_gcdc .IsHuffmanEncoded =true ;};return nil ;};func (_fgf *GenericRegion )copyLineAbove (_daedf int )error {_egb :=_daedf *_fgf .Bitmap .RowStride ;_ge :=_egb -_fgf .Bitmap .RowStride ;for _fbb :=0;_fbb < _fgf .Bitmap .RowStride ;_fbb ++{_cbac ,_fcg :=_fgf .Bitmap .GetByte (_ge );if _fcg !=nil {return _fcg ;};_ge ++;if _fcg =_fgf .Bitmap .SetByte (_egb ,_cbac );_fcg !=nil {return _fcg ;};_egb ++;};return nil ;};func (_dcae *TableSegment )StreamReader ()_a .StreamReader {return _dcae ._dcdg };func (_efcgc *RegionSegment )parseHeader ()error {const _eeeeb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_af .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_af .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_gfcf ,_acda :=_efcgc ._bfa .ReadBits (32);if _acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"\u0077\u0069\u0064t\u0068");};_efcgc .BitmapWidth =uint32 (_gfcf &_c .MaxUint32 );_gfcf ,_acda =_efcgc ._bfa .ReadBits (32);if _acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_efcgc .BitmapHeight =uint32 (_gfcf &_c .MaxUint32 );_gfcf ,_acda =_efcgc ._bfa .ReadBits (32);if _acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_efcgc .XLocation =uint32 (_gfcf &_c .MaxUint32 );_gfcf ,_acda =_efcgc ._bfa .ReadBits (32);if _acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_efcgc .YLocation =uint32 (_gfcf &_c .MaxUint32 );if _ ,_acda =_efcgc ._bfa .ReadBits (5);_acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _acda =_efcgc .readCombinationOperator ();_acda !=nil {return _ec .Wrap (_acda ,_eeeeb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_egeg *TableSegment )HtLow ()int32 {return _egeg ._bgcaa };func (_fddb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_gdfc ,_bgbb :=_fddb ._agdfd .ReadBit ();if _bgbb !=nil {return _bgbb ;};if _gdfc ==1{_fddb ._ffac =true ;};return nil ;};func (_feb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_cef ,_bg ,_fa ,_eb ,_bag ,_dbb ,_gad ,_eaa ,_bdb int )error {var (_dea ,_agf ,_feba ,_aeg ,_cgd ,_fgc int ;_bfd byte ;_gae error ;);if _cef > 0{_bfd ,_gae =_feb .RegionBitmap .GetByte (_gad -_fa );if _gae !=nil {return _gae ;};_feba =int (_bfd );};if _eaa > 0&&_eaa <=_feb .ReferenceBitmap .Height {_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb -_eb +_dbb );if _gae !=nil {return _gae ;};_aeg =int (_bfd )<<4;};if _eaa >=0&&_eaa < _feb .ReferenceBitmap .Height {_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb +_dbb );if _gae !=nil {return _gae ;};_cgd =int (_bfd )<<1;};if _eaa > -2&&_eaa < _feb .ReferenceBitmap .Height -1{_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb +_eb +_dbb );if _gae !=nil {return _gae ;};_fgc =int (_bfd );};_dea =((_feba >>5)&0x6)|((_fgc >>2)&0x30)|(_cgd &0x180)|(_aeg &0xc00);var _bbd int ;for _bed :=0;_bed < _bag ;_bed =_bbd {var _ff int ;_bbd =_bed +8;var _ceg int ;if _ceg =_bg -_bed ;_ceg > 8{_ceg =8;};_dce :=_bbd < _bg ;_cde :=_bbd < _feb .ReferenceBitmap .Width ;_abfb :=_dbb +1;if _cef > 0{_bfd =0;if _dce {_bfd ,_gae =_feb .RegionBitmap .GetByte (_gad -_fa +1);if _gae !=nil {return _gae ;};};_feba =(_feba <<8)|int (_bfd );};if _eaa > 0&&_eaa <=_feb .ReferenceBitmap .Height {var _bde int ;if _cde {_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb -_eb +_abfb );if _gae !=nil {return _gae ;};_bde =int (_bfd )<<4;};_aeg =(_aeg <<8)|_bde ;};if _eaa >=0&&_eaa < _feb .ReferenceBitmap .Height {var _fd int ;if _cde {_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb +_abfb );if _gae !=nil {return _gae ;};_fd =int (_bfd )<<1;};_cgd =(_cgd <<8)|_fd ;};if _eaa > -2&&_eaa < (_feb .ReferenceBitmap .Height -1){_bfd =0;if _cde {_bfd ,_gae =_feb .ReferenceBitmap .GetByte (_bdb +_eb +_abfb );if _gae !=nil {return _gae ;};};_fgc =(_fgc <<8)|int (_bfd );};for _ad :=0;_ad < _ceg ;_ad ++{var _dcc int ;_bgb :=false ;_afe :=(_dea >>4)&0x1ff;if _afe ==0x1ff{_bgb =true ;_dcc =1;}else if _afe ==0x00{_bgb =true ;};if !_bgb {if _feb ._ae {_agf =_feb .overrideAtTemplate0 (_dea ,_bed +_ad ,_cef ,_ff ,_ad );_feb ._f .SetIndex (int32 (_agf ));}else {_feb ._f .SetIndex (int32 (_dea ));};_dcc ,_gae =_feb ._ecg .DecodeBit (_feb ._f );if _gae !=nil {return _gae ;};};_aef :=uint (7-_ad );_ff |=_dcc <<_aef ;_dea =((_dea &0xdb6)<<1)|_dcc |(_feba >>_aef +5)&0x002|((_fgc >>_aef +2)&0x010)|((_cgd >>_aef )&0x080)|((_aeg >>_aef )&0x400);};_gae =_feb .RegionBitmap .SetByte (_gad ,byte (_ff ));if _gae !=nil {return _gae ;};_gad ++;_bdb ++;};return nil ;};func (_cge *GenericRegion )overrideAtTemplate0a (_bbcb ,_babf ,_babe ,_ggbg ,_dad ,_edd int )int {if _cge .GBAtOverride [0]{_bbcb &=0xFFEF;if _cge .GBAtY [0]==0&&_cge .GBAtX [0]>=-int8 (_dad ){_bbcb |=(_ggbg >>uint (int8 (_edd )-_cge .GBAtX [0]&0x1))<<4;}else {_bbcb |=int (_cge .getPixel (_babf +int (_cge .GBAtX [0]),_babe +int (_cge .GBAtY [0])))<<4;};};if _cge .GBAtOverride [1]{_bbcb &=0xFBFF;if _cge .GBAtY [1]==0&&_cge .GBAtX [1]>=-int8 (_dad ){_bbcb |=(_ggbg >>uint (int8 (_edd )-_cge .GBAtX [1]&0x1))<<10;}else {_bbcb |=int (_cge .getPixel (_babf +int (_cge .GBAtX [1]),_babe +int (_cge .GBAtY [1])))<<10;};};if _cge .GBAtOverride [2]{_bbcb &=0xF7FF;if _cge .GBAtY [2]==0&&_cge .GBAtX [2]>=-int8 (_dad ){_bbcb |=(_ggbg >>uint (int8 (_edd )-_cge .GBAtX [2]&0x1))<<11;}else {_bbcb |=int (_cge .getPixel (_babf +int (_cge .GBAtX [2]),_babe +int (_cge .GBAtY [2])))<<11;};};if _cge .GBAtOverride [3]{_bbcb &=0x7FFF;if _cge .GBAtY [3]==0&&_cge .GBAtX [3]>=-int8 (_dad ){_bbcb |=(_ggbg >>uint (int8 (_edd )-_cge .GBAtX [3]&0x1))<<15;}else {_bbcb |=int (_cge .getPixel (_babf +int (_cge .GBAtX [3]),_babe +int (_cge .GBAtY [3])))<<15;};};return _bbcb ;};type HalftoneRegion struct{_ccbg _a .StreamReader ;_gceaa *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cb .Bitmap ;Patterns []*_cb .Bitmap ;};func (_dbg *GenericRegion )InitEncode (bm *_cb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fad ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _ec .Error (_fad ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ec .Error (_fad ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_dbg .Bitmap =bm ;_dbg .GBTemplate =byte (template );switch _dbg .GBTemplate {case 0:_dbg .GBAtX =[]int8 {3,-3,2,-2};_dbg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dbg .GBAtX =[]int8 {3};_dbg .GBAtY =[]int8 {-1};case 2,3:_dbg .GBAtX =[]int8 {2};_dbg .GBAtY =[]int8 {-1};default:return _ec .Errorf (_fad ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_dbg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dbg .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ega *GenericRefinementRegion )parseHeader ()(_gded error ){_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_cceb :=_cc .Now ();defer func (){if _gded ==nil {_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_cc .Since (_cceb ).Nanoseconds ());}else {_af .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gded );};}();if _gded =_ega .RegionInfo .parseHeader ();_gded !=nil {return _gded ;};_ ,_gded =_ega ._gbb .ReadBits (6);if _gded !=nil {return _gded ;};_ega .IsTPGROn ,_gded =_ega ._gbb .ReadBool ();if _gded !=nil {return _gded ;};var _fbg int ;_fbg ,_gded =_ega ._gbb .ReadBit ();if _gded !=nil {return _gded ;};_ega .TemplateID =int8 (_fbg );switch _ega .TemplateID {case 0:_ega .Template =_ega ._gb ;if _gded =_ega .readAtPixels ();_gded !=nil {return ;};case 1:_ega .Template =_ega ._de ;};return nil ;};func (_gbad *TextRegion )decodeCurrentT ()(int64 ,error ){if _gbad .SbStrips !=1{if _gbad .IsHuffmanEncoded {_dgdg ,_bgfc :=_gbad ._edbf .ReadBits (byte (_gbad .LogSBStrips ));return int64 (_dgdg ),_bgfc ;};_adbag ,_cegf :=_gbad ._ccec .DecodeInt (_gbad ._eefb );if _cegf !=nil {return 0,_cegf ;};return int64 (_adbag ),nil ;};return 0,nil ;};func (_dgfb *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fcabfe int ;_gbceg int32 ;_daea error ;_cgbee =int32 (_dgfb ._gafd +_dgfb .NumberOfNewSymbols );_baced =make ([]int ,_cgbee ););for _fdeeg :=int32 (0);_fdeeg < _cgbee ;_fdeeg +=_gbceg {if _dgfb .IsHuffmanEncoded {_bgabg ,_faggd :=_bb .GetStandardTable (1);if _faggd !=nil {return nil ,_faggd ;};_geffd ,_faggd :=_bgabg .Decode (_dgfb ._ffbe );if _faggd !=nil {return nil ,_faggd ;};_gbceg =int32 (_geffd );}else {_gbceg ,_daea =_dgfb ._aabc .DecodeInt (_dgfb ._daa );if _daea !=nil {return nil ,_daea ;};};if _gbceg !=0{for _agadff :=_fdeeg ;_agadff < _fdeeg +_gbceg ;_agadff ++{_baced [_agadff ]=_fcabfe ;};};if _fcabfe ==0{_fcabfe =1;}else {_fcabfe =0;};};return _baced ,nil ;};func (_aaae *TextRegion )encodeSymbols (_fcfd _a .BinaryWriter )(_cbfe int ,_gbdd error ){const _afad ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_affc :=make ([]byte ,4);_d .BigEndian .PutUint32 (_affc ,_aaae .NumberOfSymbols );if _cbfe ,_gbdd =_fcfd .Write (_affc );_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_gcdg ,_gbdd :=_cb .NewClassedPoints (_aaae ._edaab ,_aaae ._bbf );if _gbdd !=nil {return 0,_ec .Wrap (_gbdd ,_afad ,"");};var _cdbe ,_fcfc int ;_agcd :=_ee .New ();_agcd .Init ();if _gbdd =_agcd .EncodeInteger (_ee .IADT ,0);_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_agfd ,_gbdd :=_gcdg .GroupByY ();if _gbdd !=nil {return 0,_ec .Wrap (_gbdd ,_afad ,"");};for _ ,_facb :=range _agfd {_egec :=int (_facb .YAtIndex (0));_fcagc :=_egec -_cdbe ;if _gbdd =_agcd .EncodeInteger (_ee .IADT ,_fcagc );_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"");};var _cbadb int ;for _ddgdg ,_eafe :=range _facb .IntSlice {switch _ddgdg {case 0:_gacgb :=int (_facb .XAtIndex (_ddgdg ))-_fcfc ;if _gbdd =_agcd .EncodeInteger (_ee .IAFS ,_gacgb );_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"");};_fcfc +=_gacgb ;_cbadb =_fcfc ;default:_geac :=int (_facb .XAtIndex (_ddgdg ))-_cbadb ;if _gbdd =_agcd .EncodeInteger (_ee .IADS ,_geac );_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"");};_cbadb +=_geac ;};_bggca ,_ddgdd :=_aaae ._eeb .Get (_eafe );if _ddgdd !=nil {return _cbfe ,_ec .Wrap (_ddgdd ,_afad ,"");};_ebgbc ,_aaeb :=_aaae ._bedcg [_bggca ];if !_aaeb {_ebgbc ,_aaeb =_aaae ._fagb [_bggca ];if !_aaeb {return _cbfe ,_ec .Errorf (_afad ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_bggca );};};if _ddgdd =_agcd .EncodeIAID (_aaae ._eggga ,_ebgbc );_ddgdd !=nil {return _cbfe ,_ec .Wrap (_ddgdd ,_afad ,"");};};if _gbdd =_agcd .EncodeOOB (_ee .IADS );_gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"");};};_agcd .Final ();_cafbd ,_gbdd :=_agcd .WriteTo (_fcfd );if _gbdd !=nil {return _cbfe ,_ec .Wrap (_gbdd ,_afad ,"");};_cbfe +=int (_cafbd );return _cbfe ,nil ;};type SymbolDictionary struct{_ffbe _a .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_dbeb bool ;_fcag bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gafd uint32 ;_aaab []*_cb .Bitmap ;_eedd uint32 ;_cadg []*_cb .Bitmap ;_agab _bb .Tabler ;_gba _bb .Tabler ;_ebca _bb .Tabler ;_ddc _bb .Tabler ;_dedd []*_cb .Bitmap ;_gddg []*_cb .Bitmap ;_aabc *_ea .Decoder ;_cfgdc *TextRegion ;_cfb *GenericRegion ;_gbcf *GenericRefinementRegion ;_fcagg *_ea .DecoderStats ;_egdg *_ea .DecoderStats ;_faaf *_ea .DecoderStats ;_fbdc *_ea .DecoderStats ;_daa *_ea .DecoderStats ;_ggcff *_ea .DecoderStats ;_edcc *_ea .DecoderStats ;_geff *_ea .DecoderStats ;_ggcdd *_ea .DecoderStats ;_fdbb int8 ;_ageg *_cb .Bitmaps ;_ebgbb []int ;_facfa map[int ]int ;_fdee bool ;};func (_ege *HalftoneRegion )checkInput ()error {if _ege .IsMMREncoded {if _ege .HTemplate !=0{_af .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_ege .HTemplate );};if _ege .HSkipEnabled {_af .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_ege .HSkipEnabled );};};return nil ;};func (_agbfb *TextRegion )decodeRI ()(int64 ,error ){if !_agbfb .UseRefinement {return 0,nil ;};if _agbfb .IsHuffmanEncoded {_aacd ,_edbd :=_agbfb ._edbf .ReadBit ();return int64 (_aacd ),_edbd ;};_bcba ,_aggg :=_agbfb ._ccec .DecodeInt (_agbfb ._fdcc );return int64 (_bcba ),_aggg ;};func (_bede *GenericRegion )setOverrideFlag (_cagc int ){_bede .GBAtOverride [_cagc ]=true ;_bede ._cfaa =true ;};func (_gaf *HalftoneRegion )shiftAndFill (_ffe int )int {_ffe >>=8;if _ffe < 0{_bgf :=int (_c .Log (float64 (_effb (_ffe )))/_c .Log (2));_fcdc :=31-_bgf ;for _bff :=1;_bff < _fcdc ;_bff ++{_ffe |=1<<uint (31-_bff );};};return _ffe ;};func (_dfa *GenericRegion )setParametersMMR (_ggde bool ,_feeg ,_gcaa int64 ,_acc ,_acdf uint32 ,_fcgc byte ,_gccgg ,_gff bool ,_fggb ,_defd []int8 ){_dfa .DataOffset =_feeg ;_dfa .DataLength =_gcaa ;_dfa .RegionSegment =&RegionSegment {};_dfa .RegionSegment .BitmapHeight =_acc ;_dfa .RegionSegment .BitmapWidth =_acdf ;_dfa .GBTemplate =_fcgc ;_dfa .IsMMREncoded =_ggde ;_dfa .IsTPGDon =_gccgg ;_dfa .GBAtX =_fggb ;_dfa .GBAtY =_defd ;};func (_ace *GenericRegion )Init (h *Header ,r _a .StreamReader )error {_ace .RegionSegment =NewRegionSegment (r );_ace ._eae =r ;return _ace .parseHeader ();};func (_dgcf *SymbolDictionary )encodeSymbols (_defc _a .BinaryWriter )(_bbaee int ,_bcdeb error ){const _dffb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_eacd :=_ee .New ();_eacd .Init ();_efcd ,_bcdeb :=_dgcf ._ageg .SelectByIndexes (_dgcf ._ebgbb );if _bcdeb !=nil {return 0,_ec .Wrap (_bcdeb ,_dffb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_decdf :=map[*_cb .Bitmap ]int {};for _efef ,_adab :=range _efcd .Values {_decdf [_adab ]=_efef ;};_efcd .SortByHeight ();var _ecfd ,_cffg int ;_geda ,_bcdeb :=_efcd .GroupByHeight ();if _bcdeb !=nil {return 0,_ec .Wrap (_bcdeb ,_dffb ,"");};for _ ,_cafa :=range _geda .Values {_ffdf :=_cafa .Values [0].Height ;_bgff :=_ffdf -_ecfd ;if _bcdeb =_eacd .EncodeInteger (_ee .IADH ,_bgff );_bcdeb !=nil {return 0,_ec .Wrapf (_bcdeb ,_dffb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bgff );};_ecfd =_ffdf ;_dfaf ,_gdcg :=_cafa .GroupByWidth ();if _gdcg !=nil {return 0,_ec .Wrapf (_gdcg ,_dffb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ffdf );};var _fgdb int ;for _ ,_cade :=range _dfaf .Values {for _ ,_aegee :=range _cade .Values {_begd :=_aegee .Width ;_afc :=_begd -_fgdb ;if _gdcg =_eacd .EncodeInteger (_ee .IADW ,_afc );_gdcg !=nil {return 0,_ec .Wrapf (_gdcg ,_dffb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_afc );};_fgdb +=_afc ;if _gdcg =_eacd .EncodeBitmap (_aegee ,false );_gdcg !=nil {return 0,_ec .Wrapf (_gdcg ,_dffb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ffdf ,_begd );};_gfac :=_decdf [_aegee ];_dgcf ._facfa [_gfac ]=_cffg ;_cffg ++;};};if _gdcg =_eacd .EncodeOOB (_ee .IADW );_gdcg !=nil {return 0,_ec .Wrap (_gdcg ,_dffb ,"\u0049\u0041\u0044\u0057");};};if _bcdeb =_eacd .EncodeInteger (_ee .IAEX ,0);_bcdeb !=nil {return 0,_ec .Wrap (_bcdeb ,_dffb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _bcdeb =_eacd .EncodeInteger (_ee .IAEX ,len (_dgcf ._ebgbb ));_bcdeb !=nil {return 0,_ec .Wrap (_bcdeb ,_dffb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_eacd .Final ();_cgbe ,_bcdeb :=_eacd .WriteTo (_defc );if _bcdeb !=nil {return 0,_ec .Wrap (_bcdeb ,_dffb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_cgbe ),nil ;};func (_faeb *TextRegion )setCodingStatistics ()error {if _faeb ._cege ==nil {_faeb ._cege =_ea .NewStats (512,1);};if _faeb ._adgea ==nil {_faeb ._adgea =_ea .NewStats (512,1);};if _faeb ._cgc ==nil {_faeb ._cgc =_ea .NewStats (512,1);};if _faeb ._eefb ==nil {_faeb ._eefb =_ea .NewStats (512,1);};if _faeb ._fdcc ==nil {_faeb ._fdcc =_ea .NewStats (512,1);};if _faeb ._cbad ==nil {_faeb ._cbad =_ea .NewStats (512,1);};if _faeb ._gbccb ==nil {_faeb ._gbccb =_ea .NewStats (512,1);};if _faeb ._fabe ==nil {_faeb ._fabe =_ea .NewStats (1<<uint (_faeb ._dgec ),1);};if _faeb ._fgcg ==nil {_faeb ._fgcg =_ea .NewStats (512,1);};if _faeb ._cecc ==nil {_faeb ._cecc =_ea .NewStats (512,1);};if _faeb ._ccec ==nil {var _defcf error ;_faeb ._ccec ,_defcf =_ea .New (_faeb ._edbf );if _defcf !=nil {return _defcf ;};};return nil ;};func _abfac (_eegfg _a .StreamReader ,_bgaf *Header )*TextRegion {_ebdc :=&TextRegion {_edbf :_eegfg ,Header :_bgaf ,RegionInfo :NewRegionSegment (_eegfg )};return _ebdc ;};type PatternDictionary struct{_cdeg _a .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cb .Bitmap ;GrayMax uint32 ;};func (_beb *HalftoneRegion )computeGrayScalePlanes (_cbaa []*_cb .Bitmap ,_gef int )([][]int ,error ){_cec :=make ([][]int ,_beb .HGridHeight );for _edac :=0;_edac < len (_cec );_edac ++{_cec [_edac ]=make ([]int ,_beb .HGridWidth );};for _bfga :=0;_bfga < int (_beb .HGridHeight );_bfga ++{for _baca :=0;_baca < int (_beb .HGridWidth );_baca +=8{var _dgb int ;if _agfb :=int (_beb .HGridWidth )-_baca ;_agfb > 8{_dgb =8;}else {_dgb =_agfb ;};_cfcd :=_cbaa [0].GetByteIndex (_baca ,_bfga );for _aea :=0;_aea < _dgb ;_aea ++{_dgeg :=_aea +_baca ;_cec [_bfga ][_dgeg ]=0;for _feegc :=0;_feegc < _gef ;_feegc ++{_dde ,_dac :=_cbaa [_feegc ].GetByte (_cfcd );if _dac !=nil {return nil ,_dac ;};_fcdf :=_dde >>uint (7-_dgeg &7);_gacg :=_fcdf &1;_aecc :=1<<uint (_feegc );_fda :=int (_gacg )*_aecc ;_cec [_bfga ][_dgeg ]+=_fda ;};};};};return _cec ,nil ;};func (_dda *SymbolDictionary )InitEncode (symbols *_cb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bbgf ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_dda .SdATX =[]int8 {3,-3,2,-2};_dda .SdATY =[]int8 {-1,-1,-2,-2};_dda ._ageg =symbols ;_dda ._ebgbb =make ([]int ,len (symbolList ));copy (_dda ._ebgbb ,symbolList );if len (_dda ._ebgbb )!=_dda ._ageg .Size (){return _ec .Error (_bbgf ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_dda .NumberOfNewSymbols =uint32 (symbols .Size ());_dda .NumberOfExportedSymbols =uint32 (symbols .Size ());_dda ._facfa =symbolMap ;_dda ._fdee =unborderSymbols ;return nil ;};func (_dfgf *SymbolDictionary )readNumberOfNewSymbols ()error {_gedc ,_dgbe :=_dfgf ._ffbe .ReadBits (32);if _dgbe !=nil {return _dgbe ;};_dfgf .NumberOfNewSymbols =uint32 (_gedc &_c .MaxUint32 );return nil ;};func (_cafb *GenericRegion )GetRegionInfo ()*RegionSegment {return _cafb .RegionSegment };type GenericRefinementRegion struct{_gb templater ;_de templater ;_gbb _a .StreamReader ;_gf *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cb .Bitmap ;ReferenceBitmap *_cb .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ecg *_ea .Decoder ;_f *_ea .DecoderStats ;_ae bool ;_df []bool ;};func (_abfd *HalftoneRegion )Init (hd *Header ,r _a .StreamReader )error {_abfd ._ccbg =r ;_abfd ._gceaa =hd ;_abfd .RegionSegment =NewRegionSegment (r );return _abfd .parseHeader ();};func (_acded *TextRegion )setParameters (_cgcc *_ea .Decoder ,_gdebb ,_fgbgg bool ,_bcaba ,_bccab uint32 ,_egff uint32 ,_fbbfb int8 ,_fcff uint32 ,_bcfed int8 ,_cecf _cb .CombinationOperator ,_acba int8 ,_eccbd int16 ,_geab ,_bcee ,_feag ,_fcffe ,_bgga ,_cagb ,_ddcc ,_deba ,_dgab ,_dfdce int8 ,_feagc ,_gfdb []int8 ,_gdbf []*_cb .Bitmap ,_ccea int8 ){_acded ._ccec =_cgcc ;_acded .IsHuffmanEncoded =_gdebb ;_acded .UseRefinement =_fgbgg ;_acded .RegionInfo .BitmapWidth =_bcaba ;_acded .RegionInfo .BitmapHeight =_bccab ;_acded .NumberOfSymbolInstances =_egff ;_acded .SbStrips =_fbbfb ;_acded .NumberOfSymbols =_fcff ;_acded .DefaultPixel =_bcfed ;_acded .CombinationOperator =_cecf ;_acded .IsTransposed =_acba ;_acded .ReferenceCorner =_eccbd ;_acded .SbDsOffset =_geab ;_acded .SbHuffFS =_bcee ;_acded .SbHuffDS =_feag ;_acded .SbHuffDT =_fcffe ;_acded .SbHuffRDWidth =_bgga ;_acded .SbHuffRDHeight =_cagb ;_acded .SbHuffRSize =_dgab ;_acded .SbHuffRDX =_ddcc ;_acded .SbHuffRDY =_deba ;_acded .SbrTemplate =_dfdce ;_acded .SbrATX =_feagc ;_acded .SbrATY =_gfdb ;_acded .Symbols =_gdbf ;_acded ._dgec =_ccea ;};func (_adec *GenericRegion )decodeTemplate0a (_adc ,_dcbf ,_fgbd int ,_cdef ,_adba int )(_cfe error ){const _cgg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_adcc ,_edfe int ;_def ,_ffbb int ;_cbc byte ;_cgfb int ;);if _adc >=1{_cbc ,_cfe =_adec .Bitmap .GetByte (_adba );if _cfe !=nil {return _ec .Wrap (_cfe ,_cgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_def =int (_cbc );};if _adc >=2{_cbc ,_cfe =_adec .Bitmap .GetByte (_adba -_adec .Bitmap .RowStride );if _cfe !=nil {return _ec .Wrap (_cfe ,_cgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffbb =int (_cbc )<<6;};_adcc =(_def &0xf0)|(_ffbb &0x3800);for _ced :=0;_ced < _fgbd ;_ced =_cgfb {var (_fab byte ;_cdcf int ;);_cgfb =_ced +8;if _cbcc :=_dcbf -_ced ;_cbcc > 8{_cdcf =8;}else {_cdcf =_cbcc ;};if _adc > 0{_def <<=8;if _cgfb < _dcbf {_cbc ,_cfe =_adec .Bitmap .GetByte (_adba +1);if _cfe !=nil {return _ec .Wrap (_cfe ,_cgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_def |=int (_cbc );};};if _adc > 1{_ggff :=_adba -_adec .Bitmap .RowStride +1;_ffbb <<=8;if _cgfb < _dcbf {_cbc ,_cfe =_adec .Bitmap .GetByte (_ggff );if _cfe !=nil {return _ec .Wrap (_cfe ,_cgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffbb |=int (_cbc )<<6;}else {_ffbb |=0;};};for _dfcg :=0;_dfcg < _cdcf ;_dfcg ++{_bcf :=uint (7-_dfcg );if _adec ._cfaa {_edfe =_adec .overrideAtTemplate0a (_adcc ,_ced +_dfcg ,_adc ,int (_fab ),_dfcg ,int (_bcf ));_adec ._gaa .SetIndex (int32 (_edfe ));}else {_adec ._gaa .SetIndex (int32 (_adcc ));};var _gfbe int ;_gfbe ,_cfe =_adec ._ffb .DecodeBit (_adec ._gaa );if _cfe !=nil {return _ec .Wrap (_cfe ,_cgg ,"");};_fab |=byte (_gfbe )<<_bcf ;_adcc =((_adcc &0x7bf7)<<1)|_gfbe |((_def >>_bcf )&0x10)|((_ffbb >>_bcf )&0x800);};if _edfc :=_adec .Bitmap .SetByte (_cdef ,_fab );_edfc !=nil {return _ec .Wrap (_edfc ,_cgg ,"");};_cdef ++;_adba ++;};return nil ;};func (_acac *TextRegion )symbolIDCodeLengths ()error {var (_ceaae []*_bb .Code ;_efad uint64 ;_dbagc _bb .Tabler ;_dgdaa error ;);for _gbdf :=0;_gbdf < 35;_gbdf ++{_efad ,_dgdaa =_acac ._edbf .ReadBits (4);if _dgdaa !=nil {return _dgdaa ;};_dddb :=int (_efad &0xf);if _dddb > 0{_ceaae =append (_ceaae ,_bb .NewCode (int32 (_dddb ),0,int32 (_gbdf ),false ));};};_dbagc ,_dgdaa =_bb .NewFixedSizeTable (_ceaae );if _dgdaa !=nil {return _dgdaa ;};var (_aecg int64 ;_fff uint32 ;_deddf []*_bb .Code ;_cccea int64 ;);for _fff < _acac .NumberOfSymbols {_cccea ,_dgdaa =_dbagc .Decode (_acac ._edbf );if _dgdaa !=nil {return _dgdaa ;};if _cccea < 32{if _cccea > 0{_deddf =append (_deddf ,_bb .NewCode (int32 (_cccea ),0,int32 (_fff ),false ));};_aecg =_cccea ;_fff ++;}else {var _gegg ,_dcga int64 ;switch _cccea {case 32:_efad ,_dgdaa =_acac ._edbf .ReadBits (2);if _dgdaa !=nil {return _dgdaa ;};_gegg =3+int64 (_efad );if _fff > 0{_dcga =_aecg ;};case 33:_efad ,_dgdaa =_acac ._edbf .ReadBits (3);if _dgdaa !=nil {return _dgdaa ;};_gegg =3+int64 (_efad );case 34:_efad ,_dgdaa =_acac ._edbf .ReadBits (7);if _dgdaa !=nil {return _dgdaa ;};_gegg =11+int64 (_efad );};for _adde :=0;_adde < int (_gegg );_adde ++{if _dcga > 0{_deddf =append (_deddf ,_bb .NewCode (int32 (_dcga ),0,int32 (_fff ),false ));};_fff ++;};};};_acac ._edbf .Align ();_acac ._bcad ,_dgdaa =_bb .NewFixedSizeTable (_deddf );return _dgdaa ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_bcca *Header )writeReferredToCount (_gcdea _a .BinaryWriter )(_bba int ,_dbae error ){const _eac ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_bcca .RTSNumbers =make ([]int ,len (_bcca .RTSegments ));for _dagf ,_cddb :=range _bcca .RTSegments {_bcca .RTSNumbers [_dagf ]=int (_cddb .SegmentNumber );};if len (_bcca .RTSNumbers )<=4{var _dcfg byte ;if len (_bcca .RetainBits )>=1{_dcfg =_bcca .RetainBits [0];};_dcfg |=byte (len (_bcca .RTSNumbers ))<<5;if _dbae =_gcdea .WriteByte (_dcfg );_dbae !=nil {return 0,_ec .Wrap (_dbae ,_eac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fecd :=uint32 (len (_bcca .RTSNumbers ));_fdfc :=make ([]byte ,4+_cf .Ceil (len (_bcca .RTSNumbers )+1,8));_fecd |=0x7<<29;_d .BigEndian .PutUint32 (_fdfc ,_fecd );copy (_fdfc [1:],_bcca .RetainBits );_bba ,_dbae =_gcdea .Write (_fdfc );if _dbae !=nil {return 0,_ec .Wrap (_dbae ,_eac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _bba ,nil ;};func (_aegg *template1 )setIndex (_bdg *_ea .DecoderStats ){_bdg .SetIndex (0x080)};var _ SegmentEncoder =&RegionSegment {};func (_fbdcc *TextRegion )GetRegionInfo ()*RegionSegment {return _fbdcc .RegionInfo };func (_gcff *SymbolDictionary )decodeHeightClassCollectiveBitmap (_acdb int64 ,_bcbd ,_gbcff uint32 )(*_cb .Bitmap ,error ){if _acdb ==0{_gcac :=_cb .New (int (_gbcff ),int (_bcbd ));var (_abe byte ;_cfae error ;);for _aacc :=0;_aacc < len (_gcac .Data );_aacc ++{_abe ,_cfae =_gcff ._ffbe .ReadByte ();if _cfae !=nil {return nil ,_cfae ;};if _cfae =_gcac .SetByte (_aacc ,_abe );_cfae !=nil {return nil ,_cfae ;};};return _gcac ,nil ;};if _gcff ._cfb ==nil {_gcff ._cfb =NewGenericRegion (_gcff ._ffbe );};_gcff ._cfb .setParameters (true ,_gcff ._ffbe .StreamPosition (),_acdb ,_bcbd ,_gbcff );_eeec ,_efdb :=_gcff ._cfb .GetRegionBitmap ();if _efdb !=nil {return nil ,_efdb ;};return _eeec ,nil ;};func (_abfab *GenericRegion )setParametersWithAt (_cac bool ,_fdeg byte ,_cfcb ,_dbf bool ,_gcgc ,_bcab []int8 ,_gcde ,_eff uint32 ,_fdgb *_ea .DecoderStats ,_fgg *_ea .Decoder ){_abfab .IsMMREncoded =_cac ;_abfab .GBTemplate =_fdeg ;_abfab .IsTPGDon =_cfcb ;_abfab .GBAtX =_gcgc ;_abfab .GBAtY =_bcab ;_abfab .RegionSegment .BitmapHeight =_eff ;_abfab .RegionSegment .BitmapWidth =_gcde ;_abfab ._afgb =nil ;_abfab .Bitmap =nil ;if _fdgb !=nil {_abfab ._gaa =_fdgb ;};if _fgg !=nil {_abfab ._ffb =_fgg ;};_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_abfab );};func (_eafb *GenericRegion )overrideAtTemplate3 (_feef ,_dgd ,_gccg ,_dfd ,_aee int )int {_feef &=0x3EF;if _eafb .GBAtY [0]==0&&_eafb .GBAtX [0]>=-int8 (_aee ){_feef |=(_dfd >>uint (7-(int8 (_aee )+_eafb .GBAtX [0]))&0x1)<<4;}else {_feef |=int (_eafb .getPixel (_dgd +int (_eafb .GBAtX [0]),_gccg +int (_eafb .GBAtY [0])))<<4;};return _feef ;};type GenericRegion struct{_eae _a .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cfaa bool ;Bitmap *_cb .Bitmap ;_ffb *_ea .Decoder ;_gaa *_ea .DecoderStats ;_afgb *_cd .Decoder ;};func (_cfgc *SymbolDictionary )getSymbol (_fdbbf int )(*_cb .Bitmap ,error ){const _eccbf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_ggeg ,_deagd :=_cfgc ._ageg .GetBitmap (_cfgc ._ebgbb [_fdbbf ]);if _deagd !=nil {return nil ,_ec .Wrap (_deagd ,_eccbf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _ggeg ,nil ;};func (_gfe *GenericRefinementRegion )getGrReference ()(*_cb .Bitmap ,error ){segments :=_gfe ._gf .RTSegments ;if len (segments )==0{return nil ,_be .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_bf ,_ca :=segments [0].GetSegmentData ();if _ca !=nil {return nil ,_ca ;};_bfg ,_db :=_bf .(Regioner );if !_db {return nil ,_da .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bf );};return _bfg .GetRegionBitmap ();};func (_gage *SymbolDictionary )readRegionFlags ()error {var (_cdegd uint64 ;_aebf int ;);_ ,_acgf :=_gage ._ffbe .ReadBits (3);if _acgf !=nil {return _acgf ;};_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};_gage .SdrTemplate =int8 (_aebf );_cdegd ,_acgf =_gage ._ffbe .ReadBits (2);if _acgf !=nil {return _acgf ;};_gage .SdTemplate =int8 (_cdegd &0xf);_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};if _aebf ==1{_gage ._dbeb =true ;};_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};if _aebf ==1{_gage ._fcag =true ;};_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};if _aebf ==1{_gage .SdHuffAggInstanceSelection =true ;};_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};_gage .SdHuffBMSizeSelection =int8 (_aebf );_cdegd ,_acgf =_gage ._ffbe .ReadBits (2);if _acgf !=nil {return _acgf ;};_gage .SdHuffDecodeWidthSelection =int8 (_cdegd &0xf);_cdegd ,_acgf =_gage ._ffbe .ReadBits (2);if _acgf !=nil {return _acgf ;};_gage .SdHuffDecodeHeightSelection =int8 (_cdegd &0xf);_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};if _aebf ==1{_gage .UseRefinementAggregation =true ;};_aebf ,_acgf =_gage ._ffbe .ReadBit ();if _acgf !=nil {return _acgf ;};if _aebf ==1{_gage .IsHuffmanEncoded =true ;};return nil ;};func (_ddf *PageInformationSegment )readMaxStripeSize ()error {_ceba ,_gdc :=_ddf ._agdfd .ReadBits (15);if _gdc !=nil {return _gdc ;};_ddf .MaxStripeSize =uint16 (_ceba &_c .MaxUint16 );return nil ;};func (_gg *EndOfStripe )parseHeader (_eef *Header ,_eea _a .StreamReader )error {_aa ,_gd :=_gg ._g .ReadBits (32);if _gd !=nil {return _gd ;};_gg ._dd =int (_aa &_c .MaxInt32 );return nil ;};func (_aafa *Header )writeReferredToSegments (_ddea _a .BinaryWriter )(_fcgb int ,_ebab error ){const _beab ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_decc uint16 ;_bbae uint32 ;);_fede :=_aafa .referenceSize ();_cbeee :=1;_bddb :=make ([]byte ,_fede );for _ ,_becfg :=range _aafa .RTSNumbers {switch _fede {case 4:_bbae =uint32 (_becfg );_d .BigEndian .PutUint32 (_bddb ,_bbae );_cbeee ,_ebab =_ddea .Write (_bddb );if _ebab !=nil {return 0,_ec .Wrap (_ebab ,_beab ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_decc =uint16 (_becfg );_d .BigEndian .PutUint16 (_bddb ,_decc );_cbeee ,_ebab =_ddea .Write (_bddb );if _ebab !=nil {return 0,_ec .Wrap (_ebab ,_beab ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _ebab =_ddea .WriteByte (byte (_becfg ));_ebab !=nil {return 0,_ec .Wrap (_ebab ,_beab ,"\u0075\u0069\u006et\u0038");};};_fcgb +=_cbeee ;};return _fcgb ,nil ;};func (_gffe *SymbolDictionary )readNumberOfExportedSymbols ()error {_bggc ,_egae :=_gffe ._ffbe .ReadBits (32);if _egae !=nil {return _egae ;};_gffe .NumberOfExportedSymbols =uint32 (_bggc &_c .MaxUint32 );return nil ;};func (_beeg *Header )parse (_bef Documenter ,_cbg _a .StreamReader ,_gbgd int64 ,_fgce OrganizationType )(_bfcg error ){const _efe ="\u0070\u0061\u0072s\u0065";_af .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bfcg !=nil {_af .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bfcg );}else {_af .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_bfcg =_cbg .Seek (_gbgd ,_cg .SeekStart );if _bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bfcg =_beeg .readSegmentNumber (_cbg );_bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};if _bfcg =_beeg .readHeaderFlags ();_bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};var _agdf uint64 ;_agdf ,_bfcg =_beeg .readNumberOfReferredToSegments (_cbg );if _bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};_beeg .RTSNumbers ,_bfcg =_beeg .readReferredToSegmentNumbers (_cbg ,int (_agdf ));if _bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};_bfcg =_beeg .readSegmentPageAssociation (_bef ,_cbg ,_agdf ,_beeg .RTSNumbers ...);if _bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};if _beeg .Type !=TEndOfFile {if _bfcg =_beeg .readSegmentDataLength (_cbg );_bfcg !=nil {return _ec .Wrap (_bfcg ,_efe ,"");};};_beeg .readDataStartOffset (_cbg ,_fgce );_beeg .readHeaderLength (_cbg ,_gbgd );_af .Log .Trace ("\u0025\u0073",_beeg );return nil ;};func (_agg *PageInformationSegment )checkInput ()error {if _agg .PageBMHeight ==_c .MaxInt32 {if !_agg .IsStripe {_af .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_dfaec *SymbolDictionary )readAtPixels (_daeg int )error {_dfaec .SdATX =make ([]int8 ,_daeg );_dfaec .SdATY =make ([]int8 ,_daeg );var (_cead byte ;_fcfb error ;);for _efa :=0;_efa < _daeg ;_efa ++{_cead ,_fcfb =_dfaec ._ffbe .ReadByte ();if _fcfb !=nil {return _fcfb ;};_dfaec .SdATX [_efa ]=int8 (_cead );_cead ,_fcfb =_dfaec ._ffbe .ReadByte ();if _fcfb !=nil {return _fcfb ;};_dfaec .SdATY [_efa ]=int8 (_cead );};return nil ;};func (_gfc *GenericRegion )writeGBAtPixels (_egdf _a .BinaryWriter )(_cffa int ,_eaac error ){const _gdef ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gfc .UseMMR {return 0,nil ;};_ecce :=1;if _gfc .GBTemplate ==0{_ecce =4;}else if _gfc .UseExtTemplates {_ecce =12;};if len (_gfc .GBAtX )!=_ecce {return 0,_ec .Errorf (_gdef ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_gfc .GBAtY )!=_ecce {return 0,_ec .Errorf (_gdef ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _adad :=0;_adad < _ecce ;_adad ++{if _eaac =_egdf .WriteByte (byte (_gfc .GBAtX [_adad ]));_eaac !=nil {return _cffa ,_ec .Wrap (_eaac ,_gdef ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cffa ++;if _eaac =_egdf .WriteByte (byte (_gfc .GBAtY [_adad ]));_eaac !=nil {return _cffa ,_ec .Wrap (_eaac ,_gdef ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cffa ++;};return _cffa ,nil ;};func (_bdgfg *TextRegion )computeSymbolCodeLength ()error {if _bdgfg .IsHuffmanEncoded {return _bdgfg .symbolIDCodeLengths ();};_bdgfg ._dgec =int8 (_c .Ceil (_c .Log (float64 (_bdgfg .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_ed *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ed .RegionInfo };func (_dab *GenericRegion )parseHeader ()(_gadfe error ){_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _gadfe !=nil {_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gadfe );}else {_af .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_cfc int ;_cdcc uint64 ;);if _gadfe =_dab .RegionSegment .parseHeader ();_gadfe !=nil {return _gadfe ;};if _ ,_gadfe =_dab ._eae .ReadBits (3);_gadfe !=nil {return _gadfe ;};_cfc ,_gadfe =_dab ._eae .ReadBit ();if _gadfe !=nil {return _gadfe ;};if _cfc ==1{_dab .UseExtTemplates =true ;};_cfc ,_gadfe =_dab ._eae .ReadBit ();if _gadfe !=nil {return _gadfe ;};if _cfc ==1{_dab .IsTPGDon =true ;};_cdcc ,_gadfe =_dab ._eae .ReadBits (2);if _gadfe !=nil {return _gadfe ;};_dab .GBTemplate =byte (_cdcc &0xf);_cfc ,_gadfe =_dab ._eae .ReadBit ();if _gadfe !=nil {return _gadfe ;};if _cfc ==1{_dab .IsMMREncoded =true ;};if !_dab .IsMMREncoded {_fbc :=1;if _dab .GBTemplate ==0{_fbc =4;if _dab .UseExtTemplates {_fbc =12;};};if _gadfe =_dab .readGBAtPixels (_fbc );_gadfe !=nil {return _gadfe ;};};if _gadfe =_dab .computeSegmentDataStructure ();_gadfe !=nil {return _gadfe ;};_af .Log .Trace ("\u0025\u0073",_dab );return nil ;};func (_eg *GenericRefinementRegion )decodeTypicalPredictedLine (_egd ,_gc ,_feg ,_gbbg ,_caa ,_dff int )error {_ecga :=_egd -int (_eg .ReferenceDY );_agb :=_eg .ReferenceBitmap .GetByteIndex (0,_ecga );_afg :=_eg .RegionBitmap .GetByteIndex (0,_egd );var _eda error ;switch _eg .TemplateID {case 0:_eda =_eg .decodeTypicalPredictedLineTemplate0 (_egd ,_gc ,_feg ,_gbbg ,_caa ,_dff ,_afg ,_ecga ,_agb );case 1:_eda =_eg .decodeTypicalPredictedLineTemplate1 (_egd ,_gc ,_feg ,_gbbg ,_caa ,_dff ,_afg ,_ecga ,_agb );};return _eda ;};type Type int ;func (_dfg *GenericRegion )decodeTemplate2 (_gbc ,_fecf ,_gbg int ,_bgcc ,_dfb int )(_gge error ){const _bfc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_gccc ,_adgf int ;_ecfg ,_fac int ;_gagd byte ;_ccb ,_aae int ;);if _gbc >=1{_gagd ,_gge =_dfg .Bitmap .GetByte (_dfb );if _gge !=nil {return _ec .Wrap (_gge ,_bfc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_ecfg =int (_gagd );};if _gbc >=2{_gagd ,_gge =_dfg .Bitmap .GetByte (_dfb -_dfg .Bitmap .RowStride );if _gge !=nil {return _ec .Wrap (_gge ,_bfc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_fac =int (_gagd )<<4;};_gccc =(_ecfg >>3&0x7c)|(_fac >>3&0x380);for _cbab :=0;_cbab < _gbg ;_cbab =_ccb {var (_acee byte ;_cda int ;);_ccb =_cbab +8;if _gadg :=_fecf -_cbab ;_gadg > 8{_cda =8;}else {_cda =_gadg ;};if _gbc > 0{_ecfg <<=8;if _ccb < _fecf {_gagd ,_gge =_dfg .Bitmap .GetByte (_dfb +1);if _gge !=nil {return _ec .Wrap (_gge ,_bfc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_ecfg |=int (_gagd );};};if _gbc > 1{_fac <<=8;if _ccb < _fecf {_gagd ,_gge =_dfg .Bitmap .GetByte (_dfb -_dfg .Bitmap .RowStride +1);if _gge !=nil {return _ec .Wrap (_gge ,_bfc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_fac |=int (_gagd )<<4;};};for _faa :=0;_faa < _cda ;_faa ++{_bdde :=uint (10-_faa );if _dfg ._cfaa {_adgf =_dfg .overrideAtTemplate2 (_gccc ,_cbab +_faa ,_gbc ,int (_acee ),_faa );_dfg ._gaa .SetIndex (int32 (_adgf ));}else {_dfg ._gaa .SetIndex (int32 (_gccc ));};_aae ,_gge =_dfg ._ffb .DecodeBit (_dfg ._gaa );if _gge !=nil {return _ec .Wrap (_gge ,_bfc ,"");};_acee |=byte (_aae <<uint (7-_faa ));_gccc =((_gccc &0x1bd)<<1)|_aae |((_ecfg >>_bdde )&0x4)|((_fac >>_bdde )&0x80);};if _aege :=_dfg .Bitmap .SetByte (_bgcc ,_acee );_aege !=nil {return _ec .Wrap (_aege ,_bfc ,"");};_bgcc ++;_dfb ++;};return nil ;};func _effb (_ddd int )int {if _ddd ==0{return 0;};_ddd |=_ddd >>1;_ddd |=_ddd >>2;_ddd |=_ddd >>4;_ddd |=_ddd >>8;_ddd |=_ddd >>16;return (_ddd +1)>>1;};func (_bdaa *HalftoneRegion )renderPattern (_baad [][]int )(_ggea error ){var _gda ,_dabb int ;for _adf :=0;_adf < int (_bdaa .HGridHeight );_adf ++{for _bdce :=0;_bdce < int (_bdaa .HGridWidth );_bdce ++{_gda =_bdaa .computeX (_adf ,_bdce );_dabb =_bdaa .computeY (_adf ,_bdce );_bfbg :=_bdaa .Patterns [_baad [_adf ][_bdce ]];if _ggea =_cb .Blit (_bfbg ,_bdaa .HalftoneRegionBitmap ,_gda +int (_bdaa .HGridX ),_dabb +int (_bdaa .HGridY ),_bdaa .CombinationOperator );_ggea !=nil {return _ggea ;};};};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cb .Bitmap ,error );};func (_egg *HalftoneRegion )grayScaleDecoding (_aca int )([][]int ,error ){var (_gdea []int8 ;_cabf []int8 ;);if !_egg .IsMMREncoded {_gdea =make ([]int8 ,4);_cabf =make ([]int8 ,4);if _egg .HTemplate <=1{_gdea [0]=3;}else if _egg .HTemplate >=2{_gdea [0]=2;};_cabf [0]=-1;_gdea [1]=-3;_cabf [1]=-1;_gdea [2]=2;_cabf [2]=-2;_gdea [3]=-2;_cabf [3]=-2;};_bfee :=make ([]*_cb .Bitmap ,_aca );_baf :=NewGenericRegion (_egg ._ccbg );_baf .setParametersMMR (_egg .IsMMREncoded ,_egg .DataOffset ,_egg .DataLength ,_egg .HGridHeight ,_egg .HGridWidth ,_egg .HTemplate ,false ,_egg .HSkipEnabled ,_gdea ,_cabf );_egbd :=_aca -1;var _ddgb error ;_bfee [_egbd ],_ddgb =_baf .GetRegionBitmap ();if _ddgb !=nil {return nil ,_ddgb ;};for _egbd > 0{_egbd --;_baf .Bitmap =nil ;_bfee [_egbd ],_ddgb =_baf .GetRegionBitmap ();if _ddgb !=nil {return nil ,_ddgb ;};if _ddgb =_egg .combineGrayscalePlanes (_bfee ,_egbd );_ddgb !=nil {return nil ,_ddgb ;};};return _egg .computeGrayScalePlanes (_bfee ,_aca );};func (_ddg *GenericRegion )Encode (w _a .BinaryWriter )(_bbb int ,_bdec error ){const _eccb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _ddg .Bitmap ==nil {return 0,_ec .Error (_eccb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_ffdd ,_bdec :=_ddg .RegionSegment .Encode (w );if _bdec !=nil {return 0,_ec .Wrap (_bdec ,_eccb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_bbb +=_ffdd ;if _bdec =w .SkipBits (4);_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gadf int ;if _ddg .IsTPGDon {_gadf =1;};if _bdec =w .WriteBit (_gadf );_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gadf =0;if _bdec =w .WriteBit (int (_ddg .GBTemplate >>1)&0x01);_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _bdec =w .WriteBit (int (_ddg .GBTemplate )&0x01);_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ddg .UseMMR {_gadf =1;};if _bdec =w .WriteBit (_gadf );_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bbb ++;if _ffdd ,_bdec =_ddg .writeGBAtPixels (w );_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"");};_bbb +=_ffdd ;_afd :=_ee .New ();if _bdec =_afd .EncodeBitmap (_ddg .Bitmap ,_ddg .IsTPGDon );_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"");};_afd .Final ();var _aaa int64 ;if _aaa ,_bdec =_afd .WriteTo (w );_bdec !=nil {return _bbb ,_ec .Wrap (_bdec ,_eccb ,"");};_bbb +=int (_aaa );return _bbb ,nil ;};func (_gfbea *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fdgbb ,_fgdf :=_gfbea ._agdfd .ReadBit ();if _fgdf !=nil {return _fgdf ;};if _fdgbb ==1{_gfbea ._eabd =true ;};return nil ;};func (_gbae *SymbolDictionary )decodeNewSymbols (_bfbe ,_gcbd uint32 ,_fada *_cb .Bitmap ,_dcbg ,_egc int32 )error {if _gbae ._gbcf ==nil {_gbae ._gbcf =_fed (_gbae ._ffbe ,nil );if _gbae ._aabc ==nil {var _bdge error ;_gbae ._aabc ,_bdge =_ea .New (_gbae ._ffbe );if _bdge !=nil {return _bdge ;};};if _gbae ._fcagg ==nil {_gbae ._fcagg =_ea .NewStats (65536,1);};};_gbae ._gbcf .setParameters (_gbae ._fcagg ,_gbae ._aabc ,_gbae .SdrTemplate ,_bfbe ,_gcbd ,_fada ,_dcbg ,_egc ,false ,_gbae .SdrATX ,_gbae .SdrATY );return _gbae .addSymbol (_gbae ._gbcf );};func (_gfca *SymbolDictionary )setInSyms ()error {if _gfca .Header .RTSegments !=nil {return _gfca .retrieveImportSymbols ();};_gfca ._aaab =make ([]*_cb .Bitmap ,0);return nil ;};func (_fdccg *TextRegion )blit (_ebd *_cb .Bitmap ,_eedg int64 )error {if _fdccg .IsTransposed ==0&&(_fdccg .ReferenceCorner ==2||_fdccg .ReferenceCorner ==3){_fdccg ._dbgf +=int64 (_ebd .Width -1);}else if _fdccg .IsTransposed ==1&&(_fdccg .ReferenceCorner ==0||_fdccg .ReferenceCorner ==2){_fdccg ._dbgf +=int64 (_ebd .Height -1);};_gcfe :=_fdccg ._dbgf ;if _fdccg .IsTransposed ==1{_gcfe ,_eedg =_eedg ,_gcfe ;};switch _fdccg .ReferenceCorner {case 0:_eedg -=int64 (_ebd .Height -1);case 2:_eedg -=int64 (_ebd .Height -1);_gcfe -=int64 (_ebd .Width -1);case 3:_gcfe -=int64 (_ebd .Width -1);};_aecb :=_cb .Blit (_ebd ,_fdccg .RegionBitmap ,int (_gcfe ),int (_eedg ),_fdccg .CombinationOperator );if _aecb !=nil {return _aecb ;};if _fdccg .IsTransposed ==0&&(_fdccg .ReferenceCorner ==0||_fdccg .ReferenceCorner ==1){_fdccg ._dbgf +=int64 (_ebd .Width -1);};if _fdccg .IsTransposed ==1&&(_fdccg .ReferenceCorner ==1||_fdccg .ReferenceCorner ==3){_fdccg ._dbgf +=int64 (_ebd .Height -1);};return nil ;};func (_adbe *PatternDictionary )computeSegmentDataStructure ()error {_adbe .DataOffset =_adbe ._cdeg .StreamPosition ();_adbe .DataHeaderLength =_adbe .DataOffset -_adbe .DataHeaderOffset ;_adbe .DataLength =int64 (_adbe ._cdeg .Length ())-_adbe .DataHeaderLength ;return nil ;};func (_fec *GenericRefinementRegion )overrideAtTemplate0 (_bbg ,_dge ,_ddb ,_efcg ,_ada int )int {if _fec ._df [0]{_bbg &=0xfff7;if _fec .GrAtY [0]==0&&int (_fec .GrAtX [0])>=-_ada {_bbg |=(_efcg >>uint (7-(_ada +int (_fec .GrAtX [0])))&0x1)<<3;}else {_bbg |=_fec .getPixel (_fec .RegionBitmap ,_dge +int (_fec .GrAtX [0]),_ddb +int (_fec .GrAtY [0]))<<3;};};if _fec ._df [1]{_bbg &=0xefff;if _fec .GrAtY [1]==0&&int (_fec .GrAtX [1])>=-_ada {_bbg |=(_efcg >>uint (7-(_ada +int (_fec .GrAtX [1])))&0x1)<<12;}else {_bbg |=_fec .getPixel (_fec .ReferenceBitmap ,_dge +int (_fec .GrAtX [1]),_ddb +int (_fec .GrAtY [1]));};};return _bbg ;};func (_dcee *SymbolDictionary )setRefinementAtPixels ()error {if !_dcee .UseRefinementAggregation ||_dcee .SdrTemplate !=0{return nil ;};if _eacb :=_dcee .readRefinementAtPixels (2);_eacb !=nil {return _eacb ;};return nil ;};func NewGenericRegion (r _a .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_eae :r };};func (_decd *PageInformationSegment )readWidthAndHeight ()error {_defdg ,_ggdc :=_decd ._agdfd .ReadBits (32);if _ggdc !=nil {return _ggdc ;};_decd .PageBMWidth =int (_defdg &_c .MaxInt32 );_defdg ,_ggdc =_decd ._agdfd .ReadBits (32);if _ggdc !=nil {return _ggdc ;};_decd .PageBMHeight =int (_defdg &_c .MaxInt32 );return nil ;};func (_aefg *PatternDictionary )readGrayMax ()error {_egag ,_dfde :=_aefg ._cdeg .ReadBits (32);if _dfde !=nil {return _dfde ;};_aefg .GrayMax =uint32 (_egag &_c .MaxUint32 );return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _a .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_dfag *PageInformationSegment )readDefaultPixelValue ()error {_geea ,_gdaa :=_dfag ._agdfd .ReadBit ();if _gdaa !=nil {return _gdaa ;};_dfag ._gbgf =uint8 (_geea &0xf);return nil ;};func (_aedb *SymbolDictionary )encodeFlags (_dcea _a .BinaryWriter )(_abff int ,_bcdc error ){const _ddgd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bcdc =_dcea .SkipBits (3);_bcdc !=nil {return 0,_ec .Wrap (_bcdc ,_ddgd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _bged int ;if _aedb .SdrTemplate > 0{_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bged =0;if _aedb .SdTemplate > 1{_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bged =0;if _aedb .SdTemplate ==1||_aedb .SdTemplate ==3{_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_bged =0;if _aedb ._dbeb {_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_bged =0;if _aedb ._fcag {_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_bged =0;if _aedb .SdHuffAggInstanceSelection {_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_bged =int (_aedb .SdHuffBMSizeSelection );if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_bged =0;if _aedb .SdHuffDecodeWidthSelection > 1{_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_bged =0;switch _aedb .SdHuffDecodeWidthSelection {case 1,3:_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_bged =0;if _aedb .SdHuffDecodeHeightSelection > 1{_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bged =0;switch _aedb .SdHuffDecodeHeightSelection {case 1,3:_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_bged =0;if _aedb .UseRefinementAggregation {_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_bged =0;if _aedb .IsHuffmanEncoded {_bged =1;};if _bcdc =_dcea .WriteBit (_bged );_bcdc !=nil {return _abff ,_ec .Wrap (_bcdc ,_ddgd ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_fdbg *GenericRegion )setParameters (_bcb bool ,_fgff ,_ffga int64 ,_eeea ,_gac uint32 ){_fdbg .IsMMREncoded =_bcb ;_fdbg .DataOffset =_fgff ;_fdbg .DataLength =_ffga ;_fdbg .RegionSegment .BitmapHeight =_eeea ;_fdbg .RegionSegment .BitmapWidth =_gac ;_fdbg ._afgb =nil ;_fdbg .Bitmap =nil ;};func (_bcdg *Header )readHeaderLength (_baba _a .StreamReader ,_ffec int64 ){_bcdg .HeaderLength =_baba .StreamPosition ()-_ffec ;};func (_bdff *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bdff ._eabd };func (_gbe *GenericRefinementRegion )decodeOptimized (_ef ,_ece ,_bae ,_eaf ,_ga ,_eegd ,_bab int )error {var (_dc error ;_dee int ;_dbd int ;);_cga :=_ef -int (_gbe .ReferenceDY );if _efb :=int (-_gbe .ReferenceDX );_efb > 0{_dee =_efb ;};_fe :=_gbe .ReferenceBitmap .GetByteIndex (_dee ,_cga );if _gbe .ReferenceDX > 0{_dbd =int (_gbe .ReferenceDX );};_ded :=_gbe .RegionBitmap .GetByteIndex (_dbd ,_ef );switch _gbe .TemplateID {case 0:_dc =_gbe .decodeTemplate (_ef ,_ece ,_bae ,_eaf ,_ga ,_eegd ,_bab ,_ded ,_cga ,_fe ,_gbe ._gb );case 1:_dc =_gbe .decodeTemplate (_ef ,_ece ,_bae ,_eaf ,_ga ,_eegd ,_bab ,_ded ,_cga ,_fe ,_gbe ._de );};return _dc ;};func (_aed *PageInformationSegment )Encode (w _a .BinaryWriter )(_ecb int ,_gbbb error ){const _deg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_febe :=make ([]byte ,4);_d .BigEndian .PutUint32 (_febe ,uint32 (_aed .PageBMWidth ));_ecb ,_gbbb =w .Write (_febe );if _gbbb !=nil {return _ecb ,_ec .Wrap (_gbbb ,_deg ,"\u0077\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_febe ,uint32 (_aed .PageBMHeight ));var _faac int ;_faac ,_gbbb =w .Write (_febe );if _gbbb !=nil {return _faac +_ecb ,_ec .Wrap (_gbbb ,_deg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ecb +=_faac ;_d .BigEndian .PutUint32 (_febe ,uint32 (_aed .ResolutionX ));_faac ,_gbbb =w .Write (_febe );if _gbbb !=nil {return _faac +_ecb ,_ec .Wrap (_gbbb ,_deg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ecb +=_faac ;_d .BigEndian .PutUint32 (_febe ,uint32 (_aed .ResolutionY ));if _faac ,_gbbb =w .Write (_febe );_gbbb !=nil {return _faac +_ecb ,_ec .Wrap (_gbbb ,_deg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ecb +=_faac ;if _gbbb =_aed .encodeFlags (w );_gbbb !=nil {return _ecb ,_ec .Wrap (_gbbb ,_deg ,"");};_ecb ++;if _faac ,_gbbb =_aed .encodeStripingInformation (w );_gbbb !=nil {return _ecb ,_ec .Wrap (_gbbb ,_deg ,"");};_ecb +=_faac ;return _ecb ,nil ;};func (_gabe *TextRegion )decodeDfs ()(int64 ,error ){if _gabe .IsHuffmanEncoded {if _gabe .SbHuffFS ==3{if _gabe ._acbcb ==nil {var _cgad error ;_gabe ._acbcb ,_cgad =_gabe .getUserTable (0);if _cgad !=nil {return 0,_cgad ;};};return _gabe ._acbcb .Decode (_gabe ._edbf );};_gcebg ,_dacf :=_bb .GetStandardTable (6+int (_gabe .SbHuffFS ));if _dacf !=nil {return 0,_dacf ;};return _gcebg .Decode (_gabe ._edbf );};_ebea ,_dfbg :=_gabe ._ccec .DecodeInt (_gabe ._adgea );if _dfbg !=nil {return 0,_dfbg ;};return int64 (_ebea ),nil ;};func (_gbeg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_adge :=range _gbeg .Header .RTSegments {if _adge .Type ==0{_abce ,_gbeb :=_adge .GetSegmentData ();if _gbeb !=nil {return _gbeb ;};_dadg ,_ccbgb :=_abce .(*SymbolDictionary );if !_ccbgb {return _da .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_abce );};_gagc ,_gbeb :=_dadg .GetDictionary ();if _gbeb !=nil {return _da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_adge .SegmentNumber ,_gbeb .Error ());};_gbeg ._aaab =append (_gbeg ._aaab ,_gagc ...);_gbeg ._gafd +=_dadg .NumberOfExportedSymbols ;};};return nil ;};func (_dbc *GenericRegion )decodeSLTP ()(int ,error ){switch _dbc .GBTemplate {case 0:_dbc ._gaa .SetIndex (0x9B25);case 1:_dbc ._gaa .SetIndex (0x795);case 2:_dbc ._gaa .SetIndex (0xE5);case 3:_dbc ._gaa .SetIndex (0x195);};return _dbc ._ffb .DecodeBit (_dbc ._gaa );};func (_ebad *PageInformationSegment )DefaultPixelValue ()uint8 {return _ebad ._gbgf };func (_aedea *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _eeggc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _aedea .SbHuffRSize ==0{_ecfe ,_cdcce :=_bb .GetStandardTable (1);if _cdcce !=nil {return 0,_ec .Wrap (_cdcce ,_eeggc ,"");};return _ecfe .Decode (_aedea ._edbf );};if _aedea ._agdb ==nil {var (_dagda int ;_bcdca error ;);if _aedea .SbHuffFS ==3{_dagda ++;};if _aedea .SbHuffDS ==3{_dagda ++;};if _aedea .SbHuffDT ==3{_dagda ++;};if _aedea .SbHuffRDWidth ==3{_dagda ++;};if _aedea .SbHuffRDHeight ==3{_dagda ++;};if _aedea .SbHuffRDX ==3{_dagda ++;};if _aedea .SbHuffRDY ==3{_dagda ++;};_aedea ._agdb ,_bcdca =_aedea .getUserTable (_dagda );if _bcdca !=nil {return 0,_ec .Wrap (_bcdca ,_eeggc ,"");};};_dgeb ,_afdb :=_aedea ._agdb .Decode (_aedea ._edbf );if _afdb !=nil {return 0,_ec .Wrap (_afdb ,_eeggc ,"");};return _dgeb ,nil ;};func (_aadag *SymbolDictionary )String ()string {_degf :=&_ba .Builder {};_degf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_degf .WriteString (_da .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_aadag .SdrTemplate ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_aadag .SdTemplate ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_aadag ._dbeb ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_aadag ._fcag ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_aadag .SdHuffAggInstanceSelection ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_aadag .SdHuffBMSizeSelection ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_aadag .SdHuffDecodeWidthSelection ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_aadag .SdHuffDecodeHeightSelection ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_aadag .UseRefinementAggregation ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_aadag .IsHuffmanEncoded ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_aadag .SdATX ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_aadag .SdATY ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_aadag .SdrATX ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_aadag .SdrATY ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_aadag .NumberOfExportedSymbols ));_degf .WriteString (_da .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_aadag .NumberOfNewSymbols ));_degf .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_aadag ._gafd ));_degf .WriteString (_da .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_aadag ._eedd ));return _degf .String ();};func (_cceg *PatternDictionary )checkInput ()error {if _cceg .HdpHeight < 1||_cceg .HdpWidth < 1{return _be .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _cceg .IsMMREncoded {if _cceg .HDTemplate !=0{_af .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_eagc *PatternDictionary )readPatternWidthAndHeight ()error {_ccbe ,_fgea :=_eagc ._cdeg .ReadByte ();if _fgea !=nil {return _fgea ;};_eagc .HdpWidth =_ccbe ;_ccbe ,_fgea =_eagc ._cdeg .ReadByte ();if _fgea !=nil {return _fgea ;};_eagc .HdpHeight =_ccbe ;return nil ;};func (_ac *GenericRefinementRegion )decodeTemplate (_bea ,_acd ,_bagf ,_gcd ,_adg ,_gfb ,_ecea ,_fgd ,_efc ,_dagc int ,_aac templater )(_adb error ){var (_ffg ,_agd ,_ecc ,_gggg ,_abfa int16 ;_cdc ,_dcd ,_bca ,_fee int ;_bcg byte ;);if _efc >=1&&(_efc -1)< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -_gcd );if _adb !=nil {return ;};_cdc =int (_bcg );};if _efc >=0&&(_efc )< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc );if _adb !=nil {return ;};_dcd =int (_bcg );};if _efc >=-1&&(_efc +1)< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc +_gcd );if _adb !=nil {return ;};_bca =int (_bcg );};_dagc ++;if _bea >=1{_bcg ,_adb =_ac .RegionBitmap .GetByte (_fgd -_bagf );if _adb !=nil {return ;};_fee =int (_bcg );};_fgd ++;_abb :=_ac .ReferenceDX %8;_bec :=6+_abb ;_fcd :=_dagc %_gcd ;if _bec >=0{if _bec < 8{_ffg =int16 (_cdc >>uint (_bec ))&0x07;};if _bec < 8{_agd =int16 (_dcd >>uint (_bec ))&0x07;};if _bec < 8{_ecc =int16 (_bca >>uint (_bec ))&0x07;};if _bec ==6&&_fcd > 1{if _efc >=1&&(_efc -1)< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -_gcd -2);if _adb !=nil {return _adb ;};_ffg |=int16 (_bcg <<2)&0x04;};if _efc >=0&&_efc < _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -2);if _adb !=nil {return _adb ;};_agd |=int16 (_bcg <<2)&0x04;};if _efc >=-1&&_efc +1< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc +_gcd -2);if _adb !=nil {return _adb ;};_ecc |=int16 (_bcg <<2)&0x04;};};if _bec ==0{_cdc =0;_dcd =0;_bca =0;if _fcd < _gcd -1{if _efc >=1&&_efc -1< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -_gcd );if _adb !=nil {return _adb ;};_cdc =int (_bcg );};if _efc >=0&&_efc < _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc );if _adb !=nil {return _adb ;};_dcd =int (_bcg );};if _efc >=-1&&_efc +1< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc +_gcd );if _adb !=nil {return _adb ;};_bca =int (_bcg );};};_dagc ++;};}else {_ffg =int16 (_cdc <<1)&0x07;_agd =int16 (_dcd <<1)&0x07;_ecc =int16 (_bca <<1)&0x07;_cdc =0;_dcd =0;_bca =0;if _fcd < _gcd -1{if _efc >=1&&_efc -1< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -_gcd );if _adb !=nil {return _adb ;};_cdc =int (_bcg );};if _efc >=0&&_efc < _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc );if _adb !=nil {return _adb ;};_dcd =int (_bcg );};if _efc >=-1&&_efc +1< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc +_gcd );if _adb !=nil {return _adb ;};_bca =int (_bcg );};_dagc ++;};_ffg |=int16 ((_cdc >>7)&0x07);_agd |=int16 ((_dcd >>7)&0x07);_ecc |=int16 ((_bca >>7)&0x07);};_gggg =int16 (_fee >>6);_abfa =0;_cdbd :=(2-_abb )%8;_cdc <<=uint (_cdbd );_dcd <<=uint (_cdbd );_bca <<=uint (_cdbd );_fee <<=2;var _fae int ;for _deb :=0;_deb < _acd ;_deb ++{_egf :=_deb &0x07;_ccc :=_aac .form (_ffg ,_agd ,_ecc ,_gggg ,_abfa );if _ac ._ae {_bcg ,_adb =_ac .RegionBitmap .GetByte (_ac .RegionBitmap .GetByteIndex (_deb ,_bea ));if _adb !=nil {return _adb ;};_ac ._f .SetIndex (int32 (_ac .overrideAtTemplate0 (int (_ccc ),_deb ,_bea ,int (_bcg ),_egf )));}else {_ac ._f .SetIndex (int32 (_ccc ));};_fae ,_adb =_ac ._ecg .DecodeBit (_ac ._f );if _adb !=nil {return _adb ;};if _adb =_ac .RegionBitmap .SetPixel (_deb ,_bea ,byte (_fae ));_adb !=nil {return _adb ;};_ffg =((_ffg <<1)|0x01&int16 (_cdc >>7))&0x07;_agd =((_agd <<1)|0x01&int16 (_dcd >>7))&0x07;_ecc =((_ecc <<1)|0x01&int16 (_bca >>7))&0x07;_gggg =((_gggg <<1)|0x01&int16 (_fee >>7))&0x07;_abfa =int16 (_fae );if (_deb -int (_ac .ReferenceDX ))%8==5{_cdc =0;_dcd =0;_bca =0;if ((_deb -int (_ac .ReferenceDX ))/8)+1< _ac .ReferenceBitmap .RowStride {if _efc >=1&&(_efc -1)< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc -_gcd );if _adb !=nil {return _adb ;};_cdc =int (_bcg );};if _efc >=0&&_efc < _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc );if _adb !=nil {return _adb ;};_dcd =int (_bcg );};if _efc >=-1&&(_efc +1)< _ac .ReferenceBitmap .Height {_bcg ,_adb =_ac .ReferenceBitmap .GetByte (_dagc +_gcd );if _adb !=nil {return _adb ;};_bca =int (_bcg );};};_dagc ++;}else {_cdc <<=1;_dcd <<=1;_bca <<=1;};if _egf ==5&&_bea >=1{if ((_deb >>3)+1)>=_ac .RegionBitmap .RowStride {_fee =0;}else {_bcg ,_adb =_ac .RegionBitmap .GetByte (_fgd -_bagf );if _adb !=nil {return _adb ;};_fee =int (_bcg );};_fgd ++;}else {_fee <<=1;};};return nil ;};func (_edb *GenericRegion )updateOverrideFlags ()error {const _fafc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _edb .GBAtX ==nil ||_edb .GBAtY ==nil {return nil ;};if len (_edb .GBAtX )!=len (_edb .GBAtY ){return _ec .Errorf (_fafc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_edb .GBAtX ),len (_edb .GBAtY ));};_edb .GBAtOverride =make ([]bool ,len (_edb .GBAtX ));switch _edb .GBTemplate {case 0:if !_edb .UseExtTemplates {if _edb .GBAtX [0]!=3||_edb .GBAtY [0]!=-1{_edb .setOverrideFlag (0);};if _edb .GBAtX [1]!=-3||_edb .GBAtY [1]!=-1{_edb .setOverrideFlag (1);};if _edb .GBAtX [2]!=2||_edb .GBAtY [2]!=-2{_edb .setOverrideFlag (2);};if _edb .GBAtX [3]!=-2||_edb .GBAtY [3]!=-2{_edb .setOverrideFlag (3);};}else {if _edb .GBAtX [0]!=-2||_edb .GBAtY [0]!=0{_edb .setOverrideFlag (0);};if _edb .GBAtX [1]!=0||_edb .GBAtY [1]!=-2{_edb .setOverrideFlag (1);};if _edb .GBAtX [2]!=-2||_edb .GBAtY [2]!=-1{_edb .setOverrideFlag (2);};if _edb .GBAtX [3]!=-1||_edb .GBAtY [3]!=-2{_edb .setOverrideFlag (3);};if _edb .GBAtX [4]!=1||_edb .GBAtY [4]!=-2{_edb .setOverrideFlag (4);};if _edb .GBAtX [5]!=2||_edb .GBAtY [5]!=-1{_edb .setOverrideFlag (5);};if _edb .GBAtX [6]!=-3||_edb .GBAtY [6]!=0{_edb .setOverrideFlag (6);};if _edb .GBAtX [7]!=-4||_edb .GBAtY [7]!=0{_edb .setOverrideFlag (7);};if _edb .GBAtX [8]!=2||_edb .GBAtY [8]!=-2{_edb .setOverrideFlag (8);};if _edb .GBAtX [9]!=3||_edb .GBAtY [9]!=-1{_edb .setOverrideFlag (9);};if _edb .GBAtX [10]!=-2||_edb .GBAtY [10]!=-2{_edb .setOverrideFlag (10);};if _edb .GBAtX [11]!=-3||_edb .GBAtY [11]!=-1{_edb .setOverrideFlag (11);};};case 1:if _edb .GBAtX [0]!=3||_edb .GBAtY [0]!=-1{_edb .setOverrideFlag (0);};case 2:if _edb .GBAtX [0]!=2||_edb .GBAtY [0]!=-1{_edb .setOverrideFlag (0);};case 3:if _edb .GBAtX [0]!=2||_edb .GBAtY [0]!=-1{_edb .setOverrideFlag (0);};};return nil ;};func (_bga *Header )writeSegmentPageAssociation (_aabg _a .BinaryWriter )(_dabbc int ,_dbe error ){const _egbg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _bga .pageSize ()!=4{if _dbe =_aabg .WriteByte (byte (_bga .PageAssociation ));_dbe !=nil {return 0,_ec .Wrap (_dbe ,_egbg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gdf :=make ([]byte ,4);_d .BigEndian .PutUint32 (_gdf ,uint32 (_bga .PageAssociation ));if _dabbc ,_dbe =_aabg .Write (_gdf );_dbe !=nil {return 0,_ec .Wrap (_dbe ,_egbg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _dabbc ,nil ;};func (_cee *PatternDictionary )parseHeader ()error {_af .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_af .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_bgca :=_cee ._cdeg .ReadBits (5);if _bgca !=nil {return _bgca ;};if _bgca =_cee .readTemplate ();_bgca !=nil {return _bgca ;};if _bgca =_cee .readIsMMREncoded ();_bgca !=nil {return _bgca ;};if _bgca =_cee .readPatternWidthAndHeight ();_bgca !=nil {return _bgca ;};if _bgca =_cee .readGrayMax ();_bgca !=nil {return _bgca ;};if _bgca =_cee .computeSegmentDataStructure ();_bgca !=nil {return _bgca ;};return _cee .checkInput ();};type Segmenter interface{Init (_ddgf *Header ,_bcec _a .StreamReader )error ;};func (_gcaf *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gcaf ._ebca ==nil {var (_gefb int ;_ddef error ;);if _gcaf .SdHuffDecodeHeightSelection ==3{_gefb ++;};if _gcaf .SdHuffDecodeWidthSelection ==3{_gefb ++;};_gcaf ._ebca ,_ddef =_gcaf .getUserTable (_gefb );if _ddef !=nil {return 0,_ddef ;};};return _gcaf ._ebca .Decode (_gcaf ._ffbe );};func (_cffda *Header )subInputReader ()(_a .StreamReader ,error ){return _a .NewSubstreamReader (_cffda .Reader ,_cffda .SegmentDataStartOffset ,_cffda .SegmentDataLength );};func (_dacc *TextRegion )createRegionBitmap ()error {_dacc .RegionBitmap =_cb .New (int (_dacc .RegionInfo .BitmapWidth ),int (_dacc .RegionInfo .BitmapHeight ));if _dacc .DefaultPixel !=0{_dacc .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cbag *Header )writeSegmentDataLength (_eabee _a .BinaryWriter )(_aaba int ,_fdcf error ){_adcg :=make ([]byte ,4);_d .BigEndian .PutUint32 (_adcg ,uint32 (_cbag .SegmentDataLength ));if _aaba ,_fdcf =_eabee .Write (_adcg );_fdcf !=nil {return 0,_ec .Wrap (_fdcf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _aaba ,nil ;};func (_dafd *PageInformationSegment )encodeStripingInformation (_cfgd _a .BinaryWriter )(_gbgc int ,_geef error ){const _eecf ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_dafd .IsStripe {if _gbgc ,_geef =_cfgd .Write ([]byte {0x00,0x00});_geef !=nil {return 0,_ec .Wrap (_geef ,_eecf ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gbgc ,nil ;};_cdg :=make ([]byte ,2);_d .BigEndian .PutUint16 (_cdg ,_dafd .MaxStripeSize |1<<15);if _gbgc ,_geef =_cfgd .Write (_cdg );_geef !=nil {return 0,_ec .Wrapf (_geef ,_eecf ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_dafd .MaxStripeSize );};return _gbgc ,nil ;};func (_eeac *HalftoneRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _eeac .HalftoneRegionBitmap !=nil {return _eeac .HalftoneRegionBitmap ,nil ;};var _facf error ;_eeac .HalftoneRegionBitmap =_cb .New (int (_eeac .RegionSegment .BitmapWidth ),int (_eeac .RegionSegment .BitmapHeight ));if _eeac .Patterns ==nil ||len (_eeac .Patterns )==0{_eeac .Patterns ,_facf =_eeac .GetPatterns ();if _facf !=nil {return nil ,_facf ;};};if _eeac .HDefaultPixel ==1{_eeac .HalftoneRegionBitmap .SetDefaultPixel ();};_bdc :=_c .Ceil (_c .Log (float64 (len (_eeac .Patterns )))/_c .Log (2));_bedf :=int (_bdc );var _eegf [][]int ;_eegf ,_facf =_eeac .grayScaleDecoding (_bedf );if _facf !=nil {return nil ,_facf ;};if _facf =_eeac .renderPattern (_eegf );_facf !=nil {return nil ,_facf ;};return _eeac .HalftoneRegionBitmap ,nil ;};type TextRegion struct{_edbf _a .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dbgf int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cb .Bitmap ;Symbols []*_cb .Bitmap ;_ccec *_ea .Decoder ;_fdbee *GenericRefinementRegion ;_cege *_ea .DecoderStats ;_adgea *_ea .DecoderStats ;_cgc *_ea .DecoderStats ;_eefb *_ea .DecoderStats ;_fdcc *_ea .DecoderStats ;_cbad *_ea .DecoderStats ;_gbccb *_ea .DecoderStats ;_fabe *_ea .DecoderStats ;_fgcg *_ea .DecoderStats ;_cecc *_ea .DecoderStats ;_eeeg *_ea .DecoderStats ;_dgec int8 ;_bcad *_bb .FixedSizeTable ;Header *Header ;_acbcb _bb .Tabler ;_gcgb _bb .Tabler ;_fdgbd _bb .Tabler ;_bbec _bb .Tabler ;_fbac _bb .Tabler ;_bgcag _bb .Tabler ;_agbf _bb .Tabler ;_agdb _bb .Tabler ;_bedcg ,_fagb map[int ]int ;_bbf []int ;_edaab *_cb .Points ;_dcgd *_cb .Bitmaps ;_eeb *_cf .IntSlice ;_befg ,_eggga int ;_gdgd *_cb .Boxes ;};func (_gagce *SymbolDictionary )setCodingStatistics ()error {if _gagce ._geff ==nil {_gagce ._geff =_ea .NewStats (512,1);};if _gagce ._egdg ==nil {_gagce ._egdg =_ea .NewStats (512,1);};if _gagce ._faaf ==nil {_gagce ._faaf =_ea .NewStats (512,1);};if _gagce ._fbdc ==nil {_gagce ._fbdc =_ea .NewStats (512,1);};if _gagce ._daa ==nil {_gagce ._daa =_ea .NewStats (512,1);};if _gagce .UseRefinementAggregation &&_gagce ._ggcdd ==nil {_gagce ._ggcdd =_ea .NewStats (1<<uint (_gagce ._fdbb ),1);_gagce ._ggcff =_ea .NewStats (512,1);_gagce ._edcc =_ea .NewStats (512,1);};if _gagce ._fcagg ==nil {_gagce ._fcagg =_ea .NewStats (65536,1);};if _gagce ._aabc ==nil {var _dgcd error ;_gagce ._aabc ,_dgcd =_ea .New (_gagce ._ffbe );if _dgcd !=nil {return _dgcd ;};};return nil ;};func (_bffb *PageInformationSegment )parseHeader ()(_fbe error ){_af .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _dbaa ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _fbe !=nil {_dbaa +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_fbe .Error ();}else {_dbaa +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_af .Log .Trace (_dbaa );}();if _fbe =_bffb .readWidthAndHeight ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readResolution ();_fbe !=nil {return _fbe ;};_ ,_fbe =_bffb ._agdfd .ReadBit ();if _fbe !=nil {return _fbe ;};if _fbe =_bffb .readCombinationOperatorOverrideAllowed ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readRequiresAuxiliaryBuffer ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readCombinationOperator ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readDefaultPixelValue ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readContainsRefinement ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readIsLossless ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readIsStriped ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .readMaxStripeSize ();_fbe !=nil {return _fbe ;};if _fbe =_bffb .checkInput ();_fbe !=nil {return _fbe ;};_af .Log .Trace ("\u0025\u0073",_bffb );return nil ;};func (_ebcd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_egbf ,_bdba uint32 )error {if _ebcd ._cfb ==nil {_ebcd ._cfb =NewGenericRegion (_ebcd ._ffbe );};_ebcd ._cfb .setParametersWithAt (false ,byte (_ebcd .SdTemplate ),false ,false ,_ebcd .SdATX ,_ebcd .SdATY ,_egbf ,_bdba ,_ebcd ._fcagg ,_ebcd ._aabc );return _ebcd .addSymbol (_ebcd ._cfb );};func (_dccb *SymbolDictionary )Encode (w _a .BinaryWriter )(_ddeag int ,_ccfe error ){const _fefb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _dccb ==nil {return 0,_ec .Error (_fefb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _ddeag ,_ccfe =_dccb .encodeFlags (w );_ccfe !=nil {return _ddeag ,_ec .Wrap (_ccfe ,_fefb ,"");};_accd ,_ccfe :=_dccb .encodeATFlags (w );if _ccfe !=nil {return _ddeag ,_ec .Wrap (_ccfe ,_fefb ,"");};_ddeag +=_accd ;if _accd ,_ccfe =_dccb .encodeRefinementATFlags (w );_ccfe !=nil {return _ddeag ,_ec .Wrap (_ccfe ,_fefb ,"");};_ddeag +=_accd ;if _accd ,_ccfe =_dccb .encodeNumSyms (w );_ccfe !=nil {return _ddeag ,_ec .Wrap (_ccfe ,_fefb ,"");};_ddeag +=_accd ;if _accd ,_ccfe =_dccb .encodeSymbols (w );_ccfe !=nil {return _ddeag ,_ec .Wrap (_ccfe ,_fefb ,"");};_ddeag +=_accd ;return _ddeag ,nil ;};func (_fgad *TableSegment )HtPS ()int32 {return _fgad ._bded };func (_bedg *template0 )setIndex (_cea *_ea .DecoderStats ){_cea .SetIndex (0x100)};func (_afbd *RegionSegment )String ()string {_badd :=&_ba .Builder {};_badd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_badd .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_afbd .BitmapWidth ,_afbd .BitmapHeight ));_badd .WriteString (_da .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_afbd .XLocation ,_afbd .YLocation ));_badd .WriteString (_da .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_afbd .CombinaionOperator ));return _badd .String ();};func (_abaa *PageInformationSegment )Size ()int {return 19};func (_cad *GenericRefinementRegion )getPixel (_egfg *_cb .Bitmap ,_gce ,_ceb int )int {if _gce < 0||_gce >=_egfg .Width {return 0;};if _ceb < 0||_ceb >=_egfg .Height {return 0;};if _egfg .GetPixel (_gce ,_ceb ){return 1;};return 0;};func (_ab *GenericRefinementRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){var _bcd error ;_af .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _bcd !=nil {_af .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bcd );}else {_af .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ab .RegionBitmap !=nil {return _ab .RegionBitmap ,nil ;};_abf :=0;if _ab .ReferenceBitmap ==nil {_ab .ReferenceBitmap ,_bcd =_ab .getGrReference ();if _bcd !=nil {return nil ,_bcd ;};};if _ab ._ecg ==nil {_ab ._ecg ,_bcd =_ea .New (_ab ._gbb );if _bcd !=nil {return nil ,_bcd ;};};if _ab ._f ==nil {_ab ._f =_ea .NewStats (8192,1);};_ab .RegionBitmap =_cb .New (int (_ab .RegionInfo .BitmapWidth ),int (_ab .RegionInfo .BitmapHeight ));if _ab .TemplateID ==0{if _bcd =_ab .updateOverride ();_bcd !=nil {return nil ,_bcd ;};};_cgf :=(_ab .RegionBitmap .Width +7)&-8;var _bbc int ;if _ab .IsTPGROn {_bbc =int (-_ab .ReferenceDY )*_ab .ReferenceBitmap .RowStride ;};_beg :=_bbc +1;for _gbf :=0;_gbf < _ab .RegionBitmap .Height ;_gbf ++{if _ab .IsTPGROn {_bd ,_ce :=_ab .decodeSLTP ();if _ce !=nil {return nil ,_ce ;};_abf ^=_bd ;};if _abf ==0{_bcd =_ab .decodeOptimized (_gbf ,_ab .RegionBitmap .Width ,_ab .RegionBitmap .RowStride ,_ab .ReferenceBitmap .RowStride ,_cgf ,_bbc ,_beg );if _bcd !=nil {return nil ,_bcd ;};}else {_bcd =_ab .decodeTypicalPredictedLine (_gbf ,_ab .RegionBitmap .Width ,_ab .RegionBitmap .RowStride ,_ab .ReferenceBitmap .RowStride ,_cgf ,_bbc );if _bcd !=nil {return nil ,_bcd ;};};};return _ab .RegionBitmap ,nil ;};func (_bbdb *TextRegion )decodeRdx ()(int64 ,error ){const _gfba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _bbdb .IsHuffmanEncoded {if _bbdb .SbHuffRDX ==3{if _bbdb ._bgcag ==nil {var (_abffe int ;_adga error ;);if _bbdb .SbHuffFS ==3{_abffe ++;};if _bbdb .SbHuffDS ==3{_abffe ++;};if _bbdb .SbHuffDT ==3{_abffe ++;};if _bbdb .SbHuffRDWidth ==3{_abffe ++;};if _bbdb .SbHuffRDHeight ==3{_abffe ++;};_bbdb ._bgcag ,_adga =_bbdb .getUserTable (_abffe );if _adga !=nil {return 0,_ec .Wrap (_adga ,_gfba ,"");};};return _bbdb ._bgcag .Decode (_bbdb ._edbf );};_gbbgd ,_bccc :=_bb .GetStandardTable (14+int (_bbdb .SbHuffRDX ));if _bccc !=nil {return 0,_ec .Wrap (_bccc ,_gfba ,"");};return _gbbgd .Decode (_bbdb ._edbf );};_afa ,_gadc :=_bbdb ._ccec .DecodeInt (_bbdb ._fgcg );if _gadc !=nil {return 0,_ec .Wrap (_gadc ,_gfba ,"");};return int64 (_afa ),nil ;};func (_becd *GenericRegion )Size ()int {return _becd .RegionSegment .Size ()+1+2*len (_becd .GBAtX )};func (_ecdc *TextRegion )decodeID ()(int64 ,error ){if _ecdc .IsHuffmanEncoded {if _ecdc ._bcad ==nil {_edbe ,_cacg :=_ecdc ._edbf .ReadBits (byte (_ecdc ._dgec ));return int64 (_edbe ),_cacg ;};return _ecdc ._bcad .Decode (_ecdc ._edbf );};return _ecdc ._ccec .DecodeIAID (uint64 (_ecdc ._dgec ),_ecdc ._fabe );};type EncodeInitializer interface{InitEncode ();};func (_gcg *GenericRefinementRegion )readAtPixels ()error {_gcg .GrAtX =make ([]int8 ,2);_gcg .GrAtY =make ([]int8 ,2);_ebe ,_ffa :=_gcg ._gbb .ReadByte ();if _ffa !=nil {return _ffa ;};_gcg .GrAtX [0]=int8 (_ebe );_ebe ,_ffa =_gcg ._gbb .ReadByte ();if _ffa !=nil {return _ffa ;};_gcg .GrAtY [0]=int8 (_ebe );_ebe ,_ffa =_gcg ._gbb .ReadByte ();if _ffa !=nil {return _ffa ;};_gcg .GrAtX [1]=int8 (_ebe );_ebe ,_ffa =_gcg ._gbb .ReadByte ();if _ffa !=nil {return _ffa ;};_gcg .GrAtY [1]=int8 (_ebe );return nil ;};func (_bacab *Header )readNumberOfReferredToSegments (_abba _a .StreamReader )(uint64 ,error ){const _fbag ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_gdg ,_fdfe :=_abba .ReadBits (3);if _fdfe !=nil {return 0,_ec .Wrap (_fdfe ,_fbag ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_gdg &=0xf;var _aab []byte ;if _gdg <=4{_aab =make ([]byte ,5);for _bbgg :=0;_bbgg <=4;_bbgg ++{_efcgb ,_fgbg :=_abba .ReadBit ();if _fgbg !=nil {return 0,_ec .Wrap (_fgbg ,_fbag ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aab [_bbgg ]=byte (_efcgb );};}else {_gdg ,_fdfe =_abba .ReadBits (29);if _fdfe !=nil {return 0,_fdfe ;};_gdg &=_c .MaxInt32 ;_aeaf :=(_gdg +8)>>3;_aeaf <<=3;_aab =make ([]byte ,_aeaf );var _babb uint64 ;for _babb =0;_babb < _aeaf ;_babb ++{_dcdef ,_cabe :=_abba .ReadBit ();if _cabe !=nil {return 0,_ec .Wrap (_cabe ,_fbag ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aab [_babb ]=byte (_dcdef );};};return _gdg ,nil ;};func (_ceff *Header )readHeaderFlags ()error {const _dccd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_fbf ,_dgf :=_ceff .Reader .ReadBit ();if _dgf !=nil {return _ec .Wrap (_dgf ,_dccd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _fbf !=0{_ceff .RetainFlag =true ;};_fbf ,_dgf =_ceff .Reader .ReadBit ();if _dgf !=nil {return _ec .Wrap (_dgf ,_dccd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _fbf !=0{_ceff .PageAssociationFieldSize =true ;};_egac ,_dgf :=_ceff .Reader .ReadBits (6);if _dgf !=nil {return _ec .Wrap (_dgf ,_dccd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ceff .Type =Type (int (_egac ));return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gcba *Header )String ()string {_bdgd :=&_ba .Builder {};_bdgd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_bdgd .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gcba .SegmentNumber ));_bdgd .WriteString (_da .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gcba .Type ));_bdgd .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gcba .RetainFlag ));_bdgd .WriteString (_da .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gcba .PageAssociation ));_bdgd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gcba .PageAssociationFieldSize ));_bdgd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_dfca :=range _gcba .RTSNumbers {_bdgd .WriteString (_da .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dfca ));};_bdgd .WriteString (_da .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gcba .HeaderLength ));_bdgd .WriteString (_da .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gcba .SegmentDataLength ));_bdgd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gcba .SegmentDataStartOffset ));return _bdgd .String ();};func (_dgegd *TextRegion )encodeFlags (_ecdf _a .BinaryWriter )(_ebagc int ,_efea error ){const _gbcd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _efea =_ecdf .WriteBit (int (_dgegd .SbrTemplate ));_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_efea =_ecdf .WriteBits (uint64 (_dgegd .SbDsOffset ),5);_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _efea =_ecdf .WriteBit (int (_dgegd .DefaultPixel ));_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_efea =_ecdf .WriteBits (uint64 (_dgegd .CombinationOperator ),2);_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _efea =_ecdf .WriteBit (int (_dgegd .IsTransposed ));_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_efea =_ecdf .WriteBits (uint64 (_dgegd .ReferenceCorner ),2);_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_efea =_ecdf .WriteBits (uint64 (_dgegd .LogSBStrips ),2);_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _eagg int ;if _dgegd .UseRefinement {_eagg =1;};if _efea =_ecdf .WriteBit (_eagg );_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_eagg =0;if _dgegd .IsHuffmanEncoded {_eagg =1;};if _efea =_ecdf .WriteBit (_eagg );_efea !=nil {return _ebagc ,_ec .Wrap (_efea ,_gbcd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ebagc =2;return _ebagc ,nil ;};func (_bgg *GenericRegion )overrideAtTemplate0b (_eabe ,_gab ,_fdb ,_aece ,_dccc ,_afda int )int {if _bgg .GBAtOverride [0]{_eabe &=0xFFFD;if _bgg .GBAtY [0]==0&&_bgg .GBAtX [0]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [0]&0x1))<<1;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [0]),_fdb +int (_bgg .GBAtY [0])))<<1;};};if _bgg .GBAtOverride [1]{_eabe &=0xDFFF;if _bgg .GBAtY [1]==0&&_bgg .GBAtX [1]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [1]&0x1))<<13;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [1]),_fdb +int (_bgg .GBAtY [1])))<<13;};};if _bgg .GBAtOverride [2]{_eabe &=0xFDFF;if _bgg .GBAtY [2]==0&&_bgg .GBAtX [2]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [2]&0x1))<<9;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [2]),_fdb +int (_bgg .GBAtY [2])))<<9;};};if _bgg .GBAtOverride [3]{_eabe &=0xBFFF;if _bgg .GBAtY [3]==0&&_bgg .GBAtX [3]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [3]&0x1))<<14;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [3]),_fdb +int (_bgg .GBAtY [3])))<<14;};};if _bgg .GBAtOverride [4]{_eabe &=0xEFFF;if _bgg .GBAtY [4]==0&&_bgg .GBAtX [4]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [4]&0x1))<<12;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [4]),_fdb +int (_bgg .GBAtY [4])))<<12;};};if _bgg .GBAtOverride [5]{_eabe &=0xFFDF;if _bgg .GBAtY [5]==0&&_bgg .GBAtX [5]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [5]&0x1))<<5;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [5]),_fdb +int (_bgg .GBAtY [5])))<<5;};};if _bgg .GBAtOverride [6]{_eabe &=0xFFFB;if _bgg .GBAtY [6]==0&&_bgg .GBAtX [6]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [6]&0x1))<<2;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [6]),_fdb +int (_bgg .GBAtY [6])))<<2;};};if _bgg .GBAtOverride [7]{_eabe &=0xFFF7;if _bgg .GBAtY [7]==0&&_bgg .GBAtX [7]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [7]&0x1))<<3;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [7]),_fdb +int (_bgg .GBAtY [7])))<<3;};};if _bgg .GBAtOverride [8]{_eabe &=0xF7FF;if _bgg .GBAtY [8]==0&&_bgg .GBAtX [8]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [8]&0x1))<<11;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [8]),_fdb +int (_bgg .GBAtY [8])))<<11;};};if _bgg .GBAtOverride [9]{_eabe &=0xFFEF;if _bgg .GBAtY [9]==0&&_bgg .GBAtX [9]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [9]&0x1))<<4;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [9]),_fdb +int (_bgg .GBAtY [9])))<<4;};};if _bgg .GBAtOverride [10]{_eabe &=0x7FFF;if _bgg .GBAtY [10]==0&&_bgg .GBAtX [10]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [10]&0x1))<<15;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [10]),_fdb +int (_bgg .GBAtY [10])))<<15;};};if _bgg .GBAtOverride [11]{_eabe &=0xFDFF;if _bgg .GBAtY [11]==0&&_bgg .GBAtX [11]>=-int8 (_dccc ){_eabe |=(_aece >>uint (int8 (_afda )-_bgg .GBAtX [11]&0x1))<<10;}else {_eabe |=int (_bgg .getPixel (_gab +int (_bgg .GBAtX [11]),_fdb +int (_bgg .GBAtY [11])))<<10;};};return _eabe ;};func (_aeb *SymbolDictionary )getUserTable (_gabae int )(_bb .Tabler ,error ){var _dcag int ;for _ ,_dcdf :=range _aeb .Header .RTSegments {if _dcdf .Type ==53{if _dcag ==_gabae {_badg ,_gfbc :=_dcdf .GetSegmentData ();if _gfbc !=nil {return nil ,_gfbc ;};_gcbca :=_badg .(_bb .BasicTabler );return _bb .NewEncodedTable (_gcbca );};_dcag ++;};};return nil ,nil ;};func (_afeea *PatternDictionary )Init (h *Header ,r _a .StreamReader )error {_afeea ._cdeg =r ;return _afeea .parseHeader ();};func (_bfge *Header )readDataStartOffset (_fdgc _a .StreamReader ,_bgbg OrganizationType ){if _bgbg ==OSequential {_bfge .SegmentDataStartOffset =uint64 (_fdgc .StreamPosition ());};};func (_ffd *GenericRefinementRegion )String ()string {_gbbd :=&_ba .Builder {};_gbbd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gbbd .WriteString (_ffd .RegionInfo .String ()+"\u000a");_gbbd .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffd .IsTPGROn ));_gbbd .WriteString (_da .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ffd .TemplateID ));_gbbd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffd .GrAtX ));_gbbd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffd .GrAtY ));_gbbd .WriteString (_da .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ffd .ReferenceDX ));_gbbd .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ffd .ReferenceDY ));return _gbbd .String ();};func (_gdfg *TextRegion )decodeRdw ()(int64 ,error ){const _gaeb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gdfg .IsHuffmanEncoded {if _gdfg .SbHuffRDWidth ==3{if _gdfg ._bbec ==nil {var (_cbbc int ;_fcadg error ;);if _gdfg .SbHuffFS ==3{_cbbc ++;};if _gdfg .SbHuffDS ==3{_cbbc ++;};if _gdfg .SbHuffDT ==3{_cbbc ++;};_gdfg ._bbec ,_fcadg =_gdfg .getUserTable (_cbbc );if _fcadg !=nil {return 0,_ec .Wrap (_fcadg ,_gaeb ,"");};};return _gdfg ._bbec .Decode (_gdfg ._edbf );};_baed ,_cgec :=_bb .GetStandardTable (14+int (_gdfg .SbHuffRDWidth ));if _cgec !=nil {return 0,_ec .Wrap (_cgec ,_gaeb ,"");};return _baed .Decode (_gdfg ._edbf );};_eceb ,_fcfga :=_gdfg ._ccec .DecodeInt (_gdfg ._cbad );if _fcfga !=nil {return 0,_ec .Wrap (_fcfga ,_gaeb ,"");};return int64 (_eceb ),nil ;};func (_fdff *RegionSegment )Encode (w _a .BinaryWriter )(_dage int ,_faae error ){const _bgab ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_afgd :=make ([]byte ,4);_d .BigEndian .PutUint32 (_afgd ,_fdff .BitmapWidth );_dage ,_faae =w .Write (_afgd );if _faae !=nil {return 0,_ec .Wrap (_faae ,_bgab ,"\u0057\u0069\u0064t\u0068");};_d .BigEndian .PutUint32 (_afgd ,_fdff .BitmapHeight );var _cccb int ;_cccb ,_faae =w .Write (_afgd );if _faae !=nil {return 0,_ec .Wrap (_faae ,_bgab ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dage +=_cccb ;_d .BigEndian .PutUint32 (_afgd ,_fdff .XLocation );_cccb ,_faae =w .Write (_afgd );if _faae !=nil {return 0,_ec .Wrap (_faae ,_bgab ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dage +=_cccb ;_d .BigEndian .PutUint32 (_afgd ,_fdff .YLocation );_cccb ,_faae =w .Write (_afgd );if _faae !=nil {return 0,_ec .Wrap (_faae ,_bgab ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dage +=_cccb ;if _faae =w .WriteByte (byte (_fdff .CombinaionOperator )&0x07);_faae !=nil {return 0,_ec .Wrap (_faae ,_bgab ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dage ++;return _dage ,nil ;};func (_eecc *SymbolDictionary )addSymbol (_beac Regioner )error {_cagf ,_bfec :=_beac .GetRegionBitmap ();if _bfec !=nil {return _bfec ;};_eecc ._cadg [_eecc ._eedd ]=_cagf ;_eecc ._gddg =append (_eecc ._gddg ,_cagf );_af .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cagf );return nil ;};func (_cfgg *TextRegion )String ()string {_efcc :=&_ba .Builder {};_efcc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_efcc .WriteString (_cfgg .RegionInfo .String ()+"\u000a");_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cfgg .SbrTemplate ));_efcc .WriteString (_da .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cfgg .SbDsOffset ));_efcc .WriteString (_da .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cfgg .DefaultPixel ));_efcc .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cfgg .CombinationOperator ));_efcc .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cfgg .IsTransposed ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cfgg .ReferenceCorner ));_efcc .WriteString (_da .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cfgg .UseRefinement ));_efcc .WriteString (_da .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cfgg .IsHuffmanEncoded ));if _cfgg .IsHuffmanEncoded {_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cfgg .SbHuffRSize ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cfgg .SbHuffRDY ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cfgg .SbHuffRDX ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cfgg .SbHuffRDHeight ));_efcc .WriteString (_da .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cfgg .SbHuffRDWidth ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cfgg .SbHuffDT ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cfgg .SbHuffDS ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cfgg .SbHuffFS ));};_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfgg .SbrATX ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cfgg .SbrATY ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cfgg .NumberOfSymbolInstances ));_efcc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cfgg .SbrATX ));return _efcc .String ();};func (_fdag *PatternDictionary )setGbAtPixels (){if _fdag .HDTemplate ==0{_fdag .GBAtX =make ([]int8 ,4);_fdag .GBAtY =make ([]int8 ,4);_fdag .GBAtX [0]=-int8 (_fdag .HdpWidth );_fdag .GBAtY [0]=0;_fdag .GBAtX [1]=-3;_fdag .GBAtY [1]=-1;_fdag .GBAtX [2]=2;_fdag .GBAtY [2]=-2;_fdag .GBAtX [3]=-2;_fdag .GBAtY [3]=-2;}else {_fdag .GBAtX =[]int8 {-int8 (_fdag .HdpWidth )};_fdag .GBAtY =[]int8 {0};};};func (_ade *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fdg ,_fc ,_fag ,_bcde ,_dag ,_cdb ,_cab ,_bee ,_fdd int )(_ggf error ){var (_fca ,_eec int ;_daed ,_fcf int ;_dbdd ,_cfa int ;_fb byte ;);if _fdg > 0{_fb ,_ggf =_ade .RegionBitmap .GetByte (_cab -_fag );if _ggf !=nil {return ;};_daed =int (_fb );};if _bee > 0&&_bee <=_ade .ReferenceBitmap .Height {_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd -_bcde +_cdb );if _ggf !=nil {return ;};_fcf =int (_fb )<<2;};if _bee >=0&&_bee < _ade .ReferenceBitmap .Height {_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd +_cdb );if _ggf !=nil {return ;};_dbdd =int (_fb );};if _bee > -2&&_bee < _ade .ReferenceBitmap .Height -1{_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd +_bcde +_cdb );if _ggf !=nil {return ;};_cfa =int (_fb );};_fca =((_daed >>5)&0x6)|((_cfa >>2)&0x30)|(_dbdd &0xc0)|(_fcf &0x200);_eec =((_cfa >>2)&0x70)|(_dbdd &0xc0)|(_fcf &0x700);var _agff int ;for _faf :=0;_faf < _dag ;_faf =_agff {var (_gde int ;_cce int ;);_agff =_faf +8;if _gde =_fc -_faf ;_gde > 8{_gde =8;};_fde :=_agff < _fc ;_efbd :=_agff < _ade .ReferenceBitmap .Width ;_egde :=_cdb +1;if _fdg > 0{_fb =0;if _fde {_fb ,_ggf =_ade .RegionBitmap .GetByte (_cab -_fag +1);if _ggf !=nil {return ;};};_daed =(_daed <<8)|int (_fb );};if _bee > 0&&_bee <=_ade .ReferenceBitmap .Height {var _bfb int ;if _efbd {_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd -_bcde +_egde );if _ggf !=nil {return ;};_bfb =int (_fb )<<2;};_fcf =(_fcf <<8)|_bfb ;};if _bee >=0&&_bee < _ade .ReferenceBitmap .Height {_fb =0;if _efbd {_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd +_egde );if _ggf !=nil {return ;};};_dbdd =(_dbdd <<8)|int (_fb );};if _bee > -2&&_bee < (_ade .ReferenceBitmap .Height -1){_fb =0;if _efbd {_fb ,_ggf =_ade .ReferenceBitmap .GetByte (_fdd +_bcde +_egde );if _ggf !=nil {return ;};};_cfa =(_cfa <<8)|int (_fb );};for _bac :=0;_bac < _gde ;_bac ++{var _ggg int ;_dca :=(_eec >>4)&0x1ff;switch _dca {case 0x1ff:_ggg =1;case 0x00:_ggg =0;default:_ade ._f .SetIndex (int32 (_fca ));_ggg ,_ggf =_ade ._ecg .DecodeBit (_ade ._f );if _ggf !=nil {return ;};};_fgb :=uint (7-_bac );_cce |=_ggg <<_fgb ;_fca =((_fca &0x0d6)<<1)|_ggg |(_daed >>_fgb +5)&0x002|((_cfa >>_fgb +2)&0x010)|((_dbdd >>_fgb )&0x040)|((_fcf >>_fgb )&0x200);_eec =((_eec &0xdb)<<1)|((_cfa >>_fgb +2)&0x010)|((_dbdd >>_fgb )&0x080)|((_fcf >>_fgb )&0x400);};_ggf =_ade .RegionBitmap .SetByte (_cab ,byte (_cce ));if _ggf !=nil {return ;};_cab ++;_fdd ++;};return nil ;};func (_fea *PageInformationSegment )encodeFlags (_edc _a .BinaryWriter )(_ccfg error ){const _daf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ccfg =_edc .SkipBits (1);_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _ecgf int ;if _fea .CombinationOperatorOverrideAllowed (){_ecgf =1;};if _ccfg =_edc .WriteBit (_ecgf );_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_ecgf =0;if _fea ._ffac {_ecgf =1;};if _ccfg =_edc .WriteBit (_ecgf );_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ccfg =_edc .WriteBit ((int (_fea ._aegb )>>1)&0x01);_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ccfg =_edc .WriteBit (int (_fea ._aegb )&0x01);_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ecgf =int (_fea ._gbgf );if _ccfg =_edc .WriteBit (_ecgf );_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ecgf =0;if _fea ._agac {_ecgf =1;};if _ccfg =_edc .WriteBit (_ecgf );_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ecgf =0;if _fea .IsLossless {_ecgf =1;};if _ccfg =_edc .WriteBit (_ecgf );_ccfg !=nil {return _ec .Wrap (_ccfg ,_daf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};type Regioner interface{GetRegionBitmap ()(*_cb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_bfe *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _bfe .RegionSegment };func (_ffdff *TextRegion )initSymbols ()error {const _gbcegf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_gabb :=range _ffdff .Header .RTSegments {if _gabb ==nil {return _ec .Error (_gbcegf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _gabb .Type ==0{_edeb ,_ggag :=_gabb .GetSegmentData ();if _ggag !=nil {return _ec .Wrap (_ggag ,_gbcegf ,"");};_bcbe ,_acgc :=_edeb .(*SymbolDictionary );if !_acgc {return _ec .Error (_gbcegf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bcbe ._ggcdd =_ffdff ._fabe ;_gbdc ,_ggag :=_bcbe .GetDictionary ();if _ggag !=nil {return _ec .Wrap (_ggag ,_gbcegf ,"");};_ffdff .Symbols =append (_ffdff .Symbols ,_gbdc ...);};};_ffdff .NumberOfSymbols =uint32 (len (_ffdff .Symbols ));return nil ;};type PageInformationSegment struct{_agdfd _a .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_eabd bool ;_aegb _cb .CombinationOperator ;_ffac bool ;_gbgf uint8 ;_agac bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dfdc *SymbolDictionary )setRetainedCodingContexts (_fcfg *SymbolDictionary ){_dfdc ._aabc =_fcfg ._aabc ;_dfdc .IsHuffmanEncoded =_fcfg .IsHuffmanEncoded ;_dfdc .UseRefinementAggregation =_fcfg .UseRefinementAggregation ;_dfdc .SdTemplate =_fcfg .SdTemplate ;_dfdc .SdrTemplate =_fcfg .SdrTemplate ;_dfdc .SdATX =_fcfg .SdATX ;_dfdc .SdATY =_fcfg .SdATY ;_dfdc .SdrATX =_fcfg .SdrATX ;_dfdc .SdrATY =_fcfg .SdrATY ;_dfdc ._fcagg =_fcfg ._fcagg ;};func (_ead *RegionSegment )readCombinationOperator ()error {_dfcgb ,_gfg :=_ead ._bfa .ReadBits (3);if _gfg !=nil {return _gfg ;};_ead .CombinaionOperator =_cb .CombinationOperator (_dfcgb &0xF);return nil ;};func (_fgcga *TextRegion )setContexts (_abfe *_ea .DecoderStats ,_bfeaa *_ea .DecoderStats ,_bgffe *_ea .DecoderStats ,_agee *_ea .DecoderStats ,_dbcc *_ea .DecoderStats ,_ddcba *_ea .DecoderStats ,_efcfe *_ea .DecoderStats ,_cggc *_ea .DecoderStats ,_bfdae *_ea .DecoderStats ,_gebb *_ea .DecoderStats ){_fgcga ._cege =_bfeaa ;_fgcga ._adgea =_bgffe ;_fgcga ._cgc =_agee ;_fgcga ._eefb =_dbcc ;_fgcga ._cbad =_efcfe ;_fgcga ._gbccb =_cggc ;_fgcga ._fabe =_ddcba ;_fgcga ._fgcg =_bfdae ;_fgcga ._cecc =_gebb ;_fgcga ._eeeg =_abfe ;};func (_deag *HalftoneRegion )computeSegmentDataStructure ()error {_deag .DataOffset =_deag ._ccbg .StreamPosition ();_deag .DataHeaderLength =_deag .DataOffset -_deag .DataHeaderOffset ;_deag .DataLength =int64 (_deag ._ccbg .Length ())-_deag .DataHeaderLength ;return nil ;};func (_dffe *TextRegion )decodeIds ()(int64 ,error ){const _eeca ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dffe .IsHuffmanEncoded {if _dffe .SbHuffDS ==3{if _dffe ._gcgb ==nil {_begef :=0;if _dffe .SbHuffFS ==3{_begef ++;};var _edbc error ;_dffe ._gcgb ,_edbc =_dffe .getUserTable (_begef );if _edbc !=nil {return 0,_ec .Wrap (_edbc ,_eeca ,"");};};return _dffe ._gcgb .Decode (_dffe ._edbf );};_cdea ,_dcac :=_bb .GetStandardTable (8+int (_dffe .SbHuffDS ));if _dcac !=nil {return 0,_ec .Wrap (_dcac ,_eeca ,"");};return _cdea .Decode (_dffe ._edbf );};_eggd ,_dgea :=_dffe ._ccec .DecodeInt (_dffe ._cgc );if _dgea !=nil {return 0,_ec .Wrap (_dgea ,_eeca ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eggd ),nil ;};func (_aeag *TextRegion )readUseRefinement ()error {if !_aeag .UseRefinement ||_aeag .SbrTemplate !=0{return nil ;};var (_bfda byte ;_ccceb error ;);_aeag .SbrATX =make ([]int8 ,2);_aeag .SbrATY =make ([]int8 ,2);_bfda ,_ccceb =_aeag ._edbf .ReadByte ();if _ccceb !=nil {return _ccceb ;};_aeag .SbrATX [0]=int8 (_bfda );_bfda ,_ccceb =_aeag ._edbf .ReadByte ();if _ccceb !=nil {return _ccceb ;};_aeag .SbrATY [0]=int8 (_bfda );_bfda ,_ccceb =_aeag ._edbf .ReadByte ();if _ccceb !=nil {return _ccceb ;};_aeag .SbrATX [1]=int8 (_bfda );_bfda ,_ccceb =_aeag ._edbf .ReadByte ();if _ccceb !=nil {return _ccceb ;};_aeag .SbrATY [1]=int8 (_bfda );return nil ;};type template1 struct{};var _ SegmentEncoder =&GenericRegion {};func (_aga *GenericRefinementRegion )updateOverride ()error {if _aga .GrAtX ==nil ||_aga .GrAtY ==nil {return _be .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_aga .GrAtX )!=len (_aga .GrAtY ){return _be .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_aga ._df =make ([]bool ,len (_aga .GrAtX ));switch _aga .TemplateID {case 0:if _aga .GrAtX [0]!=-1&&_aga .GrAtY [0]!=-1{_aga ._df [0]=true ;_aga ._ae =true ;};if _aga .GrAtX [1]!=-1&&_aga .GrAtY [1]!=-1{_aga ._df [1]=true ;_aga ._ae =true ;};case 1:_aga ._ae =false ;};return nil ;};func (_bgfa *Header )readSegmentNumber (_dcfd _a .StreamReader )error {const _dcde ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_adeg :=make ([]byte ,4);_ ,_cdca :=_dcfd .Read (_adeg );if _cdca !=nil {return _ec .Wrap (_cdca ,_dcde ,"");};_bgfa .SegmentNumber =_d .BigEndian .Uint32 (_adeg );return nil ;};type TableSegment struct{_dcdg _a .StreamReader ;_gadff int32 ;_bded int32 ;_fagd int32 ;_bgcaa int32 ;_ggdd int32 ;};func (_ggd *GenericRegion )GetRegionBitmap ()(_fba *_cb .Bitmap ,_ebfd error ){if _ggd .Bitmap !=nil {return _ggd .Bitmap ,nil ;};if _ggd .IsMMREncoded {if _ggd ._afgb ==nil {_ggd ._afgb ,_ebfd =_cd .New (_ggd ._eae ,int (_ggd .RegionSegment .BitmapWidth ),int (_ggd .RegionSegment .BitmapHeight ),_ggd .DataOffset ,_ggd .DataLength );if _ebfd !=nil {return nil ,_ebfd ;};};_ggd .Bitmap ,_ebfd =_ggd ._afgb .UncompressMMR ();return _ggd .Bitmap ,_ebfd ;};if _ebfd =_ggd .updateOverrideFlags ();_ebfd !=nil {return nil ,_ebfd ;};var _bdgf int ;if _ggd ._ffb ==nil {_ggd ._ffb ,_ebfd =_ea .New (_ggd ._eae );if _ebfd !=nil {return nil ,_ebfd ;};};if _ggd ._gaa ==nil {_ggd ._gaa =_ea .NewStats (65536,1);};_ggd .Bitmap =_cb .New (int (_ggd .RegionSegment .BitmapWidth ),int (_ggd .RegionSegment .BitmapHeight ));_aaf :=int (uint32 (_ggd .Bitmap .Width +7)&(^uint32 (7)));for _gag :=0;_gag < _ggd .Bitmap .Height ;_gag ++{if _ggd .IsTPGDon {var _beef int ;_beef ,_ebfd =_ggd .decodeSLTP ();if _ebfd !=nil {return nil ,_ebfd ;};_bdgf ^=_beef ;};if _bdgf ==1{if _gag > 0{if _ebfd =_ggd .copyLineAbove (_gag );_ebfd !=nil {return nil ,_ebfd ;};};}else {if _ebfd =_ggd .decodeLine (_gag ,_ggd .Bitmap .Width ,_aaf );_ebfd !=nil {return nil ,_ebfd ;};};};return _ggd .Bitmap ,nil ;};func (_daca *PatternDictionary )readTemplate ()error {_gbba ,_abc :=_daca ._cdeg .ReadBits (2);if _abc !=nil {return _abc ;};_daca .HDTemplate =byte (_gbba );return nil ;};type EndOfStripe struct{_g _a .StreamReader ;_dd int ;};func (_gbbc *HalftoneRegion )GetPatterns ()([]*_cb .Bitmap ,error ){var (_acbf []*_cb .Bitmap ;_fdbf error ;);for _ ,_agc :=range _gbbc ._gceaa .RTSegments {var _gga Segmenter ;_gga ,_fdbf =_agc .GetSegmentData ();if _fdbf !=nil {_af .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fdbf );return nil ,_fdbf ;};_bbcf ,_gebg :=_gga .(*PatternDictionary );if !_gebg {_fdbf =_da .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gga );return nil ,_fdbf ;};var _gdda []*_cb .Bitmap ;_gdda ,_fdbf =_bbcf .GetDictionary ();if _fdbf !=nil {_af .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fdbf );return nil ,_fdbf ;};_acbf =append (_acbf ,_gdda ...);};return _acbf ,nil ;};func (_faeg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _faeg .SdHuffDecodeHeightSelection {case 0:_geg ,_acde :=_bb .GetStandardTable (4);if _acde !=nil {return 0,_acde ;};return _geg .Decode (_faeg ._ffbe );case 1:_gcdd ,_eeed :=_bb .GetStandardTable (5);if _eeed !=nil {return 0,_eeed ;};return _gcdd .Decode (_faeg ._ffbe );case 3:if _faeg ._agab ==nil {_agcc ,_fdac :=_bb .GetStandardTable (0);if _fdac !=nil {return 0,_fdac ;};_faeg ._agab =_agcc ;};return _faeg ._agab .Decode (_faeg ._ffbe );};return 0,nil ;};type SegmentEncoder interface{Encode (_aad _a .BinaryWriter )(_cgef int ,_eacg error );};func (_gacge *SymbolDictionary )decodeThroughTextRegion (_dfff ,_deeg ,_fbab uint32 )error {if _gacge ._cfgdc ==nil {_gacge ._cfgdc =_abfac (_gacge ._ffbe ,nil );_gacge ._cfgdc .setContexts (_gacge ._fcagg ,_ea .NewStats (512,1),_ea .NewStats (512,1),_ea .NewStats (512,1),_ea .NewStats (512,1),_gacge ._ggcdd ,_ea .NewStats (512,1),_ea .NewStats (512,1),_ea .NewStats (512,1),_ea .NewStats (512,1));};if _cegaa :=_gacge .setSymbolsArray ();_cegaa !=nil {return _cegaa ;};_gacge ._cfgdc .setParameters (_gacge ._aabc ,_gacge .IsHuffmanEncoded ,true ,_dfff ,_deeg ,_fbab ,1,_gacge ._gafd +_gacge ._eedd ,0,0,0,1,0,0,0,0,0,0,0,0,0,_gacge .SdrTemplate ,_gacge .SdrATX ,_gacge .SdrATY ,_gacge ._gddg ,_gacge ._fdbb );return _gacge .addSymbol (_gacge ._cfgdc );};func (_bce *Header )readSegmentPageAssociation (_ggcf Documenter ,_adgbd _a .StreamReader ,_ccd uint64 ,_babg ...int )(_eca error ){const _ged ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_bce .PageAssociationFieldSize {_bace ,_afec :=_adgbd .ReadBits (8);if _afec !=nil {return _ec .Wrap (_afec ,_ged ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bce .PageAssociation =int (_bace &0xFF);}else {_gdb ,_abbd :=_adgbd .ReadBits (32);if _abbd !=nil {return _ec .Wrap (_abbd ,_ged ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bce .PageAssociation =int (_gdb &_c .MaxInt32 );};if _ccd ==0{return nil ;};if _bce .PageAssociation !=0{_cega ,_gabf :=_ggcf .GetPage (_bce .PageAssociation );if _gabf !=nil {return _ec .Wrap (_gabf ,_ged ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _ebeg int ;for _baga :=uint64 (0);_baga < _ccd ;_baga ++{_ebeg =_babg [_baga ];_bce .RTSegments [_baga ],_gabf =_cega .GetSegment (_ebeg );if _gabf !=nil {var _edaf error ;_bce .RTSegments [_baga ],_edaf =_ggcf .GetGlobalSegment (_ebeg );if _edaf !=nil {return _ec .Wrapf (_gabf ,_ged ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_bce .PageAssociation );};};};return nil ;};for _gcbc :=uint64 (0);_gcbc < _ccd ;_gcbc ++{_bce .RTSegments [_gcbc ],_eca =_ggcf .GetGlobalSegment (_babg [_gcbc ]);if _eca !=nil {return _ec .Wrapf (_eca ,_ged ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_babg [_gcbc ]);};};return nil ;};func (_acb *template1 )form (_cdbf ,_bfdg ,_dcb ,_cdce ,_cbe int16 )int16 {return ((_cdbf &0x02)<<8)|(_bfdg <<6)|((_dcb &0x03)<<4)|(_cdce <<1)|_cbe ;};func (_cgbce *SymbolDictionary )encodeRefinementATFlags (_gbd _a .BinaryWriter )(_cdae int ,_cadb error ){const _bagd ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_cgbce .UseRefinementAggregation ||_cgbce .SdrTemplate !=0{return 0,nil ;};for _becdg :=0;_becdg < 2;_becdg ++{if _cadb =_gbd .WriteByte (byte (_cgbce .SdrATX [_becdg ]));_cadb !=nil {return _cdae ,_ec .Wrapf (_cadb ,_bagd ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_becdg );};_cdae ++;if _cadb =_gbd .WriteByte (byte (_cgbce .SdrATY [_becdg ]));_cadb !=nil {return _cdae ,_ec .Wrapf (_cadb ,_bagd ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_becdg );};_cdae ++;};return _cdae ,nil ;};func (_afdf *SymbolDictionary )setAtPixels ()error {if _afdf .IsHuffmanEncoded {return nil ;};_ecd :=1;if _afdf .SdTemplate ==0{_ecd =4;};if _dgac :=_afdf .readAtPixels (_ecd );_dgac !=nil {return _dgac ;};return nil ;};func (_add *SymbolDictionary )decodeRefinedSymbol (_aeac ,_fdce uint32 )error {var (_gdba int ;_ddbe ,_gcfg int32 ;);if _add .IsHuffmanEncoded {_gfge ,_eagd :=_add ._ffbe .ReadBits (byte (_add ._fdbb ));if _eagd !=nil {return _eagd ;};_gdba =int (_gfge );_aagc ,_eagd :=_bb .GetStandardTable (15);if _eagd !=nil {return _eagd ;};_eead ,_eagd :=_aagc .Decode (_add ._ffbe );if _eagd !=nil {return _eagd ;};_ddbe =int32 (_eead );_eead ,_eagd =_aagc .Decode (_add ._ffbe );if _eagd !=nil {return _eagd ;};_gcfg =int32 (_eead );_aagc ,_eagd =_bb .GetStandardTable (1);if _eagd !=nil {return _eagd ;};if _ ,_eagd =_aagc .Decode (_add ._ffbe );_eagd !=nil {return _eagd ;};_add ._ffbe .Align ();}else {_cdee ,_eafd :=_add ._aabc .DecodeIAID (uint64 (_add ._fdbb ),_add ._ggcdd );if _eafd !=nil {return _eafd ;};_gdba =int (_cdee );_ddbe ,_eafd =_add ._aabc .DecodeInt (_add ._ggcff );if _eafd !=nil {return _eafd ;};_gcfg ,_eafd =_add ._aabc .DecodeInt (_add ._edcc );if _eafd !=nil {return _eafd ;};};if _ccca :=_add .setSymbolsArray ();_ccca !=nil {return _ccca ;};_bggf :=_add ._gddg [_gdba ];if _aede :=_add .decodeNewSymbols (_aeac ,_fdce ,_bggf ,_ddbe ,_gcfg );_aede !=nil {return _aede ;};if _add .IsHuffmanEncoded {_add ._ffbe .Align ();};return nil ;};func NewRegionSegment (r _a .StreamReader )*RegionSegment {return &RegionSegment {_bfa :r }};func (_dgae *SymbolDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){_af .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_af .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_af .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dgae ._dedd ,_dgae ._cadg );}();if _dgae ._dedd ==nil {var _cccba error ;if _dgae .UseRefinementAggregation {_dgae ._fdbb =_dgae .getSbSymCodeLen ();};if !_dgae .IsHuffmanEncoded {if _cccba =_dgae .setCodingStatistics ();_cccba !=nil {return nil ,_cccba ;};};_dgae ._cadg =make ([]*_cb .Bitmap ,_dgae .NumberOfNewSymbols );var _dbfd []int ;if _dgae .IsHuffmanEncoded &&!_dgae .UseRefinementAggregation {_dbfd =make ([]int ,_dgae .NumberOfNewSymbols );};if _cccba =_dgae .setSymbolsArray ();_cccba !=nil {return nil ,_cccba ;};var _eccf ,_eaed int64 ;_dgae ._eedd =0;for _dgae ._eedd < _dgae .NumberOfNewSymbols {_eaed ,_cccba =_dgae .decodeHeightClassDeltaHeight ();if _cccba !=nil {return nil ,_cccba ;};_eccf +=_eaed ;var _gbbe ,_agbe uint32 ;_dgda :=int64 (_dgae ._eedd );for {var _eecd int64 ;_eecd ,_cccba =_dgae .decodeDifferenceWidth ();if _ag .Is (_cccba ,_dg .ErrOOB ){break ;};if _cccba !=nil {return nil ,_cccba ;};if _dgae ._eedd >=_dgae .NumberOfNewSymbols {break ;};_gbbe +=uint32 (_eecd );_agbe +=_gbbe ;if !_dgae .IsHuffmanEncoded ||_dgae .UseRefinementAggregation {if !_dgae .UseRefinementAggregation {_cccba =_dgae .decodeDirectlyThroughGenericRegion (_gbbe ,uint32 (_eccf ));if _cccba !=nil {return nil ,_cccba ;};}else {_cccba =_dgae .decodeAggregate (_gbbe ,uint32 (_eccf ));if _cccba !=nil {return nil ,_cccba ;};};}else if _dgae .IsHuffmanEncoded &&!_dgae .UseRefinementAggregation {_dbfd [_dgae ._eedd ]=int (_gbbe );};_dgae ._eedd ++;};if _dgae .IsHuffmanEncoded &&!_dgae .UseRefinementAggregation {var _agbb int64 ;if _dgae .SdHuffBMSizeSelection ==0{var _aadg _bb .Tabler ;_aadg ,_cccba =_bb .GetStandardTable (1);if _cccba !=nil {return nil ,_cccba ;};_agbb ,_cccba =_aadg .Decode (_dgae ._ffbe );if _cccba !=nil {return nil ,_cccba ;};}else {_agbb ,_cccba =_dgae .huffDecodeBmSize ();if _cccba !=nil {return nil ,_cccba ;};};_dgae ._ffbe .Align ();var _afcc *_cb .Bitmap ;_afcc ,_cccba =_dgae .decodeHeightClassCollectiveBitmap (_agbb ,uint32 (_eccf ),_agbe );if _cccba !=nil {return nil ,_cccba ;};_cccba =_dgae .decodeHeightClassBitmap (_afcc ,_dgda ,int (_eccf ),_dbfd );if _cccba !=nil {return nil ,_cccba ;};};};_dfgc ,_cccba :=_dgae .getToExportFlags ();if _cccba !=nil {return nil ,_cccba ;};_dgae .setExportedSymbols (_dfgc );};return _dgae ._dedd ,nil ;};func (_eecca *TextRegion )decodeStripT ()(_gagf int64 ,_ggba error ){if _eecca .IsHuffmanEncoded {if _eecca .SbHuffDT ==3{if _eecca ._fdgbd ==nil {var _ggga int ;if _eecca .SbHuffFS ==3{_ggga ++;};if _eecca .SbHuffDS ==3{_ggga ++;};_eecca ._fdgbd ,_ggba =_eecca .getUserTable (_ggga );if _ggba !=nil {return 0,_ggba ;};};_gagf ,_ggba =_eecca ._fdgbd .Decode (_eecca ._edbf );if _ggba !=nil {return 0,_ggba ;};}else {var _ceee _bb .Tabler ;_ceee ,_ggba =_bb .GetStandardTable (11+int (_eecca .SbHuffDT ));if _ggba !=nil {return 0,_ggba ;};_gagf ,_ggba =_ceee .Decode (_eecca ._edbf );if _ggba !=nil {return 0,_ggba ;};};}else {var _abg int32 ;_abg ,_ggba =_eecca ._ccec .DecodeInt (_eecca ._cege );if _ggba !=nil {return 0,_ggba ;};_gagf =int64 (_abg );};_gagf *=int64 (-_eecca .SbStrips );return _gagf ,nil ;};func (_eggde *TextRegion )readHuffmanFlags ()error {var (_dabd int ;_ffgf uint64 ;_cfac error ;);_ ,_cfac =_eggde ._edbf .ReadBit ();if _cfac !=nil {return _cfac ;};_dabd ,_cfac =_eggde ._edbf .ReadBit ();if _cfac !=nil {return _cfac ;};_eggde .SbHuffRSize =int8 (_dabd );_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffRDY =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffRDX =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffRDHeight =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffRDWidth =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffDT =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffDS =int8 (_ffgf )&0xf;_ffgf ,_cfac =_eggde ._edbf .ReadBits (2);if _cfac !=nil {return _cfac ;};_eggde .SbHuffFS =int8 (_ffgf )&0xf;return nil ;};func (_eadd *SymbolDictionary )decodeAggregate (_cae ,_gabfa uint32 )error {var (_aggb int64 ;_cbgg error ;);if _eadd .IsHuffmanEncoded {_aggb ,_cbgg =_eadd .huffDecodeRefAggNInst ();if _cbgg !=nil {return _cbgg ;};}else {_fgbeb ,_ebag :=_eadd ._aabc .DecodeInt (_eadd ._fbdc );if _ebag !=nil {return _ebag ;};_aggb =int64 (_fgbeb );};if _aggb > 1{return _eadd .decodeThroughTextRegion (_cae ,_gabfa ,uint32 (_aggb ));}else if _aggb ==1{return _eadd .decodeRefinedSymbol (_cae ,_gabfa );};return nil ;};type template0 struct{};func (_gddb *PageInformationSegment )String ()string {_eed :=&_ba .Builder {};_eed .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_eed .WriteString (_da .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gddb .PageBMHeight ));_eed .WriteString (_da .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gddb .PageBMWidth ));_eed .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gddb .ResolutionX ));_eed .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gddb .ResolutionY ));_eed .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gddb ._aegb ));_eed .WriteString (_da .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gddb ._eabd ));_eed .WriteString (_da .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gddb .IsLossless ));_eed .WriteString (_da .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gddb ._ffac ));_eed .WriteString (_da .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gddb ._agac ));_eed .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gddb .IsStripe ));_eed .WriteString (_da .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gddb .MaxStripeSize ));return _eed .String ();};func (_gca *GenericRegion )overrideAtTemplate2 (_bfbf ,_dbbb ,_bcff ,_bbe ,_aag int )int {_bfbf &=0x3FB;if _gca .GBAtY [0]==0&&_gca .GBAtX [0]>=-int8 (_aag ){_bfbf |=(_bbe >>uint (7-(int8 (_aag )+_gca .GBAtX [0]))&0x1)<<2;}else {_bfbf |=int (_gca .getPixel (_dbbb +int (_gca .GBAtX [0]),_bcff +int (_gca .GBAtY [0])))<<2;};return _bfbf ;};func (_bgba *GenericRegion )readGBAtPixels (_fdf int )error {const _fcab ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_bgba .GBAtX =make ([]int8 ,_fdf );_bgba .GBAtY =make ([]int8 ,_fdf );for _gcee :=0;_gcee < _fdf ;_gcee ++{_ggcd ,_bcfeb :=_bgba ._eae .ReadByte ();if _bcfeb !=nil {return _ec .Wrapf (_bcfeb ,_fcab ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcee );};_bgba .GBAtX [_gcee ]=int8 (_ggcd );_ggcd ,_bcfeb =_bgba ._eae .ReadByte ();if _bcfeb !=nil {return _ec .Wrapf (_bcfeb ,_fcab ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_gcee );};_bgba .GBAtY [_gcee ]=int8 (_ggcd );};return nil ;};var _ _bb .BasicTabler =&TableSegment {};type templater interface{form (_gdd ,_debf ,_ebf ,_gcgg ,_dgg int16 )int16 ;setIndex (_gdeb *_ea .DecoderStats );};func (_bc *EndOfStripe )LineNumber ()int {return _bc ._dd };func (_cbf *HalftoneRegion )computeY (_afee ,_gbef int )int {return _cbf .shiftAndFill (int (_cbf .HGridY )+_afee *int (_cbf .HRegionX )-_gbef *int (_cbf .HRegionY ));};func (_bdgb *TextRegion )parseHeader ()error {var _bbdbg error ;_af .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _bbdbg !=nil {_af .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_bbdbg );}else {_af .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _bbdbg =_bdgb .RegionInfo .parseHeader ();_bbdbg !=nil {return _bbdbg ;};if _bbdbg =_bdgb .readRegionFlags ();_bbdbg !=nil {return _bbdbg ;};if _bdgb .IsHuffmanEncoded {if _bbdbg =_bdgb .readHuffmanFlags ();_bbdbg !=nil {return _bbdbg ;};};if _bbdbg =_bdgb .readUseRefinement ();_bbdbg !=nil {return _bbdbg ;};if _bbdbg =_bdgb .readAmountOfSymbolInstances ();_bbdbg !=nil {return _bbdbg ;};if _bbdbg =_bdgb .getSymbols ();_bbdbg !=nil {return _bbdbg ;};if _bbdbg =_bdgb .computeSymbolCodeLength ();_bbdbg !=nil {return _bbdbg ;};if _bbdbg =_bdgb .checkInput ();_bbdbg !=nil {return _bbdbg ;};_af .Log .Trace ("\u0025\u0073",_bdgb .String ());return nil ;};func (_edgb *Header )writeSegmentNumber (_fef _a .BinaryWriter )(_aafe int ,_fcabf error ){_cgac :=make ([]byte ,4);_d .BigEndian .PutUint32 (_cgac ,_edgb .SegmentNumber );if _aafe ,_fcabf =_fef .Write (_cgac );_fcabf !=nil {return 0,_ec .Wrap (_fcabf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _aafe ,nil ;};func (_gabfc *SymbolDictionary )Init (h *Header ,r _a .StreamReader )error {_gabfc .Header =h ;_gabfc ._ffbe =r ;return _gabfc .parseHeader ();};func (_aded *TextRegion )decodeRdy ()(int64 ,error ){const _eabeg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _aded .IsHuffmanEncoded {if _aded .SbHuffRDY ==3{if _aded ._agbf ==nil {var (_fddd int ;_dede error ;);if _aded .SbHuffFS ==3{_fddd ++;};if _aded .SbHuffDS ==3{_fddd ++;};if _aded .SbHuffDT ==3{_fddd ++;};if _aded .SbHuffRDWidth ==3{_fddd ++;};if _aded .SbHuffRDHeight ==3{_fddd ++;};if _aded .SbHuffRDX ==3{_fddd ++;};_aded ._agbf ,_dede =_aded .getUserTable (_fddd );if _dede !=nil {return 0,_ec .Wrap (_dede ,_eabeg ,"");};};return _aded ._agbf .Decode (_aded ._edbf );};_bcgef ,_bffg :=_bb .GetStandardTable (14+int (_aded .SbHuffRDY ));if _bffg !=nil {return 0,_bffg ;};return _bcgef .Decode (_aded ._edbf );};_ddcf ,_cffab :=_aded ._ccec .DecodeInt (_aded ._cecc );if _cffab !=nil {return 0,_ec .Wrap (_cffab ,_eabeg ,"");};return int64 (_ddcf ),nil ;};func (_aebb *SymbolDictionary )parseHeader ()(_gagbb error ){_af .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gagbb !=nil {_af .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gagbb );}else {_af .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _gagbb =_aebb .readRegionFlags ();_gagbb !=nil {return _gagbb ;};if _gagbb =_aebb .setAtPixels ();_gagbb !=nil {return _gagbb ;};if _gagbb =_aebb .setRefinementAtPixels ();_gagbb !=nil {return _gagbb ;};if _gagbb =_aebb .readNumberOfExportedSymbols ();_gagbb !=nil {return _gagbb ;};if _gagbb =_aebb .readNumberOfNewSymbols ();_gagbb !=nil {return _gagbb ;};if _gagbb =_aebb .setInSyms ();_gagbb !=nil {return _gagbb ;};if _aebb ._fcag {_bfdbf :=_aebb .Header .RTSegments ;for _dfbe :=len (_bfdbf )-1;_dfbe >=0;_dfbe --{if _bfdbf [_dfbe ].Type ==0{_gdec ,_ddcbg :=_bfdbf [_dfbe ].SegmentData .(*SymbolDictionary );if !_ddcbg {_gagbb =_da .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bfdbf [_dfbe ]);return _gagbb ;};if _gdec ._fcag {_aebb .setRetainedCodingContexts (_gdec );};break ;};};};if _gagbb =_aebb .checkInput ();_gagbb !=nil {return _gagbb ;};return nil ;};func (_bccd *TableSegment )HtHigh ()int32 {return _bccd ._ggdd };func (_fcdb *PatternDictionary )extractPatterns (_ddfg *_cb .Bitmap )error {var _cdcb int ;_aabac :=make ([]*_cb .Bitmap ,_fcdb .GrayMax +1);for _cdcb <=int (_fcdb .GrayMax ){_fefg :=int (_fcdb .HdpWidth )*_cdcb ;_afbf :=_e .Rect (_fefg ,0,_fefg +int (_fcdb .HdpWidth ),int (_fcdb .HdpHeight ));_adee ,_dbbf :=_cb .Extract (_afbf ,_ddfg );if _dbbf !=nil {return _dbbf ;};_aabac [_cdcb ]=_adee ;_cdcb ++;};_fcdb .Patterns =_aabac ;return nil ;};func (_fbbc *GenericRegion )decodeTemplate0b (_efbdb ,_bda ,_ecf int ,_bcgb ,_fbca int )(_bdf error ){const _eee ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_gcc ,_adgb int ;_adag ,_eba int ;_dgc byte ;_dga int ;);if _efbdb >=1{_dgc ,_bdf =_fbbc .Bitmap .GetByte (_fbca );if _bdf !=nil {return _ec .Wrap (_bdf ,_eee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adag =int (_dgc );};if _efbdb >=2{_dgc ,_bdf =_fbbc .Bitmap .GetByte (_fbca -_fbbc .Bitmap .RowStride );if _bdf !=nil {return _ec .Wrap (_bdf ,_eee ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_eba =int (_dgc )<<6;};_gcc =(_adag &0xf0)|(_eba &0x3800);for _cdf :=0;_cdf < _ecf ;_cdf =_dga {var (_cfg byte ;_ffc int ;);_dga =_cdf +8;if _bgd :=_bda -_cdf ;_bgd > 8{_ffc =8;}else {_ffc =_bgd ;};if _efbdb > 0{_adag <<=8;if _dga < _bda {_dgc ,_bdf =_fbbc .Bitmap .GetByte (_fbca +1);if _bdf !=nil {return _ec .Wrap (_bdf ,_eee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_adag |=int (_dgc );};};if _efbdb > 1{_eba <<=8;if _dga < _bda {_dgc ,_bdf =_fbbc .Bitmap .GetByte (_fbca -_fbbc .Bitmap .RowStride +1);if _bdf !=nil {return _ec .Wrap (_bdf ,_eee ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_eba |=int (_dgc )<<6;};};for _efd :=0;_efd < _ffc ;_efd ++{_age :=uint (7-_efd );if _fbbc ._cfaa {_adgb =_fbbc .overrideAtTemplate0b (_gcc ,_cdf +_efd ,_efbdb ,int (_cfg ),_efd ,int (_age ));_fbbc ._gaa .SetIndex (int32 (_adgb ));}else {_fbbc ._gaa .SetIndex (int32 (_gcc ));};var _efde int ;_efde ,_bdf =_fbbc ._ffb .DecodeBit (_fbbc ._gaa );if _bdf !=nil {return _ec .Wrap (_bdf ,_eee ,"");};_cfg |=byte (_efde <<_age );_gcc =((_gcc &0x7bf7)<<1)|_efde |((_adag >>_age )&0x10)|((_eba >>_age )&0x800);};if _eab :=_fbbc .Bitmap .SetByte (_bcgb ,_cfg );_eab !=nil {return _ec .Wrap (_eab ,_eee ,"");};_bcgb ++;_fbca ++;};return nil ;};func (_becg *Header )readSegmentDataLength (_edaa _a .StreamReader )(_edda error ){_becg .SegmentDataLength ,_edda =_edaa .ReadBits (32);if _edda !=nil {return _edda ;};_becg .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_ebg *GenericRefinementRegion )setParameters (_ggb *_ea .DecoderStats ,_aba *_ea .Decoder ,_eag int8 ,_dcf ,_bgc uint32 ,_ebgb *_cb .Bitmap ,_cag ,_cba int32 ,_dccf bool ,_faff []int8 ,_fcad []int8 ){_af .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _ggb !=nil {_ebg ._f =_ggb ;};if _aba !=nil {_ebg ._ecg =_aba ;};_ebg .TemplateID =_eag ;_ebg .RegionInfo .BitmapWidth =_dcf ;_ebg .RegionInfo .BitmapHeight =_bgc ;_ebg .ReferenceBitmap =_ebgb ;_ebg .ReferenceDX =_cag ;_ebg .ReferenceDY =_cba ;_ebg .IsTPGROn =_dccf ;_ebg .GrAtX =_faff ;_ebg .GrAtY =_fcad ;_ebg .RegionBitmap =nil ;_af .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_ebg );};func (_bge *template0 )form (_abd ,_edf ,_caf ,_ecgg ,_dbba int16 )int16 {return (_abd <<10)|(_edf <<7)|(_caf <<4)|(_ecgg <<1)|_dbba ;};func (_badf *GenericRegion )decodeTemplate3 (_gbea ,_acbd ,_cgbc int ,_fbd ,_eecb int )(_cdd error ){const _ebga ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_acf ,_efba int ;_ffcd int ;_gcea byte ;_beda ,_efbe int ;);if _gbea >=1{_gcea ,_cdd =_badf .Bitmap .GetByte (_eecb );if _cdd !=nil {return _ec .Wrap (_cdd ,_ebga ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffcd =int (_gcea );};_acf =(_ffcd >>1)&0x70;for _abbc :=0;_abbc < _cgbc ;_abbc =_beda {var (_edae byte ;_bdfe int ;);_beda =_abbc +8;if _bcge :=_acbd -_abbc ;_bcge > 8{_bdfe =8;}else {_bdfe =_bcge ;};if _gbea >=1{_ffcd <<=8;if _beda < _acbd {_gcea ,_cdd =_badf .Bitmap .GetByte (_eecb +1);if _cdd !=nil {return _ec .Wrap (_cdd ,_ebga ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_ffcd |=int (_gcea );};};for _bcfe :=0;_bcfe < _bdfe ;_bcfe ++{if _badf ._cfaa {_efba =_badf .overrideAtTemplate3 (_acf ,_abbc +_bcfe ,_gbea ,int (_edae ),_bcfe );_badf ._gaa .SetIndex (int32 (_efba ));}else {_badf ._gaa .SetIndex (int32 (_acf ));};_efbe ,_cdd =_badf ._ffb .DecodeBit (_badf ._gaa );if _cdd !=nil {return _ec .Wrap (_cdd ,_ebga ,"");};_edae |=byte (_efbe )<<byte (7-_bcfe );_acf =((_acf &0x1f7)<<1)|_efbe |((_ffcd >>uint (8-_bcfe ))&0x010);};if _ccce :=_badf .Bitmap .SetByte (_fbd ,_edae );_ccce !=nil {return _ec .Wrap (_ccce ,_ebga ,"");};_fbd ++;_eecb ++;};return nil ;};var (_eggb Segmenter ;_bcdf =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _eggb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _eggb },TProfiles :func ()Segmenter {return _eggb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _eggb },TBitmap :func ()Segmenter {return _eggb }};);func (_adfc *TextRegion )decodeRdh ()(int64 ,error ){const _agbfc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _adfc .IsHuffmanEncoded {if _adfc .SbHuffRDHeight ==3{if _adfc ._fbac ==nil {var (_fecc int ;_bgef error ;);if _adfc .SbHuffFS ==3{_fecc ++;};if _adfc .SbHuffDS ==3{_fecc ++;};if _adfc .SbHuffDT ==3{_fecc ++;};if _adfc .SbHuffRDWidth ==3{_fecc ++;};_adfc ._fbac ,_bgef =_adfc .getUserTable (_fecc );if _bgef !=nil {return 0,_ec .Wrap (_bgef ,_agbfc ,"");};};return _adfc ._fbac .Decode (_adfc ._edbf );};_dagdf ,_bfbd :=_bb .GetStandardTable (14+int (_adfc .SbHuffRDHeight ));if _bfbd !=nil {return 0,_ec .Wrap (_bfbd ,_agbfc ,"");};return _dagdf .Decode (_adfc ._edbf );};_acdee ,_aaed :=_adfc ._ccec .DecodeInt (_adfc ._gbccb );if _aaed !=nil {return 0,_ec .Wrap (_aaed ,_agbfc ,"");};return int64 (_acdee ),nil ;};func (_ccee *TextRegion )checkInput ()error {const _dabg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_ccee .UseRefinement {if _ccee .SbrTemplate !=0{_af .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ccee .SbrTemplate =0;};};if _ccee .SbHuffFS ==2||_ccee .SbHuffRDWidth ==2||_ccee .SbHuffRDHeight ==2||_ccee .SbHuffRDX ==2||_ccee .SbHuffRDY ==2{return _ec .Error (_dabg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_ccee .UseRefinement {if _ccee .SbHuffRSize !=0{_af .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ccee .SbHuffRSize =0;};if _ccee .SbHuffRDY !=0{_af .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ccee .SbHuffRDY =0;};if _ccee .SbHuffRDX !=0{_af .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ccee .SbHuffRDX =0;};if _ccee .SbHuffRDWidth !=0{_af .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_ccee .SbHuffRDWidth =0;};if _ccee .SbHuffRDHeight !=0{_af .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ccee .SbHuffRDHeight =0;};};return nil ;};func (_ebcc *PageInformationSegment )readIsLossless ()error {_begc ,_feeb :=_ebcc ._agdfd .ReadBit ();if _feeb !=nil {return _feeb ;};if _begc ==1{_ebcc .IsLossless =true ;};return nil ;};var _ templater =&template0 {};func (_aacf *GenericRegion )getPixel (_cbeg ,_aff int )int8 {if _cbeg < 0||_cbeg >=_aacf .Bitmap .Width {return 0;};if _aff < 0||_aff >=_aacf .Bitmap .Height {return 0;};if _aacf .Bitmap .GetPixel (_cbeg ,_aff ){return 1;};return 0;};func (_acbc *Header )Encode (w _a .BinaryWriter )(_edg int ,_ddbc error ){const _ccf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _defe _a .BinaryWriter ;_af .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ddbc !=nil {_af .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ddbc );}else {_af .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_acbc );_af .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _acbc .SegmentData !=nil {_ebc ,_gbcc :=_acbc .SegmentData .(SegmentEncoder );if !_gbcc {return 0,_ec .Errorf (_ccf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_acbc .SegmentData );};_defe =_a .BufferedMSB ();_edg ,_ddbc =_ebc .Encode (_defe );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_acbc .SegmentDataLength =uint64 (_edg );};if _acbc .pageSize ()==4{_acbc .PageAssociationFieldSize =true ;};var _feed int ;_feed ,_ddbc =_acbc .writeSegmentNumber (w );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_edg +=_feed ;if _ddbc =_acbc .writeFlags (w );_ddbc !=nil {return _edg ,_ec .Wrap (_ddbc ,_ccf ,"");};_edg ++;_feed ,_ddbc =_acbc .writeReferredToCount (w );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_edg +=_feed ;_feed ,_ddbc =_acbc .writeReferredToSegments (w );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_edg +=_feed ;_feed ,_ddbc =_acbc .writeSegmentPageAssociation (w );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_edg +=_feed ;_feed ,_ddbc =_acbc .writeSegmentDataLength (w );if _ddbc !=nil {return 0,_ec .Wrap (_ddbc ,_ccf ,"");};_edg +=_feed ;_acbc .HeaderLength =int64 (_edg )-int64 (_acbc .SegmentDataLength );if _defe !=nil {if _ ,_ddbc =w .Write (_defe .Data ());_ddbc !=nil {return _edg ,_ec .Wrap (_ddbc ,_ccf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _edg ,nil ;};func (_bafg *Header )writeFlags (_gaad _a .BinaryWriter )(_ggac error ){const _aegc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ccg :=byte (_bafg .Type );if _ggac =_gaad .WriteByte (_ccg );_ggac !=nil {return _ec .Wrap (_ggac ,_aegc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_bafg .RetainFlag &&!_bafg .PageAssociationFieldSize {return nil ;};if _ggac =_gaad .SkipBits (-8);_ggac !=nil {return _ec .Wrap (_ggac ,_aegc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _agadf int ;if _bafg .RetainFlag {_agadf =1;};if _ggac =_gaad .WriteBit (_agadf );_ggac !=nil {return _ec .Wrap (_ggac ,_aegc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_agadf =0;if _bafg .PageAssociationFieldSize {_agadf =1;};if _ggac =_gaad .WriteBit (_agadf );_ggac !=nil {return _ec .Wrap (_ggac ,_aegc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gaad .FinishByte ();return nil ;};func (_egcf *TextRegion )Encode (w _a .BinaryWriter )(_eegfd int ,_eabdg error ){const _dfef ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _eegfd ,_eabdg =_egcf .RegionInfo .Encode (w );_eabdg !=nil {return _eegfd ,_ec .Wrap (_eabdg ,_dfef ,"");};var _efecd int ;if _efecd ,_eabdg =_egcf .encodeFlags (w );_eabdg !=nil {return _eegfd ,_ec .Wrap (_eabdg ,_dfef ,"");};_eegfd +=_efecd ;if _efecd ,_eabdg =_egcf .encodeSymbols (w );_eabdg !=nil {return _eegfd ,_ec .Wrap (_eabdg ,_dfef ,"");};_eegfd +=_efecd ;return _eegfd ,nil ;};func (_eeab *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _eeab .IsHuffmanEncoded {switch _eeab .SdHuffDecodeWidthSelection {case 0:_daeb ,_dbea :=_bb .GetStandardTable (2);if _dbea !=nil {return 0,_dbea ;};return _daeb .Decode (_eeab ._ffbe );case 1:_ddgdf ,_gdfa :=_bb .GetStandardTable (3);if _gdfa !=nil {return 0,_gdfa ;};return _ddgdf .Decode (_eeab ._ffbe );case 3:if _eeab ._gba ==nil {var _ddcbe int ;if _eeab .SdHuffDecodeHeightSelection ==3{_ddcbe ++;};_cdgd ,_gbce :=_eeab .getUserTable (_ddcbe );if _gbce !=nil {return 0,_gbce ;};_eeab ._gba =_cdgd ;};return _eeab ._gba .Decode (_eeab ._ffbe );};}else {_fdgbbe ,_bfaa :=_eeab ._aabc .DecodeInt (_eeab ._faaf );if _bfaa !=nil {return 0,_bfaa ;};return int64 (_fdgbbe ),nil ;};return 0,nil ;};func (_gfa *PageInformationSegment )Init (h *Header ,r _a .StreamReader )(_eggg error ){_gfa ._agdfd =r ;if _eggg =_gfa .parseHeader ();_eggg !=nil {return _ec .Wrap (_eggg ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_deeb *TextRegion )readAmountOfSymbolInstances ()error {_ebaf ,_bfbdd :=_deeb ._edbf .ReadBits (32);if _bfbdd !=nil {return _bfbdd ;};_deeb .NumberOfSymbolInstances =uint32 (_ebaf &_c .MaxUint32 );_cefa :=_deeb .RegionInfo .BitmapWidth *_deeb .RegionInfo .BitmapHeight ;if _cefa < _deeb .NumberOfSymbolInstances {_af .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cefa ,_deeb .NumberOfSymbolInstances );_deeb .NumberOfSymbolInstances =_cefa ;};return nil ;};func (_fbbcc Type )String ()string {switch _fbbcc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fdcg *Header )GetSegmentData ()(Segmenter ,error ){var _cece Segmenter ;if _fdcg .SegmentData !=nil {_cece =_fdcg .SegmentData ;};if _cece ==nil {_dfae ,_gcb :=_bcdf [_fdcg .Type ];if !_gcb {return nil ,_da .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fdcg .Type ,_fdcg .Type );};_cece =_dfae ();_af .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fdcg .SegmentNumber ,_fdcg .SegmentDataStartOffset );_cbb ,_afef :=_fdcg .subInputReader ();if _afef !=nil {return nil ,_afef ;};if _afea :=_cece .Init (_fdcg ,_cbb );_afea !=nil {_af .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_afea ,_cece );return nil ,_afea ;};_fdcg .SegmentData =_cece ;};return _cece ,nil ;};func (_fbae *Header )referenceSize ()uint {switch {case _fbae .SegmentNumber <=255:return 1;case _fbae .SegmentNumber <=65535:return 2;default:return 4;};};func (_abed *TextRegion )getSymbols ()error {if _abed .Header .RTSegments !=nil {return _abed .initSymbols ();};return nil ;};func (_cfd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cfd .SdHuffAggInstanceSelection {_fcaa ,_cfff :=_bb .GetStandardTable (1);if _cfff !=nil {return 0,_cfff ;};return _fcaa .Decode (_cfd ._ffbe );};if _cfd ._ddc ==nil {var (_gffd int ;_fgfa error ;);if _cfd .SdHuffDecodeHeightSelection ==3{_gffd ++;};if _cfd .SdHuffDecodeWidthSelection ==3{_gffd ++;};if _cfd .SdHuffBMSizeSelection ==3{_gffd ++;};_cfd ._ddc ,_fgfa =_cfd .getUserTable (_gffd );if _fgfa !=nil {return 0,_fgfa ;};};return _cfd ._ddc .Decode (_cfd ._ffbe );};func (_bfdb *HalftoneRegion )combineGrayscalePlanes (_baa []*_cb .Bitmap ,_dec int )error {_ccaa :=0;for _fade :=0;_fade < _baa [_dec ].Height ;_fade ++{for _adae :=0;_adae < _baa [_dec ].Width ;_adae +=8{_gaba ,_gdedd :=_baa [_dec +1].GetByte (_ccaa );if _gdedd !=nil {return _gdedd ;};_cabb ,_gdedd :=_baa [_dec ].GetByte (_ccaa );if _gdedd !=nil {return _gdedd ;};_gdedd =_baa [_dec ].SetByte (_ccaa ,_cb .CombineBytes (_cabb ,_gaba ,_cb .CmbOpXor ));if _gdedd !=nil {return _gdedd ;};_ccaa ++;};};return nil ;};func (_aada *PatternDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){if _aada .Patterns !=nil {return _aada .Patterns ,nil ;};if !_aada .IsMMREncoded {_aada .setGbAtPixels ();};_bcabe :=NewGenericRegion (_aada ._cdeg );_bcabe .setParametersMMR (_aada .IsMMREncoded ,_aada .DataOffset ,_aada .DataLength ,uint32 (_aada .HdpHeight ),(_aada .GrayMax +1)*uint32 (_aada .HdpWidth ),_aada .HDTemplate ,false ,false ,_aada .GBAtX ,_aada .GBAtY );_dbbbe ,_cfgf :=_bcabe .GetRegionBitmap ();if _cfgf !=nil {return nil ,_cfgf ;};if _cfgf =_aada .extractPatterns (_dbbbe );_cfgf !=nil {return nil ,_cfgf ;};return _aada .Patterns ,nil ;};type OrganizationType uint8 ;func (_bcc *GenericRegion )overrideAtTemplate1 (_debfb ,_cdad ,_cgae ,_eegde ,_cbee int )int {_debfb &=0x1FF7;if _bcc .GBAtY [0]==0&&_bcc .GBAtX [0]>=-int8 (_cbee ){_debfb |=(_eegde >>uint (7-(int8 (_cbee )+_bcc .GBAtX [0]))&0x1)<<3;}else {_debfb |=int (_bcc .getPixel (_cdad +int (_bcc .GBAtX [0]),_cgae +int (_bcc .GBAtY [0])))<<3;};return _debfb ;};func (_bfbgf *TextRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _bfbgf .RegionBitmap !=nil {return _bfbgf .RegionBitmap ,nil ;};if !_bfbgf .IsHuffmanEncoded {if _eegg :=_bfbgf .setCodingStatistics ();_eegg !=nil {return nil ,_eegg ;};};if _begdg :=_bfbgf .createRegionBitmap ();_begdg !=nil {return nil ,_begdg ;};if _febg :=_bfbgf .decodeSymbolInstances ();_febg !=nil {return nil ,_febg ;};return _bfbgf .RegionBitmap ,nil ;};func (_dfec *PageInformationSegment )readIsStriped ()error {_abaaa ,_edfg :=_dfec ._agdfd .ReadBit ();if _edfg !=nil {return _edfg ;};if _abaaa ==1{_dfec .IsStripe =true ;};return nil ;};func (_aegd *PageInformationSegment )readCombinationOperator ()error {_fafe ,_bcdgc :=_aegd ._agdfd .ReadBits (2);if _bcdgc !=nil {return _bcdgc ;};_aegd ._aegb =_cb .CombinationOperator (int (_fafe ));return nil ;};func (_gcf *Header )readReferredToSegmentNumbers (_dfee _a .StreamReader ,_gceb int )([]int ,error ){const _fbce ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_ccab :=make ([]int ,_gceb );if _gceb > 0{_gcf .RTSegments =make ([]*Header ,_gceb );var (_fdbe uint64 ;_gfcg error ;);for _feefd :=0;_feefd < _gceb ;_feefd ++{_fdbe ,_gfcg =_dfee .ReadBits (byte (_gcf .referenceSize ())<<3);if _gfcg !=nil {return nil ,_ec .Wrapf (_gfcg ,_fbce ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_feefd );};_ccab [_feefd ]=int (_fdbe &_c .MaxInt32 );};};return _ccab ,nil ;};type RegionSegment struct{_bfa _a .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cb .CombinationOperator ;};func (_geeae *TextRegion )decodeDT ()(_cggg int64 ,_acag error ){if _geeae .IsHuffmanEncoded {if _geeae .SbHuffDT ==3{_cggg ,_acag =_geeae ._fdgbd .Decode (_geeae ._edbf );if _acag !=nil {return 0,_acag ;};}else {var _bdfg _bb .Tabler ;_bdfg ,_acag =_bb .GetStandardTable (11+int (_geeae .SbHuffDT ));if _acag !=nil {return 0,_acag ;};_cggg ,_acag =_bdfg .Decode (_geeae ._edbf );if _acag !=nil {return 0,_acag ;};};}else {var _daac int32 ;_daac ,_acag =_geeae ._ccec .DecodeInt (_geeae ._cege );if _acag !=nil {return ;};_cggg =int64 (_daac );};_cggg *=int64 (_geeae .SbStrips );return _cggg ,nil ;};func (_cagg *GenericRegion )decodeTemplate1 (_cgb ,_cgdd ,_cfga int ,_cffd ,_beae int )(_bacc error ){const _fdc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_efce ,_bdac int ;_cgab ,_egaa int ;_fcfa byte ;_cfea ,_geb int ;);if _cgb >=1{_fcfa ,_bacc =_cagg .Bitmap .GetByte (_beae );if _bacc !=nil {return _ec .Wrap (_bacc ,_fdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cgab =int (_fcfa );};if _cgb >=2{_fcfa ,_bacc =_cagg .Bitmap .GetByte (_beae -_cagg .Bitmap .RowStride );if _bacc !=nil {return _ec .Wrap (_bacc ,_fdc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_egaa =int (_fcfa )<<5;};_efce =((_cgab >>1)&0x1f8)|((_egaa >>1)&0x1e00);for _ggc :=0;_ggc < _cfga ;_ggc =_cfea {var (_bad byte ;_fdca int ;);_cfea =_ggc +8;if _dfe :=_cgdd -_ggc ;_dfe > 8{_fdca =8;}else {_fdca =_dfe ;};if _cgb > 0{_cgab <<=8;if _cfea < _cgdd {_fcfa ,_bacc =_cagg .Bitmap .GetByte (_beae +1);if _bacc !=nil {return _ec .Wrap (_bacc ,_fdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cgab |=int (_fcfa );};};if _cgb > 1{_egaa <<=8;if _cfea < _cgdd {_fcfa ,_bacc =_cagg .Bitmap .GetByte (_beae -_cagg .Bitmap .RowStride +1);if _bacc !=nil {return _ec .Wrap (_bacc ,_fdc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_egaa |=int (_fcfa )<<5;};};for _bgeb :=0;_bgeb < _fdca ;_bgeb ++{if _cagg ._cfaa {_bdac =_cagg .overrideAtTemplate1 (_efce ,_ggc +_bgeb ,_cgb ,int (_bad ),_bgeb );_cagg ._gaa .SetIndex (int32 (_bdac ));}else {_cagg ._gaa .SetIndex (int32 (_efce ));};_geb ,_bacc =_cagg ._ffb .DecodeBit (_cagg ._gaa );if _bacc !=nil {return _ec .Wrap (_bacc ,_fdc ,"");};_bad |=byte (_geb )<<uint (7-_bgeb );_daba :=uint (8-_bgeb );_efce =((_efce &0xefb)<<1)|_geb |((_cgab >>_daba )&0x8)|((_egaa >>_daba )&0x200);};if _gfbb :=_cagg .Bitmap .SetByte (_cffd ,_bad );_gfbb !=nil {return _ec .Wrap (_gfbb ,_fdc ,"");};_cffd ++;_beae ++;};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_ccaaf *SymbolDictionary )readRefinementAtPixels (_bcag int )error {_ccaaf .SdrATX =make ([]int8 ,_bcag );_ccaaf .SdrATY =make ([]int8 ,_bcag );var (_eeaa byte ;_gfda error ;);for _bdeg :=0;_bdeg < _bcag ;_bdeg ++{_eeaa ,_gfda =_ccaaf ._ffbe .ReadByte ();if _gfda !=nil {return _gfda ;};_ccaaf .SdrATX [_bdeg ]=int8 (_eeaa );_eeaa ,_gfda =_ccaaf ._ffbe .ReadByte ();if _gfda !=nil {return _gfda ;};_ccaaf .SdrATY [_bdeg ]=int8 (_eeaa );};return nil ;};func (_fgcee *SymbolDictionary )setSymbolsArray ()error {if _fgcee ._aaab ==nil {if _dcg :=_fgcee .retrieveImportSymbols ();_dcg !=nil {return _dcg ;};};if _fgcee ._gddg ==nil {_fgcee ._gddg =append (_fgcee ._gddg ,_fgcee ._aaab ...);};return nil ;};func _fed (_cca _a .StreamReader ,_fdgf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_gbb :_cca ,RegionInfo :NewRegionSegment (_cca ),_gf :_fdgf ,_gb :&template0 {},_de :&template1 {}};};func (_gggd *Header )pageSize ()uint {if _gggd .PageAssociation <=255{return 1;};return 4;};func (_ggaf *HalftoneRegion )computeX (_gea ,_gcdf int )int {return _ggaf .shiftAndFill (int (_ggaf .HGridX )+_gea *int (_ggaf .HRegionY )+_gcdf *int (_ggaf .HRegionX ));};func (_adbef *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _adbef .IsHuffmanEncoded {return _adbef .decodeHeightClassDeltaHeightWithHuffman ();};_fedb ,_ffcc :=_adbef ._aabc .DecodeInt (_adbef ._egdg );if _ffcc !=nil {return 0,_ffcc ;};return int64 (_fedb ),nil ;};func (_eeg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_eeg .Template .setIndex (_eeg ._f );return _eeg ._ecg .DecodeBit (_eeg ._f );};func (_edfeg *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cb .Points ,symbols *_cb .Bitmaps ,classIDs *_cf .IntSlice ,boxes *_cb .Boxes ,width ,height ,symBits int ){_edfeg .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_edfeg ._bedcg =globalSymbolsMap ;_edfeg ._fagb =localSymbolsMap ;_edfeg ._bbf =comps ;_edfeg ._edaab =inLL ;_edfeg ._dcgd =symbols ;_edfeg ._eeb =classIDs ;_edfeg ._gdgd =boxes ;_edfeg ._eggga =symBits ;};func (_bedc *TableSegment )HtRS ()int32 {return _bedc ._fagd };func (_dba *HalftoneRegion )parseHeader ()error {if _dfad :=_dba .RegionSegment .parseHeader ();_dfad !=nil {return _dfad ;};_gggc ,_gfd :=_dba ._ccbg .ReadBit ();if _gfd !=nil {return _gfd ;};_dba .HDefaultPixel =int8 (_gggc );_fgbe ,_gfd :=_dba ._ccbg .ReadBits (3);if _gfd !=nil {return _gfd ;};_dba .CombinationOperator =_cb .CombinationOperator (_fgbe &0xf);_gggc ,_gfd =_dba ._ccbg .ReadBit ();if _gfd !=nil {return _gfd ;};if _gggc ==1{_dba .HSkipEnabled =true ;};_fgbe ,_gfd =_dba ._ccbg .ReadBits (2);if _gfd !=nil {return _gfd ;};_dba .HTemplate =byte (_fgbe &0xf);_gggc ,_gfd =_dba ._ccbg .ReadBit ();if _gfd !=nil {return _gfd ;};if _gggc ==1{_dba .IsMMREncoded =true ;};_fgbe ,_gfd =_dba ._ccbg .ReadBits (32);if _gfd !=nil {return _gfd ;};_dba .HGridWidth =uint32 (_fgbe &_c .MaxUint32 );_fgbe ,_gfd =_dba ._ccbg .ReadBits (32);if _gfd !=nil {return _gfd ;};_dba .HGridHeight =uint32 (_fgbe &_c .MaxUint32 );_fgbe ,_gfd =_dba ._ccbg .ReadBits (32);if _gfd !=nil {return _gfd ;};_dba .HGridX =int32 (_fgbe &_c .MaxInt32 );_fgbe ,_gfd =_dba ._ccbg .ReadBits (32);if _gfd !=nil {return _gfd ;};_dba .HGridY =int32 (_fgbe &_c .MaxInt32 );_fgbe ,_gfd =_dba ._ccbg .ReadBits (16);if _gfd !=nil {return _gfd ;};_dba .HRegionX =uint16 (_fgbe &_c .MaxUint16 );_fgbe ,_gfd =_dba ._ccbg .ReadBits (16);if _gfd !=nil {return _gfd ;};_dba .HRegionY =uint16 (_fgbe &_c .MaxUint16 );if _gfd =_dba .computeSegmentDataStructure ();_gfd !=nil {return _gfd ;};return _dba .checkInput ();};func (_abbg *PageInformationSegment )readResolution ()error {_bcabb ,_ddec :=_abbg ._agdfd .ReadBits (32);if _ddec !=nil {return _ddec ;};_abbg .ResolutionX =int (_bcabb &_c .MaxInt32 );_bcabb ,_ddec =_abbg ._agdfd .ReadBits (32);if _ddec !=nil {return _ddec ;};_abbg .ResolutionY =int (_bcabb &_c .MaxInt32 );return nil ;};func (_gcfa *PageInformationSegment )CombinationOperator ()_cb .CombinationOperator {return _gcfa ._aegb ;};func (_geca *TableSegment )Init (h *Header ,r _a .StreamReader )error {_geca ._dcdg =r ;return _geca .parseHeader ();};func (_cff *GenericRefinementRegion )Init (header *Header ,r _a .StreamReader )error {_cff ._gf =header ;_cff ._gbb =r ;_cff .RegionInfo =NewRegionSegment (r );return _cff .parseHeader ();};func (_aega *GenericRegion )decodeLine (_becf ,_afb ,_agad int )error {const _bdd ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_acg :=_aega .Bitmap .GetByteIndex (0,_becf );_egaf :=_acg -_aega .Bitmap .RowStride ;switch _aega .GBTemplate {case 0:if !_aega .UseExtTemplates {return _aega .decodeTemplate0a (_becf ,_afb ,_agad ,_acg ,_egaf );};return _aega .decodeTemplate0b (_becf ,_afb ,_agad ,_acg ,_egaf );case 1:return _aega .decodeTemplate1 (_becf ,_afb ,_agad ,_acg ,_egaf );case 2:return _aega .decodeTemplate2 (_becf ,_afb ,_agad ,_acg ,_egaf );case 3:return _aega .decodeTemplate3 (_becf ,_afb ,_agad ,_acg ,_egaf );};return _ec .Errorf (_bdd ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_aega .GBTemplate );};var _ templater =&template1 {};func (_efg *PatternDictionary )readIsMMREncoded ()error {_fga ,_bgbag :=_efg ._cdeg .ReadBit ();if _bgbag !=nil {return _bgbag ;};if _fga !=0{_efg .IsMMREncoded =true ;};return nil ;};func (_gfea *GenericRegion )String ()string {_aefc :=&_ba .Builder {};_aefc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_aefc .WriteString (_gfea .RegionSegment .String ()+"\u000a");_aefc .WriteString (_da .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gfea .UseExtTemplates ));_aefc .WriteString (_da .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gfea .IsTPGDon ));_aefc .WriteString (_da .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gfea .GBTemplate ));_aefc .WriteString (_da .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gfea .IsMMREncoded ));_aefc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gfea .GBAtX ));_aefc .WriteString (_da .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gfea .GBAtY ));_aefc .WriteString (_da .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gfea .GBAtOverride ));return _aefc .String ();};func (_gffc *TextRegion )decodeSymbolInstances ()error {_cbbf ,_ggffc :=_gffc .decodeStripT ();if _ggffc !=nil {return _ggffc ;};var (_dcff int64 ;_afgc uint32 ;);for _afgc < _gffc .NumberOfSymbolInstances {_ggfe ,_egdb :=_gffc .decodeDT ();if _egdb !=nil {return _egdb ;};_cbbf +=_ggfe ;var _fbbf int64 ;_aebe :=true ;_gffc ._dbgf =0;for {if _aebe {_fbbf ,_egdb =_gffc .decodeDfs ();if _egdb !=nil {return _egdb ;};_dcff +=_fbbf ;_gffc ._dbgf =_dcff ;_aebe =false ;}else {_gfeb ,_efebf :=_gffc .decodeIds ();if _ag .Is (_efebf ,_dg .ErrOOB ){break ;};if _efebf !=nil {return _efebf ;};if _afgc >=_gffc .NumberOfSymbolInstances {break ;};_gffc ._dbgf +=_gfeb +int64 (_gffc .SbDsOffset );};_efgg ,_ebgg :=_gffc .decodeCurrentT ();if _ebgg !=nil {return _ebgg ;};_gfce :=_cbbf +_efgg ;_cbeeg ,_ebgg :=_gffc .decodeID ();if _ebgg !=nil {return _ebgg ;};_dgfg ,_ebgg :=_gffc .decodeRI ();if _ebgg !=nil {return _ebgg ;};_ecec ,_ebgg :=_gffc .decodeIb (_dgfg ,_cbeeg );if _ebgg !=nil {return _ebgg ;};if _ebgg =_gffc .blit (_ecec ,_gfce );_ebgg !=nil {return _ebgg ;};_afgc ++;};};return nil ;};func (_ffda *SymbolDictionary )setExportedSymbols (_adbec []int ){for _efeb :=uint32 (0);_efeb < _ffda ._gafd +_ffda .NumberOfNewSymbols ;_efeb ++{if _adbec [_efeb ]==1{var _ede *_cb .Bitmap ;if _efeb < _ffda ._gafd {_ede =_ffda ._aaab [_efeb ];}else {_ede =_ffda ._cadg [_efeb -_ffda ._gafd ];};_af .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_ede );_ffda ._dedd =append (_ffda ._dedd ,_ede );};};};func (_afce *TextRegion )decodeIb (_fbec ,_dbcg int64 )(*_cb .Bitmap ,error ){const _fcga ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dbac error ;_ffaa *_cb .Bitmap ;);if _fbec ==0{if int (_dbcg )> len (_afce .Symbols )-1{return nil ,_ec .Error (_fcga ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _afce .Symbols [int (_dbcg )],nil ;};var _fgef ,_dfab ,_cccf ,_dfce int64 ;_fgef ,_dbac =_afce .decodeRdw ();if _dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"");};_dfab ,_dbac =_afce .decodeRdh ();if _dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"");};_cccf ,_dbac =_afce .decodeRdx ();if _dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"");};_dfce ,_dbac =_afce .decodeRdy ();if _dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"");};if _afce .IsHuffmanEncoded {if _ ,_dbac =_afce .decodeSymInRefSize ();_dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"");};_afce ._edbf .Align ();};_aacca :=_afce .Symbols [_dbcg ];_gbdb :=uint32 (_aacca .Width );_ceaa :=uint32 (_aacca .Height );_cbba :=int32 (uint32 (_fgef )>>1)+int32 (_cccf );_eecg :=int32 (uint32 (_dfab )>>1)+int32 (_dfce );if _afce ._fdbee ==nil {_afce ._fdbee =_fed (_afce ._edbf ,nil );};_afce ._fdbee .setParameters (_afce ._eeeg ,_afce ._ccec ,_afce .SbrTemplate ,_gbdb +uint32 (_fgef ),_ceaa +uint32 (_dfab ),_aacca ,_cbba ,_eecg ,false ,_afce .SbrATX ,_afce .SbrATY );_ffaa ,_dbac =_afce ._fdbee .GetRegionBitmap ();if _dbac !=nil {return nil ,_ec .Wrap (_dbac ,_fcga ,"\u0067\u0072\u0066");};if _afce .IsHuffmanEncoded {_afce ._edbf .Align ();};return _ffaa ,nil ;};func (_dae *EndOfStripe )Init (h *Header ,r _a .StreamReader )error {_dae ._g =r ;return _dae .parseHeader (h ,r );};func (_bade *Header )CleanSegmentData (){if _bade .SegmentData !=nil {_bade .SegmentData =nil ;};};func (_ebfc *TextRegion )getUserTable (_ffed int )(_bb .Tabler ,error ){const _eefe ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bfea int ;for _ ,_fdcfb :=range _ebfc .Header .RTSegments {if _fdcfb .Type ==53{if _bfea ==_ffed {_ebac ,_fdfa :=_fdcfb .GetSegmentData ();if _fdfa !=nil {return nil ,_fdfa ;};_adage ,_eagf :=_ebac .(*TableSegment );if !_eagf {_af .Log .Debug (_da .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fdcfb .SegmentNumber ));return nil ,_ec .Error (_eefe ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _bb .NewEncodedTable (_adage );};_bfea ++;};};return nil ,nil ;};func (_gdab *SymbolDictionary )checkInput ()error {if _gdab .SdHuffDecodeHeightSelection ==2{_af .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_gdab .SdHuffDecodeHeightSelection );};if _gdab .SdHuffDecodeWidthSelection ==2{_af .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_gdab .SdHuffDecodeWidthSelection );};if _gdab .IsHuffmanEncoded {if _gdab .SdTemplate !=0{_af .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_gdab .SdTemplate );};if !_gdab .UseRefinementAggregation {if !_gdab .UseRefinementAggregation {if _gdab ._dbeb {_af .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_gdab ._dbeb =false ;};if _gdab ._fcag {_af .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_gdab ._fcag =false ;};};};}else {if _gdab .SdHuffBMSizeSelection !=0{_af .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_gdab .SdHuffBMSizeSelection =0;};if _gdab .SdHuffDecodeWidthSelection !=0{_af .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_gdab .SdHuffDecodeWidthSelection =0;};if _gdab .SdHuffDecodeHeightSelection !=0{_af .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_gdab .SdHuffDecodeHeightSelection =0;};};if !_gdab .UseRefinementAggregation {if _gdab .SdrTemplate !=0{_af .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gdab .SdrTemplate );_gdab .SdrTemplate =0;};};if !_gdab .IsHuffmanEncoded ||!_gdab .UseRefinementAggregation {if _gdab .SdHuffAggInstanceSelection {_af .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gdab .SdHuffAggInstanceSelection );};};return nil ;};func NewHeader (d Documenter ,r _a .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_acbe :=&Header {Reader :r };if _gcgce :=_acbe .parse (d ,r ,offset ,organizationType );_gcgce !=nil {return nil ,_ec .Wrap (_gcgce ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _acbe ,nil ;};func (_bdcc *RegionSegment )Size ()int {return 17};func (_bcef *PageInformationSegment )readContainsRefinement ()error {_ffgg ,_affe :=_bcef ._agdfd .ReadBit ();if _affe !=nil {return _affe ;};if _ffgg ==1{_bcef ._agac =true ;};return nil ;};func (_eafdf *TableSegment )parseHeader ()error {var (_dbag int ;_efbg uint64 ;_agcca error ;);_dbag ,_agcca =_eafdf ._dcdg .ReadBit ();if _agcca !=nil {return _agcca ;};if _dbag ==1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_dbag );};if _efbg ,_agcca =_eafdf ._dcdg .ReadBits (3);_agcca !=nil {return _agcca ;};_eafdf ._fagd =(int32 (_efbg )+1)&0xf;if _efbg ,_agcca =_eafdf ._dcdg .ReadBits (3);_agcca !=nil {return _agcca ;};_eafdf ._bded =(int32 (_efbg )+1)&0xf;if _efbg ,_agcca =_eafdf ._dcdg .ReadBits (32);_agcca !=nil {return _agcca ;};_eafdf ._bgcaa =int32 (_efbg &_c .MaxInt32 );if _efbg ,_agcca =_eafdf ._dcdg .ReadBits (32);_agcca !=nil {return _agcca ;};_eafdf ._ggdd =int32 (_efbg &_c .MaxInt32 );return nil ;};func (_gec *SymbolDictionary )encodeNumSyms (_efdd _a .BinaryWriter )(_bege int ,_dagcf error ){const _fbgg ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_deff :=make ([]byte ,4);_d .BigEndian .PutUint32 (_deff ,_gec .NumberOfExportedSymbols );if _bege ,_dagcf =_efdd .Write (_deff );_dagcf !=nil {return _bege ,_ec .Wrap (_dagcf ,_fbgg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_d .BigEndian .PutUint32 (_deff ,_gec .NumberOfNewSymbols );_bceag ,_dagcf :=_efdd .Write (_deff );if _dagcf !=nil {return _bege ,_ec .Wrap (_dagcf ,_fbgg ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bege +_bceag ,nil ;};func (_acea *SymbolDictionary )encodeATFlags (_fafg _a .BinaryWriter )(_efcf int ,_gagb error ){const _ddcb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _acea .IsHuffmanEncoded ||_acea .SdTemplate !=0{return 0,nil ;};_bcea :=4;if _acea .SdTemplate !=0{_bcea =1;};for _agaf :=0;_agaf < _bcea ;_agaf ++{if _gagb =_fafg .WriteByte (byte (_acea .SdATX [_agaf ]));_gagb !=nil {return _efcf ,_ec .Wrapf (_gagb ,_ddcb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_agaf );};_efcf ++;if _gagb =_fafg .WriteByte (byte (_acea .SdATY [_agaf ]));_gagb !=nil {return _efcf ,_ec .Wrapf (_gagb ,_ddcb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_agaf );};_efcf ++;};return _efcf ,nil ;};func (_fge *GenericRegion )computeSegmentDataStructure ()error {_fge .DataOffset =_fge ._eae .StreamPosition ();_fge .DataHeaderLength =_fge .DataOffset -_fge .DataHeaderOffset ;_fge .DataLength =int64 (_fge ._eae .Length ())-_fge .DataHeaderLength ;return nil ;};func (_edgd *TableSegment )HtOOB ()int32 {return _edgd ._gadff };func (_fcc *SymbolDictionary )decodeHeightClassBitmap (_gdfe *_cb .Bitmap ,_dcdd int64 ,_bgdd int ,_cebg []int )error {for _cgacf :=_dcdd ;_cgacf < int64 (_fcc ._eedd );_cgacf ++{var _cbd int ;for _aeef :=_dcdd ;_aeef <=_cgacf -1;_aeef ++{_cbd +=_cebg [_aeef ];};_eacc :=_e .Rect (_cbd ,0,_cbd +_cebg [_cgacf ],_bgdd );_fagg ,_agcb :=_cb .Extract (_eacc ,_gdfe );if _agcb !=nil {return _agcb ;};_fcc ._cadg [_cgacf ]=_fagg ;_fcc ._gddg =append (_fcc ._gddg ,_fagg );};return nil ;};func (_ffae *SymbolDictionary )getSbSymCodeLen ()int8 {_cbff :=int8 (_c .Ceil (_c .Log (float64 (_ffae ._gafd +_ffae .NumberOfNewSymbols ))/_c .Log (2)));if _ffae .IsHuffmanEncoded &&_cbff < 1{return 1;};return _cbff ;};func (_ebb *TextRegion )Init (header *Header ,r _a .StreamReader )error {_ebb .Header =header ;_ebb ._edbf =r ;_ebb .RegionInfo =NewRegionSegment (_ebb ._edbf );return _ebb .parseHeader ();};